2023-04-17 19:20:42,988 INFO com.yuripe.normalizator.NormalypApplicationTests [main] Starting NormalypApplicationTests using Java 17.0.2 on YPNB with PID 4696 (started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 19:20:42,995 DEBUG com.yuripe.normalizator.NormalypApplicationTests [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 19:20:42,996 INFO com.yuripe.normalizator.NormalypApplicationTests [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 19:20:44,990 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@4cc12db2
2023-04-17 19:20:44,991 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@4cc12db2
2023-04-17 19:20:44,992 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4cc12db2
2023-04-17 19:20:44,994 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@785ed99c
2023-04-17 19:20:44,994 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@272778ae
2023-04-17 19:20:44,995 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@6842c101
2023-04-17 19:20:44,996 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@32ab408e
2023-04-17 19:20:44,996 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@32ab408e
2023-04-17 19:20:44,997 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@32ab408e
2023-04-17 19:20:44,998 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@1373e3ee
2023-04-17 19:20:44,998 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@1373e3ee
2023-04-17 19:20:44,998 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1373e3ee
2023-04-17 19:20:45,000 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@4fb64a52
2023-04-17 19:20:45,000 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@4fb64a52
2023-04-17 19:20:45,000 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4fb64a52
2023-04-17 19:20:45,002 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@2f0ccb34
2023-04-17 19:20:45,002 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@2f0ccb34
2023-04-17 19:20:45,004 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2f0ccb34
2023-04-17 19:20:45,006 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@6650a6c
2023-04-17 19:20:45,006 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@6650a6c
2023-04-17 19:20:45,007 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@6650a6c
2023-04-17 19:20:45,008 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@111cba40
2023-04-17 19:20:45,008 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@111cba40
2023-04-17 19:20:45,010 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@111cba40
2023-04-17 19:20:45,011 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@14d8e132
2023-04-17 19:20:45,011 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@14d8e132
2023-04-17 19:20:45,012 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@14d8e132
2023-04-17 19:20:45,013 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@50cdfafa
2023-04-17 19:20:45,013 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@50cdfafa
2023-04-17 19:20:45,014 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@129c4d19
2023-04-17 19:20:45,014 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@129c4d19
2023-04-17 19:20:45,016 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@49232c6f
2023-04-17 19:20:45,016 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@49232c6f
2023-04-17 19:20:45,017 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7781263c
2023-04-17 19:20:45,018 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6b9c42bd
2023-04-17 19:20:45,019 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@a3cba3a
2023-04-17 19:20:45,019 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@a3cba3a
2023-04-17 19:20:45,020 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@6169be09
2023-04-17 19:20:45,020 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6169be09
2023-04-17 19:20:45,022 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@49c1e294
2023-04-17 19:20:45,023 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@49c1e294
2023-04-17 19:20:45,024 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2d4a3e13
2023-04-17 19:20:45,024 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2d4a3e13
2023-04-17 19:20:45,025 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2d206a71
2023-04-17 19:20:45,025 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2d206a71
2023-04-17 19:20:45,026 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@565d7d2f
2023-04-17 19:20:45,026 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@565d7d2f
2023-04-17 19:20:45,029 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@42a0786f
2023-04-17 19:20:45,029 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@42a0786f
2023-04-17 19:20:45,031 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@46bb0bdf
2023-04-17 19:20:45,031 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@46bb0bdf
2023-04-17 19:20:45,033 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@20256a0b
2023-04-17 19:20:45,033 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@20256a0b
2023-04-17 19:20:45,036 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@5e193ef5
2023-04-17 19:20:45,037 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@5e193ef5
2023-04-17 19:20:45,039 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@115c946b
2023-04-17 19:20:45,039 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@115c946b
2023-04-17 19:20:45,040 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@5122e4bf
2023-04-17 19:20:45,041 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5122e4bf
2023-04-17 19:20:45,041 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5122e4bf
2023-04-17 19:20:45,042 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@27f71195
2023-04-17 19:20:45,043 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@527937d0
2023-04-17 19:20:45,043 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@527937d0
2023-04-17 19:20:45,044 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@527937d0
2023-04-17 19:20:45,045 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@255d9277
2023-04-17 19:20:45,046 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7d484fcd
2023-04-17 19:20:45,047 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@578c3fd9
2023-04-17 19:20:45,049 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@578c3fd9
2023-04-17 19:20:45,050 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@13192275
2023-04-17 19:20:45,050 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@13192275
2023-04-17 19:20:45,051 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@4b4969ea
2023-04-17 19:20:45,051 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4b4969ea
2023-04-17 19:20:45,054 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@1eb85a47
2023-04-17 19:20:45,054 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1eb85a47
2023-04-17 19:20:45,056 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4863c8ac
2023-04-17 19:20:45,056 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4863c8ac
2023-04-17 19:20:45,057 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1edfedf1
2023-04-17 19:20:45,060 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@2fde9469
2023-04-17 19:20:45,061 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@2fde9469
2023-04-17 19:20:45,062 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@2fde9469
2023-04-17 19:20:45,063 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3344d163
2023-04-17 19:20:45,063 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3344d163
2023-04-17 19:20:45,064 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3344d163
2023-04-17 19:20:45,065 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@1e495414
2023-04-17 19:20:45,066 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@30508066
2023-04-17 19:20:45,068 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@73a845cb
2023-04-17 19:20:45,068 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@73a845cb
2023-04-17 19:20:45,069 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@73a845cb
2023-04-17 19:20:45,070 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@25a5c8e
2023-04-17 19:20:45,070 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@25a5c8e
2023-04-17 19:20:45,071 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@25a5c8e
2023-04-17 19:20:45,072 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@14e750c5
2023-04-17 19:20:45,073 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@77324a58
2023-04-17 19:20:45,077 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@6321a5aa
2023-04-17 19:20:45,077 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6321a5aa
2023-04-17 19:20:45,078 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7b297740
2023-04-17 19:20:45,080 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@53125718
2023-04-17 19:20:45,081 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@53125718
2023-04-17 19:20:45,083 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@ad3f70a
2023-04-17 19:20:45,084 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@ad3f70a
2023-04-17 19:20:45,085 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7761e342
2023-04-17 19:20:45,085 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2d237460
2023-04-17 19:20:45,087 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@9785903
2023-04-17 19:20:45,091 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@71c0b742
2023-04-17 19:20:45,091 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@71c0b742
2023-04-17 19:20:45,092 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@65600fb3
2023-04-17 19:20:45,093 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@25ce435
2023-04-17 19:20:45,094 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7ea71fc2
2023-04-17 19:20:45,094 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@19ad75e5
2023-04-17 19:20:45,095 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7cd5fcf4
2023-04-17 19:20:45,095 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@19cdc217
2023-04-17 19:20:45,095 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f5297e3
2023-04-17 19:20:45,095 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2d22d3b1
2023-04-17 19:20:48,283 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e98b933] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@222d9d4f]
2023-04-17 19:20:48,682 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 19:20:48,686 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 19:20:48,686 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e98b933] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5600a278]
2023-04-17 19:20:55,304 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5600a278] for TypeConfiguration
2023-04-17 19:20:57,607 INFO com.yuripe.normalizator.NormalypApplicationTests [main] Started NormalypApplicationTests in 14.881 seconds (JVM running for 16.035)
2023-04-17 19:20:57,872 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [SpringApplicationShutdownHook] Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5600a278] for TypeConfiguration
2023-04-17 19:20:57,873 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [SpringApplicationShutdownHook] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@37693efc] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5600a278]
2023-04-17 19:24:40,354 INFO com.yuripe.normalizator.NormalypApplicationTests [main] Starting NormalypApplicationTests using Java 17.0.2 on YPNB with PID 6044 (started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 19:24:40,357 DEBUG com.yuripe.normalizator.NormalypApplicationTests [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 19:24:40,357 INFO com.yuripe.normalizator.NormalypApplicationTests [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 19:24:42,212 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@2c06b113
2023-04-17 19:24:42,214 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@2c06b113
2023-04-17 19:24:42,214 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2c06b113
2023-04-17 19:24:42,215 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@272778ae
2023-04-17 19:24:42,216 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@6842c101
2023-04-17 19:24:42,217 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47fcefb3
2023-04-17 19:24:42,218 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@571a663c
2023-04-17 19:24:42,218 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@571a663c
2023-04-17 19:24:42,219 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@571a663c
2023-04-17 19:24:42,220 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@497ed877
2023-04-17 19:24:42,221 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@497ed877
2023-04-17 19:24:42,222 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@497ed877
2023-04-17 19:24:42,223 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@77083e41
2023-04-17 19:24:42,224 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@77083e41
2023-04-17 19:24:42,224 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@77083e41
2023-04-17 19:24:42,226 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@29c53c4f
2023-04-17 19:24:42,226 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@29c53c4f
2023-04-17 19:24:42,227 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@29c53c4f
2023-04-17 19:24:42,230 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@5a30722c
2023-04-17 19:24:42,230 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@5a30722c
2023-04-17 19:24:42,230 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@5a30722c
2023-04-17 19:24:42,231 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@27898e13
2023-04-17 19:24:42,232 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@27898e13
2023-04-17 19:24:42,232 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@27898e13
2023-04-17 19:24:42,233 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@5fd43e58
2023-04-17 19:24:42,233 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@5fd43e58
2023-04-17 19:24:42,233 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5fd43e58
2023-04-17 19:24:42,235 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@509a6095
2023-04-17 19:24:42,235 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@509a6095
2023-04-17 19:24:42,237 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3ab595c8
2023-04-17 19:24:42,237 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3ab595c8
2023-04-17 19:24:42,238 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@7781263c
2023-04-17 19:24:42,238 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@7781263c
2023-04-17 19:24:42,239 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6b9c42bd
2023-04-17 19:24:42,240 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e53c4ad
2023-04-17 19:24:42,241 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@7d133fb7
2023-04-17 19:24:42,242 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7d133fb7
2023-04-17 19:24:42,243 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@1ee40b5c
2023-04-17 19:24:42,243 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1ee40b5c
2023-04-17 19:24:42,246 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@124eb83d
2023-04-17 19:24:42,246 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@124eb83d
2023-04-17 19:24:42,247 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6aae0e6f
2023-04-17 19:24:42,247 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6aae0e6f
2023-04-17 19:24:42,248 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1e2445f6
2023-04-17 19:24:42,249 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1e2445f6
2023-04-17 19:24:42,249 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@45c80312
2023-04-17 19:24:42,250 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@45c80312
2023-04-17 19:24:42,251 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@39652a30
2023-04-17 19:24:42,251 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@39652a30
2023-04-17 19:24:42,252 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@629075f4
2023-04-17 19:24:42,252 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@629075f4
2023-04-17 19:24:42,254 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27e199ce
2023-04-17 19:24:42,255 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27e199ce
2023-04-17 19:24:42,257 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@61da0413
2023-04-17 19:24:42,257 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@61da0413
2023-04-17 19:24:42,259 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@3e43f049
2023-04-17 19:24:42,259 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3e43f049
2023-04-17 19:24:42,261 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@27f71195
2023-04-17 19:24:42,261 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@27f71195
2023-04-17 19:24:42,261 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@27f71195
2023-04-17 19:24:42,263 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2c8b8de0
2023-04-17 19:24:42,264 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@3f048c86
2023-04-17 19:24:42,264 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3f048c86
2023-04-17 19:24:42,264 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3f048c86
2023-04-17 19:24:42,265 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2ce524d2
2023-04-17 19:24:42,266 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@78116659
2023-04-17 19:24:42,267 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@125f16b2
2023-04-17 19:24:42,267 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@125f16b2
2023-04-17 19:24:42,268 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@2aee0704
2023-04-17 19:24:42,268 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2aee0704
2023-04-17 19:24:42,270 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@9b367c8
2023-04-17 19:24:42,270 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@9b367c8
2023-04-17 19:24:42,271 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@54495935
2023-04-17 19:24:42,271 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@54495935
2023-04-17 19:24:42,272 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1edfedf1
2023-04-17 19:24:42,272 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1edfedf1
2023-04-17 19:24:42,273 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1e56bc9b
2023-04-17 19:24:42,274 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@20cff21e
2023-04-17 19:24:42,274 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@20cff21e
2023-04-17 19:24:42,274 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@20cff21e
2023-04-17 19:24:42,275 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6af87130
2023-04-17 19:24:42,277 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6af87130
2023-04-17 19:24:42,277 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6af87130
2023-04-17 19:24:42,279 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@30508066
2023-04-17 19:24:42,279 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@1bee0085
2023-04-17 19:24:42,280 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5403907
2023-04-17 19:24:42,280 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5403907
2023-04-17 19:24:42,280 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5403907
2023-04-17 19:24:42,281 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@14e750c5
2023-04-17 19:24:42,282 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@14e750c5
2023-04-17 19:24:42,282 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@14e750c5
2023-04-17 19:24:42,282 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@77324a58
2023-04-17 19:24:42,283 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@66713605
2023-04-17 19:24:42,284 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@7b297740
2023-04-17 19:24:42,285 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7b297740
2023-04-17 19:24:42,286 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e0ad709
2023-04-17 19:24:42,287 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@35563e4c
2023-04-17 19:24:42,287 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@35563e4c
2023-04-17 19:24:42,289 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@7761e342
2023-04-17 19:24:42,289 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7761e342
2023-04-17 19:24:42,289 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2d237460
2023-04-17 19:24:42,290 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2f4d32bf
2023-04-17 19:24:42,291 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4f811029
2023-04-17 19:24:42,294 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@65600fb3
2023-04-17 19:24:42,294 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@65600fb3
2023-04-17 19:24:42,295 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7cd5fcf4
2023-04-17 19:24:42,295 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@19cdc217
2023-04-17 19:24:42,295 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5f5297e3
2023-04-17 19:24:42,295 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2d22d3b1
2023-04-17 19:24:42,295 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7ec3a8bd
2023-04-17 19:24:42,297 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@9690008
2023-04-17 19:24:42,297 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@42cf6349
2023-04-17 19:24:42,297 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@79cb8ffa
2023-04-17 19:24:46,258 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71e7830a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3feebf9c]
2023-04-17 19:24:46,652 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 19:24:46,654 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 19:24:46,655 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71e7830a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6eb00cbe]
2023-04-17 19:24:53,986 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6eb00cbe] for TypeConfiguration
2023-04-17 19:24:56,918 INFO com.yuripe.normalizator.NormalypApplicationTests [main] Started NormalypApplicationTests in 16.786 seconds (JVM running for 17.903)
2023-04-17 19:24:57,250 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [SpringApplicationShutdownHook] Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6eb00cbe] for TypeConfiguration
2023-04-17 19:24:57,251 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [SpringApplicationShutdownHook] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2ac6bf97] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6eb00cbe]
2023-04-17 19:58:55,890 INFO com.yuripe.normalizator.NormalypApplicationTests [main] Starting NormalypApplicationTests using Java 17.0.2 on YPNB with PID 11260 (started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 19:58:55,895 DEBUG com.yuripe.normalizator.NormalypApplicationTests [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 19:58:55,896 INFO com.yuripe.normalizator.NormalypApplicationTests [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 19:58:57,637 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@2c06b113
2023-04-17 19:58:57,638 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@2c06b113
2023-04-17 19:58:57,638 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2c06b113
2023-04-17 19:58:57,639 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@272778ae
2023-04-17 19:58:57,639 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@6842c101
2023-04-17 19:58:57,640 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47fcefb3
2023-04-17 19:58:57,641 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@571a663c
2023-04-17 19:58:57,641 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@571a663c
2023-04-17 19:58:57,641 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@571a663c
2023-04-17 19:58:57,642 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@497ed877
2023-04-17 19:58:57,642 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@497ed877
2023-04-17 19:58:57,643 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@497ed877
2023-04-17 19:58:57,644 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@77083e41
2023-04-17 19:58:57,644 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@77083e41
2023-04-17 19:58:57,644 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@77083e41
2023-04-17 19:58:57,645 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@29c53c4f
2023-04-17 19:58:57,646 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@29c53c4f
2023-04-17 19:58:57,646 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@29c53c4f
2023-04-17 19:58:57,647 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@5a30722c
2023-04-17 19:58:57,647 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@5a30722c
2023-04-17 19:58:57,647 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@5a30722c
2023-04-17 19:58:57,648 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@27898e13
2023-04-17 19:58:57,648 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@27898e13
2023-04-17 19:58:57,648 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@27898e13
2023-04-17 19:58:57,649 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@5fd43e58
2023-04-17 19:58:57,649 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@5fd43e58
2023-04-17 19:58:57,649 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5fd43e58
2023-04-17 19:58:57,650 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@509a6095
2023-04-17 19:58:57,651 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@509a6095
2023-04-17 19:58:57,652 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3ab595c8
2023-04-17 19:58:57,652 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3ab595c8
2023-04-17 19:58:57,653 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@7781263c
2023-04-17 19:58:57,653 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@7781263c
2023-04-17 19:58:57,654 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6b9c42bd
2023-04-17 19:58:57,654 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e53c4ad
2023-04-17 19:58:57,655 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@7d133fb7
2023-04-17 19:58:57,655 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7d133fb7
2023-04-17 19:58:57,656 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@1ee40b5c
2023-04-17 19:58:57,657 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1ee40b5c
2023-04-17 19:58:57,658 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@124eb83d
2023-04-17 19:58:57,658 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@124eb83d
2023-04-17 19:58:57,659 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6aae0e6f
2023-04-17 19:58:57,659 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6aae0e6f
2023-04-17 19:58:57,660 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1e2445f6
2023-04-17 19:58:57,660 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1e2445f6
2023-04-17 19:58:57,661 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@45c80312
2023-04-17 19:58:57,661 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@45c80312
2023-04-17 19:58:57,663 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@39652a30
2023-04-17 19:58:57,663 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@39652a30
2023-04-17 19:58:57,664 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@629075f4
2023-04-17 19:58:57,664 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@629075f4
2023-04-17 19:58:57,666 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27e199ce
2023-04-17 19:58:57,666 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27e199ce
2023-04-17 19:58:57,667 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@61da0413
2023-04-17 19:58:57,667 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@61da0413
2023-04-17 19:58:57,668 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@3e43f049
2023-04-17 19:58:57,668 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3e43f049
2023-04-17 19:58:57,670 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@27f71195
2023-04-17 19:58:57,670 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@27f71195
2023-04-17 19:58:57,670 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@27f71195
2023-04-17 19:58:57,672 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2c8b8de0
2023-04-17 19:58:57,673 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@3f048c86
2023-04-17 19:58:57,673 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3f048c86
2023-04-17 19:58:57,674 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3f048c86
2023-04-17 19:58:57,674 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2ce524d2
2023-04-17 19:58:57,675 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@78116659
2023-04-17 19:58:57,676 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@125f16b2
2023-04-17 19:58:57,676 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@125f16b2
2023-04-17 19:58:57,677 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@2aee0704
2023-04-17 19:58:57,678 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2aee0704
2023-04-17 19:58:57,679 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@9b367c8
2023-04-17 19:58:57,679 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@9b367c8
2023-04-17 19:58:57,680 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@54495935
2023-04-17 19:58:57,681 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@54495935
2023-04-17 19:58:57,681 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1edfedf1
2023-04-17 19:58:57,682 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1edfedf1
2023-04-17 19:58:57,682 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1e56bc9b
2023-04-17 19:58:57,683 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@20cff21e
2023-04-17 19:58:57,684 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@20cff21e
2023-04-17 19:58:57,684 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@20cff21e
2023-04-17 19:58:57,685 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6af87130
2023-04-17 19:58:57,685 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6af87130
2023-04-17 19:58:57,685 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6af87130
2023-04-17 19:58:57,687 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@30508066
2023-04-17 19:58:57,687 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@1bee0085
2023-04-17 19:58:57,688 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5403907
2023-04-17 19:58:57,688 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5403907
2023-04-17 19:58:57,688 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5403907
2023-04-17 19:58:57,689 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@14e750c5
2023-04-17 19:58:57,689 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@14e750c5
2023-04-17 19:58:57,690 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@14e750c5
2023-04-17 19:58:57,690 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@77324a58
2023-04-17 19:58:57,691 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@66713605
2023-04-17 19:58:57,692 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@7b297740
2023-04-17 19:58:57,693 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7b297740
2023-04-17 19:58:57,693 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e0ad709
2023-04-17 19:58:57,694 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@35563e4c
2023-04-17 19:58:57,695 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@35563e4c
2023-04-17 19:58:57,696 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@7761e342
2023-04-17 19:58:57,696 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7761e342
2023-04-17 19:58:57,697 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2d237460
2023-04-17 19:58:57,697 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2f4d32bf
2023-04-17 19:58:57,698 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4f811029
2023-04-17 19:58:57,701 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@65600fb3
2023-04-17 19:58:57,701 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@65600fb3
2023-04-17 19:58:57,701 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7cd5fcf4
2023-04-17 19:58:57,702 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@19cdc217
2023-04-17 19:58:57,702 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5f5297e3
2023-04-17 19:58:57,702 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2d22d3b1
2023-04-17 19:58:57,703 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7ec3a8bd
2023-04-17 19:58:57,703 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@9690008
2023-04-17 19:58:57,703 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@42cf6349
2023-04-17 19:58:57,703 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@79cb8ffa
2023-04-17 19:59:01,066 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a4df251] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71e7830a]
2023-04-17 19:59:01,413 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 19:59:01,415 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 19:59:01,415 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a4df251] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2890e479]
2023-04-17 19:59:01,844 DEBUG org.hibernate.SQL [main] 
    
    alter table cars 
       drop 
       foreign key FKka5k9imvtuqq38tgwh4oglwoo
2023-04-17 19:59:02,554 DEBUG org.hibernate.SQL [main] 
    
    alter table jobs 
       drop 
       foreign key FK7o2poss8cgxg2p6lx5lslrvq8
2023-04-17 19:59:03,014 DEBUG org.hibernate.SQL [main] 
    
    alter table jobs 
       drop 
       foreign key FK7873av068gt5hfbh8i21fsh12
2023-04-17 19:59:03,497 DEBUG org.hibernate.SQL [main] 
    
    alter table repairs 
       drop 
       foreign key FK864vkmmtp039fqmqkdyo2j3cw
2023-04-17 19:59:03,966 DEBUG org.hibernate.SQL [main] 
    
    alter table repairs 
       drop 
       foreign key FKcm3fxgliwua0x94xw3x3kvkac
2023-04-17 19:59:04,404 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists cars
2023-04-17 19:59:04,925 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists customers
2023-04-17 19:59:05,309 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists employees
2023-04-17 19:59:05,681 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists jobs
2023-04-17 19:59:06,123 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists repairs
2023-04-17 19:59:06,604 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists roles
2023-04-17 19:59:07,094 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists sftp
2023-04-17 19:59:07,566 DEBUG org.hibernate.SQL [main] 
    
    alter table employee_roles 
       drop 
       foreign key FK398vvu81xw154mvy3g2eytscn
2023-04-17 19:59:07,932 DEBUG org.hibernate.SQL [main] 
    
    alter table employee_roles 
       drop 
       foreign key FK3uwwaxeiucvfixgd45etkjgmg
2023-04-17 19:59:08,286 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists employee_roles
2023-04-17 19:59:08,769 DEBUG org.hibernate.SQL [main] 
    
    create table cars (
       car_id bigint not null auto_increment,
        make varchar(50),
        model varchar(50),
        plate varchar(15),
        type varchar(20),
        customer_id bigint not null,
        primary key (car_id)
    ) engine=InnoDB
2023-04-17 19:59:09,243 DEBUG org.hibernate.SQL [main] 
    
    create table customers (
       customer_id bigint not null auto_increment,
        customercf varchar(16),
        email varchar(50),
        name varchar(40),
        surname varchar(40),
        telephone_number varchar(120),
        primary key (customer_id)
    ) engine=InnoDB
2023-04-17 19:59:09,726 DEBUG org.hibernate.SQL [main] 
    
    create table employees (
       employee_id bigint not null auto_increment,
        email varchar(50),
        name varchar(40),
        password varchar(120),
        surname varchar(40),
        username varchar(20),
        primary key (employee_id)
    ) engine=InnoDB
2023-04-17 19:59:10,206 DEBUG org.hibernate.SQL [main] 
    
    create table jobs (
       job_id bigint not null auto_increment,
        date DATE not null,
        jobing_hours integer not null,
        note varchar(50),
        employee_employee_id bigint,
        repair_repair_id bigint,
        primary key (job_id)
    ) engine=InnoDB
2023-04-17 19:59:10,669 DEBUG org.hibernate.SQL [main] 
    
    create table repairs (
       repair_id bigint not null auto_increment,
        customercf varchar(255),
        end_date DATE not null,
        external_total_price integer not null,
        is_done bit not null,
        is_working bit not null,
        parts_total_price integer not null,
        repair_hours integer not null,
        repair_type varchar(50),
        start_date DATE not null,
        work_total_price integer not null,
        car_car_id bigint,
        employee_employee_id bigint,
        primary key (repair_id)
    ) engine=InnoDB
2023-04-17 19:59:11,088 DEBUG org.hibernate.SQL [main] 
    
    alter table cars 
       add constraint UKh47vv10sihuuf1d7ea6ehgvh9 unique (plate)
2023-04-17 19:59:11,568 DEBUG org.hibernate.SQL [main] 
    
    alter table customers 
       add constraint UK_qhliumm6jmrnpg01j7c83mxb3 unique (customercf)
2023-04-17 19:59:12,000 DEBUG org.hibernate.SQL [main] 
    
    alter table customers 
       add constraint UKj4or04wlyntspx15195kpkl3d unique (telephone_number)
2023-04-17 19:59:12,442 DEBUG org.hibernate.SQL [main] 
    
    alter table employees 
       add constraint UK3gqbimdf7fckjbwt1kcud141m unique (username)
2023-04-17 19:59:12,926 DEBUG org.hibernate.SQL [main] 
    
    alter table employees 
       add constraint UKj9xgmd0ya5jmus09o0b8pqrpb unique (email)
2023-04-17 19:59:13,277 DEBUG org.hibernate.SQL [main] 
    
    create table roles (
       role_id integer not null auto_increment,
        name varchar(20),
        primary key (role_id)
    ) engine=InnoDB
2023-04-17 19:59:13,661 DEBUG org.hibernate.SQL [main] 
    
    create table sftp (
       sftp_id bigint not null auto_increment,
        auth_type varchar(10),
        code varchar(12),
        host varchar(50),
        password varchar(70),
        port integer not null,
        username varchar(50),
        primary key (sftp_id)
    ) engine=InnoDB
2023-04-17 19:59:14,128 DEBUG org.hibernate.SQL [main] 
    
    alter table sftp 
       add constraint UK8kylbl1sul1nnhxi7ub0t9nl9 unique (code)
2023-04-17 19:59:14,605 DEBUG org.hibernate.SQL [main] 
    
    create table employee_roles (
       employee_id bigint not null,
        role_id integer not null,
        primary key (employee_id, role_id)
    ) engine=InnoDB
2023-04-17 19:59:15,084 DEBUG org.hibernate.SQL [main] 
    
    alter table cars 
       add constraint FKka5k9imvtuqq38tgwh4oglwoo 
       foreign key (customer_id) 
       references customers (customer_id)
2023-04-17 19:59:15,598 DEBUG org.hibernate.SQL [main] 
    
    alter table jobs 
       add constraint FK7o2poss8cgxg2p6lx5lslrvq8 
       foreign key (employee_employee_id) 
       references employees (employee_id)
2023-04-17 19:59:16,051 DEBUG org.hibernate.SQL [main] 
    
    alter table jobs 
       add constraint FK7873av068gt5hfbh8i21fsh12 
       foreign key (repair_repair_id) 
       references repairs (repair_id)
2023-04-17 19:59:16,473 DEBUG org.hibernate.SQL [main] 
    
    alter table repairs 
       add constraint FK864vkmmtp039fqmqkdyo2j3cw 
       foreign key (car_car_id) 
       references cars (car_id)
2023-04-17 19:59:17,002 DEBUG org.hibernate.SQL [main] 
    
    alter table repairs 
       add constraint FKcm3fxgliwua0x94xw3x3kvkac 
       foreign key (employee_employee_id) 
       references employees (employee_id)
2023-04-17 19:59:17,563 DEBUG org.hibernate.SQL [main] 
    
    alter table employee_roles 
       add constraint FK398vvu81xw154mvy3g2eytscn 
       foreign key (role_id) 
       references roles (role_id)
2023-04-17 19:59:17,997 DEBUG org.hibernate.SQL [main] 
    
    alter table employee_roles 
       add constraint FK3uwwaxeiucvfixgd45etkjgmg 
       foreign key (employee_id) 
       references employees (employee_id)
2023-04-17 19:59:18,460 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2890e479] for TypeConfiguration
2023-04-17 19:59:20,414 INFO com.yuripe.normalizator.NormalypApplicationTests [main] Started NormalypApplicationTests in 24.76 seconds (JVM running for 25.778)
2023-04-17 19:59:20,630 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [SpringApplicationShutdownHook] Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2890e479] for TypeConfiguration
2023-04-17 19:59:20,631 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [SpringApplicationShutdownHook] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@274a4bda] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2890e479]
2023-04-17 20:01:10,283 INFO com.yuripe.normalizator.NormalypApplicationTests [main] Starting NormalypApplicationTests using Java 17.0.2 on YPNB with PID 18476 (started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 20:01:10,286 DEBUG com.yuripe.normalizator.NormalypApplicationTests [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 20:01:10,287 INFO com.yuripe.normalizator.NormalypApplicationTests [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 20:01:11,953 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@4645679e
2023-04-17 20:01:11,953 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@4645679e
2023-04-17 20:01:11,954 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4645679e
2023-04-17 20:01:11,954 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@63d677f5
2023-04-17 20:01:11,954 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@78d73b1b
2023-04-17 20:01:11,955 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@29d070c7
2023-04-17 20:01:11,956 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@4652c74d
2023-04-17 20:01:11,956 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@4652c74d
2023-04-17 20:01:11,956 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4652c74d
2023-04-17 20:01:11,957 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@785ed99c
2023-04-17 20:01:11,957 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@785ed99c
2023-04-17 20:01:11,957 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@785ed99c
2023-04-17 20:01:11,958 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@743c3520
2023-04-17 20:01:11,959 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@743c3520
2023-04-17 20:01:11,959 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@743c3520
2023-04-17 20:01:11,961 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@68e2d03e
2023-04-17 20:01:11,961 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@68e2d03e
2023-04-17 20:01:11,962 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@68e2d03e
2023-04-17 20:01:11,963 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@3a788fe0
2023-04-17 20:01:11,963 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@3a788fe0
2023-04-17 20:01:11,963 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@3a788fe0
2023-04-17 20:01:11,965 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@3cb6e0ee
2023-04-17 20:01:11,965 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@3cb6e0ee
2023-04-17 20:01:11,965 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3cb6e0ee
2023-04-17 20:01:11,966 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@231df705
2023-04-17 20:01:11,966 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@231df705
2023-04-17 20:01:11,966 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@231df705
2023-04-17 20:01:11,967 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3009eed7
2023-04-17 20:01:11,967 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3009eed7
2023-04-17 20:01:11,968 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4f2ac7e0
2023-04-17 20:01:11,968 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4f2ac7e0
2023-04-17 20:01:11,969 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@4f5f474c
2023-04-17 20:01:11,970 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@4f5f474c
2023-04-17 20:01:11,970 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4a1a412e
2023-04-17 20:01:11,971 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@68dfda77
2023-04-17 20:01:11,972 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@75bd28d
2023-04-17 20:01:11,972 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@75bd28d
2023-04-17 20:01:11,973 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@cbf1997
2023-04-17 20:01:11,974 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@cbf1997
2023-04-17 20:01:11,975 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@3b5a19ed
2023-04-17 20:01:11,975 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3b5a19ed
2023-04-17 20:01:11,976 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33eb0d4
2023-04-17 20:01:11,976 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33eb0d4
2023-04-17 20:01:11,977 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@40bd0f8
2023-04-17 20:01:11,977 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@40bd0f8
2023-04-17 20:01:11,978 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5c448ef
2023-04-17 20:01:11,978 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5c448ef
2023-04-17 20:01:11,979 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6885ed19
2023-04-17 20:01:11,979 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6885ed19
2023-04-17 20:01:11,980 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@37775bb1
2023-04-17 20:01:11,981 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@37775bb1
2023-04-17 20:01:11,982 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@377dfb8d
2023-04-17 20:01:11,982 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@377dfb8d
2023-04-17 20:01:11,983 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@7ceb6c45
2023-04-17 20:01:11,984 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@7ceb6c45
2023-04-17 20:01:11,985 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@61d60e38
2023-04-17 20:01:11,985 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@61d60e38
2023-04-17 20:01:11,986 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@27e199ce
2023-04-17 20:01:11,986 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@27e199ce
2023-04-17 20:01:11,987 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@27e199ce
2023-04-17 20:01:11,989 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7ea42c82
2023-04-17 20:01:11,990 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@5627cb29
2023-04-17 20:01:11,990 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5627cb29
2023-04-17 20:01:11,991 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5627cb29
2023-04-17 20:01:11,992 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@54f6b629
2023-04-17 20:01:11,993 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@23e61112
2023-04-17 20:01:11,994 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@2c8b8de0
2023-04-17 20:01:11,994 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c8b8de0
2023-04-17 20:01:11,995 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@24d8f87a
2023-04-17 20:01:11,995 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@24d8f87a
2023-04-17 20:01:11,996 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@3869a6e5
2023-04-17 20:01:11,996 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3869a6e5
2023-04-17 20:01:11,997 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@712e787e
2023-04-17 20:01:11,997 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@712e787e
2023-04-17 20:01:11,998 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5384ce66
2023-04-17 20:01:11,998 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5384ce66
2023-04-17 20:01:11,998 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c9b5a99
2023-04-17 20:01:11,999 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@935493d
2023-04-17 20:01:12,000 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@935493d
2023-04-17 20:01:12,000 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@935493d
2023-04-17 20:01:12,000 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@87f501f
2023-04-17 20:01:12,000 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@87f501f
2023-04-17 20:01:12,001 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@87f501f
2023-04-17 20:01:12,001 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@482f7af0
2023-04-17 20:01:12,002 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@7f0766ef
2023-04-17 20:01:12,002 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@458031da
2023-04-17 20:01:12,003 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@458031da
2023-04-17 20:01:12,003 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@458031da
2023-04-17 20:01:12,003 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@289f15e9
2023-04-17 20:01:12,004 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@289f15e9
2023-04-17 20:01:12,004 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@289f15e9
2023-04-17 20:01:12,004 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@72c4a3aa
2023-04-17 20:01:12,005 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@646d810b
2023-04-17 20:01:12,007 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@7dbae40
2023-04-17 20:01:12,007 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7dbae40
2023-04-17 20:01:12,009 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@b06d46d
2023-04-17 20:01:12,011 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@2c7c0e36
2023-04-17 20:01:12,011 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2c7c0e36
2023-04-17 20:01:12,013 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@1c7f9861
2023-04-17 20:01:12,013 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1c7f9861
2023-04-17 20:01:12,014 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1b7554d4
2023-04-17 20:01:12,014 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1fe8f5e8
2023-04-17 20:01:12,015 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@6dd79214
2023-04-17 20:01:12,019 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@2bf2d6eb
2023-04-17 20:01:12,020 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2bf2d6eb
2023-04-17 20:01:12,021 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@34009349
2023-04-17 20:01:12,021 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3f68a7f8
2023-04-17 20:01:12,021 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4faf1f4
2023-04-17 20:01:12,022 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4f811029
2023-04-17 20:01:12,022 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7f2b584b
2023-04-17 20:01:12,022 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5866731
2023-04-17 20:01:12,022 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@56a05324
2023-04-17 20:01:12,022 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@11e71181
2023-04-17 20:01:12,536 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@338d47b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7a3643e3]
2023-04-17 20:01:12,948 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 20:01:12,949 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 20:01:12,950 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@338d47b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@20a946d9]
2023-04-17 20:01:13,381 DEBUG org.hibernate.SQL [main] 
    
    alter table cars 
       drop 
       foreign key FKka5k9imvtuqq38tgwh4oglwoo
2023-04-17 20:01:13,404 DEBUG org.hibernate.SQL [main] 
    
    alter table jobs 
       drop 
       foreign key FK7o2poss8cgxg2p6lx5lslrvq8
2023-04-17 20:01:13,407 DEBUG org.hibernate.SQL [main] 
    
    alter table jobs 
       drop 
       foreign key FK7873av068gt5hfbh8i21fsh12
2023-04-17 20:01:13,409 DEBUG org.hibernate.SQL [main] 
    
    alter table repairs 
       drop 
       foreign key FK864vkmmtp039fqmqkdyo2j3cw
2023-04-17 20:01:13,410 DEBUG org.hibernate.SQL [main] 
    
    alter table repairs 
       drop 
       foreign key FKcm3fxgliwua0x94xw3x3kvkac
2023-04-17 20:01:13,412 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists cars
2023-04-17 20:01:13,424 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists customers
2023-04-17 20:01:13,429 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists employees
2023-04-17 20:01:13,434 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists jobs
2023-04-17 20:01:13,439 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists repairs
2023-04-17 20:01:13,444 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists roles
2023-04-17 20:01:13,449 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists sftp
2023-04-17 20:01:13,453 DEBUG org.hibernate.SQL [main] 
    
    alter table employee_roles 
       drop 
       foreign key FK398vvu81xw154mvy3g2eytscn
2023-04-17 20:01:13,455 DEBUG org.hibernate.SQL [main] 
    
    alter table employee_roles 
       drop 
       foreign key FK3uwwaxeiucvfixgd45etkjgmg
2023-04-17 20:01:13,458 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists employee_roles
2023-04-17 20:01:13,464 DEBUG org.hibernate.SQL [main] 
    
    create table cars (
       car_id bigint not null auto_increment,
        make varchar(50),
        model varchar(50),
        plate varchar(15),
        type varchar(20),
        customer_id bigint not null,
        primary key (car_id)
    ) engine=InnoDB
2023-04-17 20:01:13,512 DEBUG org.hibernate.SQL [main] 
    
    create table customers (
       customer_id bigint not null auto_increment,
        customercf varchar(16),
        email varchar(50),
        name varchar(40),
        surname varchar(40),
        telephone_number varchar(120),
        primary key (customer_id)
    ) engine=InnoDB
2023-04-17 20:01:13,530 DEBUG org.hibernate.SQL [main] 
    
    create table employees (
       employee_id bigint not null auto_increment,
        email varchar(50),
        name varchar(40),
        password varchar(120),
        surname varchar(40),
        username varchar(20),
        primary key (employee_id)
    ) engine=InnoDB
2023-04-17 20:01:13,578 DEBUG org.hibernate.SQL [main] 
    
    create table jobs (
       job_id bigint not null auto_increment,
        date DATE not null,
        jobing_hours integer not null,
        note varchar(50),
        employee_employee_id bigint,
        repair_repair_id bigint,
        primary key (job_id)
    ) engine=InnoDB
2023-04-17 20:01:13,598 DEBUG org.hibernate.SQL [main] 
    
    create table repairs (
       repair_id bigint not null auto_increment,
        customercf varchar(255),
        end_date DATE not null,
        external_total_price integer not null,
        is_done bit not null,
        is_working bit not null,
        parts_total_price integer not null,
        repair_hours integer not null,
        repair_type varchar(50),
        start_date DATE not null,
        work_total_price integer not null,
        car_car_id bigint,
        employee_employee_id bigint,
        primary key (repair_id)
    ) engine=InnoDB
2023-04-17 20:01:13,637 DEBUG org.hibernate.SQL [main] 
    
    alter table cars 
       add constraint UKh47vv10sihuuf1d7ea6ehgvh9 unique (plate)
2023-04-17 20:01:13,654 DEBUG org.hibernate.SQL [main] 
    
    alter table customers 
       add constraint UK_qhliumm6jmrnpg01j7c83mxb3 unique (customercf)
2023-04-17 20:01:13,670 DEBUG org.hibernate.SQL [main] 
    
    alter table customers 
       add constraint UKj4or04wlyntspx15195kpkl3d unique (telephone_number)
2023-04-17 20:01:13,684 DEBUG org.hibernate.SQL [main] 
    
    alter table employees 
       add constraint UK3gqbimdf7fckjbwt1kcud141m unique (username)
2023-04-17 20:01:13,731 DEBUG org.hibernate.SQL [main] 
    
    alter table employees 
       add constraint UKj9xgmd0ya5jmus09o0b8pqrpb unique (email)
2023-04-17 20:01:13,748 DEBUG org.hibernate.SQL [main] 
    
    create table roles (
       role_id integer not null auto_increment,
        name varchar(20),
        primary key (role_id)
    ) engine=InnoDB
2023-04-17 20:01:13,770 DEBUG org.hibernate.SQL [main] 
    
    create table sftp (
       sftp_id bigint not null auto_increment,
        auth_type varchar(10),
        code varchar(12),
        host varchar(50),
        password varchar(70),
        port integer not null,
        username varchar(50),
        primary key (sftp_id)
    ) engine=InnoDB
2023-04-17 20:01:13,786 DEBUG org.hibernate.SQL [main] 
    
    alter table sftp 
       add constraint UK8kylbl1sul1nnhxi7ub0t9nl9 unique (code)
2023-04-17 20:01:13,802 DEBUG org.hibernate.SQL [main] 
    
    create table employee_roles (
       employee_id bigint not null,
        role_id integer not null,
        primary key (employee_id, role_id)
    ) engine=InnoDB
2023-04-17 20:01:13,820 DEBUG org.hibernate.SQL [main] 
    
    alter table cars 
       add constraint FKka5k9imvtuqq38tgwh4oglwoo 
       foreign key (customer_id) 
       references customers (customer_id)
2023-04-17 20:01:13,901 DEBUG org.hibernate.SQL [main] 
    
    alter table jobs 
       add constraint FK7o2poss8cgxg2p6lx5lslrvq8 
       foreign key (employee_employee_id) 
       references employees (employee_id)
2023-04-17 20:01:13,974 DEBUG org.hibernate.SQL [main] 
    
    alter table jobs 
       add constraint FK7873av068gt5hfbh8i21fsh12 
       foreign key (repair_repair_id) 
       references repairs (repair_id)
2023-04-17 20:01:14,053 DEBUG org.hibernate.SQL [main] 
    
    alter table repairs 
       add constraint FK864vkmmtp039fqmqkdyo2j3cw 
       foreign key (car_car_id) 
       references cars (car_id)
2023-04-17 20:01:14,127 DEBUG org.hibernate.SQL [main] 
    
    alter table repairs 
       add constraint FKcm3fxgliwua0x94xw3x3kvkac 
       foreign key (employee_employee_id) 
       references employees (employee_id)
2023-04-17 20:01:14,176 DEBUG org.hibernate.SQL [main] 
    
    alter table employee_roles 
       add constraint FK398vvu81xw154mvy3g2eytscn 
       foreign key (role_id) 
       references roles (role_id)
2023-04-17 20:01:14,245 DEBUG org.hibernate.SQL [main] 
    
    alter table employee_roles 
       add constraint FK3uwwaxeiucvfixgd45etkjgmg 
       foreign key (employee_id) 
       references employees (employee_id)
2023-04-17 20:01:14,321 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@20a946d9] for TypeConfiguration
2023-04-17 20:01:16,195 INFO com.yuripe.normalizator.NormalypApplicationTests [main] Started NormalypApplicationTests in 6.145 seconds (JVM running for 7.134)
2023-04-17 20:01:16,473 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [SpringApplicationShutdownHook] Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@20a946d9] for TypeConfiguration
2023-04-17 20:01:16,473 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [SpringApplicationShutdownHook] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@168197c1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@20a946d9]
2023-04-17 20:04:18,879 INFO com.yuripe.normalizator.NormalypApplicationTests [main] Starting NormalypApplicationTests using Java 17.0.2 on YPNB with PID 18612 (started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 20:04:18,883 DEBUG com.yuripe.normalizator.NormalypApplicationTests [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 20:04:18,884 INFO com.yuripe.normalizator.NormalypApplicationTests [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 20:04:20,983 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@75793f17
2023-04-17 20:04:20,984 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@75793f17
2023-04-17 20:04:20,984 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@75793f17
2023-04-17 20:04:20,985 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c06b113
2023-04-17 20:04:20,986 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@755b5f30
2023-04-17 20:04:20,987 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@3c18942
2023-04-17 20:04:20,988 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@68e2d03e
2023-04-17 20:04:20,989 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@68e2d03e
2023-04-17 20:04:20,989 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@68e2d03e
2023-04-17 20:04:20,990 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@3a788fe0
2023-04-17 20:04:20,990 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@3a788fe0
2023-04-17 20:04:20,990 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3a788fe0
2023-04-17 20:04:20,993 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@3cb6e0ee
2023-04-17 20:04:20,993 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@3cb6e0ee
2023-04-17 20:04:20,993 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3cb6e0ee
2023-04-17 20:04:20,994 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@231df705
2023-04-17 20:04:20,995 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@231df705
2023-04-17 20:04:20,995 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@231df705
2023-04-17 20:04:20,996 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@3009eed7
2023-04-17 20:04:20,996 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@3009eed7
2023-04-17 20:04:20,996 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@3009eed7
2023-04-17 20:04:20,997 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@4f2ac7e0
2023-04-17 20:04:20,998 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@4f2ac7e0
2023-04-17 20:04:20,998 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4f2ac7e0
2023-04-17 20:04:20,999 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@4f5f474c
2023-04-17 20:04:20,999 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@4f5f474c
2023-04-17 20:04:20,999 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4f5f474c
2023-04-17 20:04:21,000 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@70d4f672
2023-04-17 20:04:21,000 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@70d4f672
2023-04-17 20:04:21,003 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@57cabdc3
2023-04-17 20:04:21,003 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@57cabdc3
2023-04-17 20:04:21,004 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@2365ea38
2023-04-17 20:04:21,005 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@2365ea38
2023-04-17 20:04:21,005 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5396eeb1
2023-04-17 20:04:21,006 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3b5a19ed
2023-04-17 20:04:21,007 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@33eb0d4
2023-04-17 20:04:21,007 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@33eb0d4
2023-04-17 20:04:21,008 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@40bd0f8
2023-04-17 20:04:21,008 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@40bd0f8
2023-04-17 20:04:21,009 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@5c448ef
2023-04-17 20:04:21,009 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5c448ef
2023-04-17 20:04:21,010 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6885ed19
2023-04-17 20:04:21,010 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6885ed19
2023-04-17 20:04:21,011 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@37775bb1
2023-04-17 20:04:21,011 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@37775bb1
2023-04-17 20:04:21,012 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@17ec335a
2023-04-17 20:04:21,013 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@17ec335a
2023-04-17 20:04:21,014 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7bd38fed
2023-04-17 20:04:21,014 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7bd38fed
2023-04-17 20:04:21,015 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5763a655
2023-04-17 20:04:21,016 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5763a655
2023-04-17 20:04:21,018 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@404ced67
2023-04-17 20:04:21,019 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@404ced67
2023-04-17 20:04:21,021 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@39133244
2023-04-17 20:04:21,021 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@39133244
2023-04-17 20:04:21,022 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@4d4c1ba9
2023-04-17 20:04:21,023 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4d4c1ba9
2023-04-17 20:04:21,025 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@755a7218
2023-04-17 20:04:21,025 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@755a7218
2023-04-17 20:04:21,026 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@755a7218
2023-04-17 20:04:21,028 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@58a7dc4
2023-04-17 20:04:21,030 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@6b063470
2023-04-17 20:04:21,030 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6b063470
2023-04-17 20:04:21,030 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6b063470
2023-04-17 20:04:21,031 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@24d8f87a
2023-04-17 20:04:21,032 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3869a6e5
2023-04-17 20:04:21,032 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@712e787e
2023-04-17 20:04:21,033 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@712e787e
2023-04-17 20:04:21,033 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@5384ce66
2023-04-17 20:04:21,034 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5384ce66
2023-04-17 20:04:21,035 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@19a5b637
2023-04-17 20:04:21,035 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@19a5b637
2023-04-17 20:04:21,036 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@34c62fdf
2023-04-17 20:04:21,036 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@34c62fdf
2023-04-17 20:04:21,037 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@67c6f4d8
2023-04-17 20:04:21,037 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@67c6f4d8
2023-04-17 20:04:21,037 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6cdee57
2023-04-17 20:04:21,039 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@403364e9
2023-04-17 20:04:21,040 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@403364e9
2023-04-17 20:04:21,040 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@403364e9
2023-04-17 20:04:21,041 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@463045fb
2023-04-17 20:04:21,042 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@463045fb
2023-04-17 20:04:21,042 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@463045fb
2023-04-17 20:04:21,043 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@22a4ca4a
2023-04-17 20:04:21,044 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@33e3bd2e
2023-04-17 20:04:21,045 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@16e1219f
2023-04-17 20:04:21,045 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@16e1219f
2023-04-17 20:04:21,045 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@16e1219f
2023-04-17 20:04:21,046 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5175d9ad
2023-04-17 20:04:21,047 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5175d9ad
2023-04-17 20:04:21,047 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5175d9ad
2023-04-17 20:04:21,048 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@7911cc15
2023-04-17 20:04:21,049 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@5329f6b3
2023-04-17 20:04:21,050 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@37ca3ca8
2023-04-17 20:04:21,050 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@37ca3ca8
2023-04-17 20:04:21,051 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7a36c83a
2023-04-17 20:04:21,053 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@16f7f59f
2023-04-17 20:04:21,053 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@16f7f59f
2023-04-17 20:04:21,055 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@1693ff90
2023-04-17 20:04:21,055 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1693ff90
2023-04-17 20:04:21,056 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9b2dc56
2023-04-17 20:04:21,056 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4eb9ae4d
2023-04-17 20:04:21,059 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@6d6cd1e0
2023-04-17 20:04:21,062 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@2abc55c4
2023-04-17 20:04:21,062 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2abc55c4
2023-04-17 20:04:21,063 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@73e1ecd0
2023-04-17 20:04:21,064 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@11eec06b
2023-04-17 20:04:21,064 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@65600fb3
2023-04-17 20:04:21,064 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@25ce435
2023-04-17 20:04:21,065 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7ea71fc2
2023-04-17 20:04:21,065 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@19ad75e5
2023-04-17 20:04:21,065 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7cd5fcf4
2023-04-17 20:04:21,065 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@19cdc217
2023-04-17 20:04:21,598 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2a667f44] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@53ba7997]
2023-04-17 20:04:22,003 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 20:04:22,005 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 20:04:22,005 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2a667f44] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6c9151c1]
2023-04-17 20:04:22,522 DEBUG org.hibernate.SQL [main] 
    
    alter table cars 
       drop 
       foreign key FKka5k9imvtuqq38tgwh4oglwoo
2023-04-17 20:04:22,545 DEBUG org.hibernate.SQL [main] 
    
    alter table jobs 
       drop 
       foreign key FK7o2poss8cgxg2p6lx5lslrvq8
2023-04-17 20:04:22,554 DEBUG org.hibernate.SQL [main] 
    
    alter table jobs 
       drop 
       foreign key FK7873av068gt5hfbh8i21fsh12
2023-04-17 20:04:22,564 DEBUG org.hibernate.SQL [main] 
    
    alter table repairs 
       drop 
       foreign key FK864vkmmtp039fqmqkdyo2j3cw
2023-04-17 20:04:22,573 DEBUG org.hibernate.SQL [main] 
    
    alter table repairs 
       drop 
       foreign key FKcm3fxgliwua0x94xw3x3kvkac
2023-04-17 20:04:22,592 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists cars
2023-04-17 20:04:22,600 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists customers
2023-04-17 20:04:22,608 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists employees
2023-04-17 20:04:22,620 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists jobs
2023-04-17 20:04:22,628 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists repairs
2023-04-17 20:04:22,641 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists roles
2023-04-17 20:04:22,644 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists sftp
2023-04-17 20:04:22,651 DEBUG org.hibernate.SQL [main] 
    
    alter table employee_roles 
       drop 
       foreign key FK398vvu81xw154mvy3g2eytscn
2023-04-17 20:04:22,660 DEBUG org.hibernate.SQL [main] 
    
    alter table employee_roles 
       drop 
       foreign key FK3uwwaxeiucvfixgd45etkjgmg
2023-04-17 20:04:22,670 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists employee_roles
2023-04-17 20:04:22,681 DEBUG org.hibernate.SQL [main] 
    
    create table cars (
       car_id bigint not null auto_increment,
        make varchar(50),
        model varchar(50),
        plate varchar(15),
        type varchar(20),
        customer_id bigint not null,
        primary key (car_id)
    ) engine=InnoDB
2023-04-17 20:04:22,695 DEBUG org.hibernate.SQL [main] 
    
    create table customers (
       customer_id bigint not null auto_increment,
        customercf varchar(16),
        email varchar(50),
        name varchar(40),
        surname varchar(40),
        telephone_number varchar(120),
        primary key (customer_id)
    ) engine=InnoDB
2023-04-17 20:04:22,715 DEBUG org.hibernate.SQL [main] 
    
    create table employees (
       employee_id bigint not null auto_increment,
        email varchar(50),
        name varchar(40),
        password varchar(120),
        surname varchar(40),
        username varchar(20),
        primary key (employee_id)
    ) engine=InnoDB
2023-04-17 20:04:22,719 DEBUG org.hibernate.SQL [main] 
    
    create table jobs (
       job_id bigint not null auto_increment,
        date DATE not null,
        jobing_hours integer not null,
        note varchar(50),
        employee_employee_id bigint,
        repair_repair_id bigint,
        primary key (job_id)
    ) engine=InnoDB
2023-04-17 20:04:22,734 DEBUG org.hibernate.SQL [main] 
    
    create table repairs (
       repair_id bigint not null auto_increment,
        customercf varchar(255),
        end_date DATE not null,
        external_total_price integer not null,
        is_done bit not null,
        is_working bit not null,
        parts_total_price integer not null,
        repair_hours integer not null,
        repair_type varchar(50),
        start_date DATE not null,
        work_total_price integer not null,
        car_car_id bigint,
        employee_employee_id bigint,
        primary key (repair_id)
    ) engine=InnoDB
2023-04-17 20:04:22,750 DEBUG org.hibernate.SQL [main] 
    
    alter table cars 
       add constraint UKh47vv10sihuuf1d7ea6ehgvh9 unique (plate)
2023-04-17 20:04:22,764 DEBUG org.hibernate.SQL [main] 
    
    alter table customers 
       add constraint UK_qhliumm6jmrnpg01j7c83mxb3 unique (customercf)
2023-04-17 20:04:22,778 DEBUG org.hibernate.SQL [main] 
    
    alter table customers 
       add constraint UKj4or04wlyntspx15195kpkl3d unique (telephone_number)
2023-04-17 20:04:22,793 DEBUG org.hibernate.SQL [main] 
    
    alter table employees 
       add constraint UK3gqbimdf7fckjbwt1kcud141m unique (username)
2023-04-17 20:04:22,795 DEBUG org.hibernate.SQL [main] 
    
    alter table employees 
       add constraint UKj9xgmd0ya5jmus09o0b8pqrpb unique (email)
2023-04-17 20:04:22,797 DEBUG org.hibernate.SQL [main] 
    
    create table roles (
       role_id integer not null auto_increment,
        name varchar(20),
        primary key (role_id)
    ) engine=InnoDB
2023-04-17 20:04:22,799 DEBUG org.hibernate.SQL [main] 
    
    create table sftp (
       sftp_id bigint not null auto_increment,
        auth_type varchar(10),
        code varchar(12),
        host varchar(50),
        password varchar(70),
        port integer not null,
        username varchar(50),
        primary key (sftp_id)
    ) engine=InnoDB
2023-04-17 20:04:22,829 DEBUG org.hibernate.SQL [main] 
    
    alter table sftp 
       add constraint UK8kylbl1sul1nnhxi7ub0t9nl9 unique (code)
2023-04-17 20:04:22,852 DEBUG org.hibernate.SQL [main] 
    
    create table employee_roles (
       employee_id bigint not null,
        role_id integer not null,
        primary key (employee_id, role_id)
    ) engine=InnoDB
2023-04-17 20:04:22,893 DEBUG org.hibernate.SQL [main] 
    
    alter table cars 
       add constraint FKka5k9imvtuqq38tgwh4oglwoo 
       foreign key (customer_id) 
       references customers (customer_id)
2023-04-17 20:04:22,963 DEBUG org.hibernate.SQL [main] 
    
    alter table jobs 
       add constraint FK7o2poss8cgxg2p6lx5lslrvq8 
       foreign key (employee_employee_id) 
       references employees (employee_id)
2023-04-17 20:04:23,039 DEBUG org.hibernate.SQL [main] 
    
    alter table jobs 
       add constraint FK7873av068gt5hfbh8i21fsh12 
       foreign key (repair_repair_id) 
       references repairs (repair_id)
2023-04-17 20:04:23,075 DEBUG org.hibernate.SQL [main] 
    
    alter table repairs 
       add constraint FK864vkmmtp039fqmqkdyo2j3cw 
       foreign key (car_car_id) 
       references cars (car_id)
2023-04-17 20:04:23,110 DEBUG org.hibernate.SQL [main] 
    
    alter table repairs 
       add constraint FKcm3fxgliwua0x94xw3x3kvkac 
       foreign key (employee_employee_id) 
       references employees (employee_id)
2023-04-17 20:04:23,146 DEBUG org.hibernate.SQL [main] 
    
    alter table employee_roles 
       add constraint FK398vvu81xw154mvy3g2eytscn 
       foreign key (role_id) 
       references roles (role_id)
2023-04-17 20:04:23,172 DEBUG org.hibernate.SQL [main] 
    
    alter table employee_roles 
       add constraint FK3uwwaxeiucvfixgd45etkjgmg 
       foreign key (employee_id) 
       references employees (employee_id)
2023-04-17 20:04:23,207 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6c9151c1] for TypeConfiguration
2023-04-17 20:04:25,819 INFO com.yuripe.normalizator.NormalypApplicationTests [main] Started NormalypApplicationTests in 7.324 seconds (JVM running for 8.776)
2023-04-17 20:04:26,241 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [SpringApplicationShutdownHook] Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6c9151c1] for TypeConfiguration
2023-04-17 20:04:26,242 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [SpringApplicationShutdownHook] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@447f9694] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6c9151c1]
2023-04-17 20:04:47,102 INFO com.yuripe.normalizator.NormalypApplication [main] Starting NormalypApplication using Java 17.0.2 on YPNB with PID 18476 (C:\Users\yurip\git\normalyp\normalyp\target\classes started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 20:04:47,108 DEBUG com.yuripe.normalizator.NormalypApplication [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 20:04:47,108 INFO com.yuripe.normalizator.NormalypApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 20:04:48,762 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@58c42c8c
2023-04-17 20:04:48,763 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@58c42c8c
2023-04-17 20:04:48,764 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@58c42c8c
2023-04-17 20:04:48,765 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1796b2d4
2023-04-17 20:04:48,766 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@7f12094d
2023-04-17 20:04:48,766 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@12567179
2023-04-17 20:04:48,767 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@23b1aa9
2023-04-17 20:04:48,767 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@23b1aa9
2023-04-17 20:04:48,767 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@23b1aa9
2023-04-17 20:04:48,769 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@57a667c8
2023-04-17 20:04:48,769 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@57a667c8
2023-04-17 20:04:48,769 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@57a667c8
2023-04-17 20:04:48,770 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@4861cca9
2023-04-17 20:04:48,770 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@4861cca9
2023-04-17 20:04:48,779 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4861cca9
2023-04-17 20:04:48,781 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@1132baa3
2023-04-17 20:04:48,781 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@1132baa3
2023-04-17 20:04:48,781 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1132baa3
2023-04-17 20:04:48,782 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@57e03347
2023-04-17 20:04:48,782 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@57e03347
2023-04-17 20:04:48,782 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@57e03347
2023-04-17 20:04:48,783 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@5fb8dc01
2023-04-17 20:04:48,783 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@5fb8dc01
2023-04-17 20:04:48,784 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5fb8dc01
2023-04-17 20:04:48,784 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@554566a8
2023-04-17 20:04:48,784 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@554566a8
2023-04-17 20:04:48,785 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@554566a8
2023-04-17 20:04:48,785 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b44605c
2023-04-17 20:04:48,785 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b44605c
2023-04-17 20:04:48,786 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@611c3eae
2023-04-17 20:04:48,786 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@611c3eae
2023-04-17 20:04:48,787 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@7b5ac347
2023-04-17 20:04:48,787 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@7b5ac347
2023-04-17 20:04:48,788 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6c9a3661
2023-04-17 20:04:48,788 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@56b1e527
2023-04-17 20:04:48,789 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@1aedf08d
2023-04-17 20:04:48,789 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@1aedf08d
2023-04-17 20:04:48,789 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@1201769d
2023-04-17 20:04:48,790 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1201769d
2023-04-17 20:04:48,790 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@504497fa
2023-04-17 20:04:48,791 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@504497fa
2023-04-17 20:04:48,792 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6b5c134e
2023-04-17 20:04:48,792 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6b5c134e
2023-04-17 20:04:48,792 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@24691c5
2023-04-17 20:04:48,792 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@24691c5
2023-04-17 20:04:48,793 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5cc1bf20
2023-04-17 20:04:48,793 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5cc1bf20
2023-04-17 20:04:48,794 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@bd93bc3
2023-04-17 20:04:48,794 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@bd93bc3
2023-04-17 20:04:48,795 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@55bf35e5
2023-04-17 20:04:48,795 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@55bf35e5
2023-04-17 20:04:48,797 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@16d41725
2023-04-17 20:04:48,797 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@16d41725
2023-04-17 20:04:48,797 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@56c0a61e
2023-04-17 20:04:48,797 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@56c0a61e
2023-04-17 20:04:48,799 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@3a4e524
2023-04-17 20:04:48,799 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3a4e524
2023-04-17 20:04:48,800 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@5d66ae3a
2023-04-17 20:04:48,800 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5d66ae3a
2023-04-17 20:04:48,800 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5d66ae3a
2023-04-17 20:04:48,801 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@64a1116a
2023-04-17 20:04:48,802 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@23648d2d
2023-04-17 20:04:48,802 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@23648d2d
2023-04-17 20:04:48,803 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@23648d2d
2023-04-17 20:04:48,803 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@30036a18
2023-04-17 20:04:48,805 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@773eca84
2023-04-17 20:04:48,805 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@5f56424d
2023-04-17 20:04:48,805 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5f56424d
2023-04-17 20:04:48,805 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@701c223a
2023-04-17 20:04:48,805 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@701c223a
2023-04-17 20:04:48,806 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@44dd0d38
2023-04-17 20:04:48,806 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@44dd0d38
2023-04-17 20:04:48,807 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@2bdab835
2023-04-17 20:04:48,807 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2bdab835
2023-04-17 20:04:48,808 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1815577b
2023-04-17 20:04:48,808 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1815577b
2023-04-17 20:04:48,809 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@ee96866
2023-04-17 20:04:48,810 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@39f42d0e
2023-04-17 20:04:48,810 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@39f42d0e
2023-04-17 20:04:48,810 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@39f42d0e
2023-04-17 20:04:48,811 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@da09250
2023-04-17 20:04:48,811 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@da09250
2023-04-17 20:04:48,812 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@da09250
2023-04-17 20:04:48,812 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@112c2930
2023-04-17 20:04:48,814 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@1f758e4f
2023-04-17 20:04:48,814 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@2bfc2f8b
2023-04-17 20:04:48,815 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@2bfc2f8b
2023-04-17 20:04:48,815 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@2bfc2f8b
2023-04-17 20:04:48,815 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1ae924f1
2023-04-17 20:04:48,815 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1ae924f1
2023-04-17 20:04:48,816 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1ae924f1
2023-04-17 20:04:48,816 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@104a287c
2023-04-17 20:04:48,816 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@1e734eee
2023-04-17 20:04:48,818 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@f017dd0
2023-04-17 20:04:48,818 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@f017dd0
2023-04-17 20:04:48,818 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6bd92538
2023-04-17 20:04:48,818 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@9281d19
2023-04-17 20:04:48,818 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9281d19
2023-04-17 20:04:48,819 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@79f5a6ed
2023-04-17 20:04:48,819 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@79f5a6ed
2023-04-17 20:04:48,820 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@541d4d9f
2023-04-17 20:04:48,822 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2ccc9681
2023-04-17 20:04:48,823 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@2e45a357
2023-04-17 20:04:48,824 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@7bede4ea
2023-04-17 20:04:48,825 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7bede4ea
2023-04-17 20:04:48,825 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@27bc1d44
2023-04-17 20:04:48,825 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1af677f8
2023-04-17 20:04:48,826 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7a55fb81
2023-04-17 20:04:48,826 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5a3cf878
2023-04-17 20:04:48,826 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d2d8846
2023-04-17 20:04:48,826 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@34cd65ac
2023-04-17 20:04:48,826 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@61911947
2023-04-17 20:04:48,826 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5c53c235
2023-04-17 20:04:49,189 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@284c4f02] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@709d6de5]
2023-04-17 20:04:49,553 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 20:04:49,554 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 20:04:49,555 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@284c4f02] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@30665461]
2023-04-17 20:04:49,964 DEBUG org.hibernate.SQL [main] 
    
    alter table cars 
       drop 
       foreign key FKka5k9imvtuqq38tgwh4oglwoo
2023-04-17 20:04:49,989 DEBUG org.hibernate.SQL [main] 
    
    alter table jobs 
       drop 
       foreign key FK7o2poss8cgxg2p6lx5lslrvq8
2023-04-17 20:04:49,999 DEBUG org.hibernate.SQL [main] 
    
    alter table jobs 
       drop 
       foreign key FK7873av068gt5hfbh8i21fsh12
2023-04-17 20:04:50,010 DEBUG org.hibernate.SQL [main] 
    
    alter table repairs 
       drop 
       foreign key FK864vkmmtp039fqmqkdyo2j3cw
2023-04-17 20:04:50,021 DEBUG org.hibernate.SQL [main] 
    
    alter table repairs 
       drop 
       foreign key FKcm3fxgliwua0x94xw3x3kvkac
2023-04-17 20:04:50,037 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists cars
2023-04-17 20:04:50,067 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists customers
2023-04-17 20:04:50,084 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists employees
2023-04-17 20:04:50,099 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists jobs
2023-04-17 20:04:50,107 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists repairs
2023-04-17 20:04:50,115 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists roles
2023-04-17 20:04:50,117 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists sftp
2023-04-17 20:04:50,124 DEBUG org.hibernate.SQL [main] 
    
    alter table employee_roles 
       drop 
       foreign key FK398vvu81xw154mvy3g2eytscn
2023-04-17 20:04:50,133 DEBUG org.hibernate.SQL [main] 
    
    alter table employee_roles 
       drop 
       foreign key FK3uwwaxeiucvfixgd45etkjgmg
2023-04-17 20:04:50,141 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists employee_roles
2023-04-17 20:04:50,153 DEBUG org.hibernate.SQL [main] 
    
    create table cars (
       car_id bigint not null auto_increment,
        make varchar(50),
        model varchar(50),
        plate varchar(15),
        type varchar(20),
        customer_id bigint not null,
        primary key (car_id)
    ) engine=InnoDB
2023-04-17 20:04:50,168 DEBUG org.hibernate.SQL [main] 
    
    create table customers (
       customer_id bigint not null auto_increment,
        customercf varchar(16),
        email varchar(50),
        name varchar(40),
        surname varchar(40),
        telephone_number varchar(120),
        primary key (customer_id)
    ) engine=InnoDB
2023-04-17 20:04:50,182 DEBUG org.hibernate.SQL [main] 
    
    create table employees (
       employee_id bigint not null auto_increment,
        email varchar(50),
        name varchar(40),
        password varchar(120),
        surname varchar(40),
        username varchar(20),
        primary key (employee_id)
    ) engine=InnoDB
2023-04-17 20:04:50,186 DEBUG org.hibernate.SQL [main] 
    
    create table jobs (
       job_id bigint not null auto_increment,
        date DATE not null,
        jobing_hours integer not null,
        note varchar(50),
        employee_employee_id bigint,
        repair_repair_id bigint,
        primary key (job_id)
    ) engine=InnoDB
2023-04-17 20:04:50,197 DEBUG org.hibernate.SQL [main] 
    
    create table repairs (
       repair_id bigint not null auto_increment,
        customercf varchar(255),
        end_date DATE not null,
        external_total_price integer not null,
        is_done bit not null,
        is_working bit not null,
        parts_total_price integer not null,
        repair_hours integer not null,
        repair_type varchar(50),
        start_date DATE not null,
        work_total_price integer not null,
        car_car_id bigint,
        employee_employee_id bigint,
        primary key (repair_id)
    ) engine=InnoDB
2023-04-17 20:04:50,210 DEBUG org.hibernate.SQL [main] 
    
    alter table cars 
       add constraint UKh47vv10sihuuf1d7ea6ehgvh9 unique (plate)
2023-04-17 20:04:50,221 DEBUG org.hibernate.SQL [main] 
    
    alter table customers 
       add constraint UK_qhliumm6jmrnpg01j7c83mxb3 unique (customercf)
2023-04-17 20:04:50,232 DEBUG org.hibernate.SQL [main] 
    
    alter table customers 
       add constraint UKj4or04wlyntspx15195kpkl3d unique (telephone_number)
2023-04-17 20:04:50,243 DEBUG org.hibernate.SQL [main] 
    
    alter table employees 
       add constraint UK3gqbimdf7fckjbwt1kcud141m unique (username)
2023-04-17 20:04:50,245 DEBUG org.hibernate.SQL [main] 
    
    alter table employees 
       add constraint UKj9xgmd0ya5jmus09o0b8pqrpb unique (email)
2023-04-17 20:04:50,247 DEBUG org.hibernate.SQL [main] 
    
    create table roles (
       role_id integer not null auto_increment,
        name varchar(20),
        primary key (role_id)
    ) engine=InnoDB
2023-04-17 20:04:50,250 DEBUG org.hibernate.SQL [main] 
    
    create table sftp (
       sftp_id bigint not null auto_increment,
        auth_type varchar(10),
        code varchar(12),
        host varchar(50),
        password varchar(70),
        port integer not null,
        username varchar(50),
        primary key (sftp_id)
    ) engine=InnoDB
2023-04-17 20:04:50,262 DEBUG org.hibernate.SQL [main] 
    
    alter table sftp 
       add constraint UK8kylbl1sul1nnhxi7ub0t9nl9 unique (code)
2023-04-17 20:04:50,275 DEBUG org.hibernate.SQL [main] 
    
    create table employee_roles (
       employee_id bigint not null,
        role_id integer not null,
        primary key (employee_id, role_id)
    ) engine=InnoDB
2023-04-17 20:04:50,290 DEBUG org.hibernate.SQL [main] 
    
    alter table cars 
       add constraint FKka5k9imvtuqq38tgwh4oglwoo 
       foreign key (customer_id) 
       references customers (customer_id)
2023-04-17 20:04:50,324 DEBUG org.hibernate.SQL [main] 
    
    alter table jobs 
       add constraint FK7o2poss8cgxg2p6lx5lslrvq8 
       foreign key (employee_employee_id) 
       references employees (employee_id)
2023-04-17 20:04:50,354 DEBUG org.hibernate.SQL [main] 
    
    alter table jobs 
       add constraint FK7873av068gt5hfbh8i21fsh12 
       foreign key (repair_repair_id) 
       references repairs (repair_id)
2023-04-17 20:04:50,384 DEBUG org.hibernate.SQL [main] 
    
    alter table repairs 
       add constraint FK864vkmmtp039fqmqkdyo2j3cw 
       foreign key (car_car_id) 
       references cars (car_id)
2023-04-17 20:04:50,412 DEBUG org.hibernate.SQL [main] 
    
    alter table repairs 
       add constraint FKcm3fxgliwua0x94xw3x3kvkac 
       foreign key (employee_employee_id) 
       references employees (employee_id)
2023-04-17 20:04:50,449 DEBUG org.hibernate.SQL [main] 
    
    alter table employee_roles 
       add constraint FK398vvu81xw154mvy3g2eytscn 
       foreign key (role_id) 
       references roles (role_id)
2023-04-17 20:04:50,475 DEBUG org.hibernate.SQL [main] 
    
    alter table employee_roles 
       add constraint FK3uwwaxeiucvfixgd45etkjgmg 
       foreign key (employee_id) 
       references employees (employee_id)
2023-04-17 20:04:50,507 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@30665461] for TypeConfiguration
2023-04-17 20:04:50,845 DEBUG com.yuripe.normalizator.security.jwt.AuthTokenFilter [main] Filter 'authenticationJwtTokenFilter' configured for use
2023-04-17 20:04:51,701 INFO com.yuripe.normalizator.NormalypApplication [main] Started NormalypApplication in 4.956 seconds (JVM running for 6.078)
2023-04-17 20:05:18,528 ERROR com.yuripe.normalizator.security.jwt.JwtUtils [http-nio-8080-exec-2] JWT token expired: JWT expired at 2023-04-09T14:04:14Z. Current time: 2023-04-17T20:05:18Z, a difference of 712864527 milliseconds.  Allowed clock skew: 0 milliseconds.
2023-04-17 20:05:18,547 ERROR com.yuripe.normalizator.security.jwt.AuthEntryPointJwt [http-nio-8080-exec-2] Unauthorized error: Full authentication is required to access this resource
2023-04-17 20:05:28,431 DEBUG org.hibernate.SQL [http-nio-8080-exec-5] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 20:05:28,448 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:05:28,698 ERROR com.yuripe.normalizator.security.jwt.AuthEntryPointJwt [http-nio-8080-exec-5] Unauthorized error: Bad credentials
2023-04-17 20:10:48,199 DEBUG org.hibernate.SQL [http-nio-8080-exec-6] 
    select
        employee0_.employee_id as col_0_0_ 
    from
        employees employee0_ 
    where
        employee0_.username=? limit ?
2023-04-17 20:10:48,202 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:10:48,208 DEBUG org.hibernate.SQL [http-nio-8080-exec-6] 
    select
        employee0_.employee_id as col_0_0_ 
    from
        employees employee0_ 
    where
        employee0_.email=? limit ?
2023-04-17 20:10:48,209 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [VARCHAR] - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:10:48,425 DEBUG org.hibernate.SQL [http-nio-8080-exec-6] 
    select
        role0_.role_id as role_id1_5_,
        role0_.name as name2_5_ 
    from
        roles role0_ 
    where
        role0_.name=?
2023-04-17 20:10:48,427 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [VARCHAR] - [ROLE_USER]
2023-04-17 20:10:48,431 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-6] extracted value ([role_id1_5_] : [INTEGER]) - [1]
2023-04-17 20:10:48,438 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-6] extracted value ([name2_5_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 20:10:48,511 DEBUG org.hibernate.SQL [http-nio-8080-exec-6] 
    insert 
    into
        employees
        (email, name, password, surname, username) 
    values
        (?, ?, ?, ?, ?)
2023-04-17 20:10:48,512 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [VARCHAR] - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:10:48,513 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [2] as [VARCHAR] - [yuri]
2023-04-17 20:10:48,513 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [3] as [VARCHAR] - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 20:10:48,514 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [4] as [VARCHAR] - [petrillo]
2023-04-17 20:10:48,515 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [5] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:10:48,543 DEBUG org.hibernate.SQL [http-nio-8080-exec-6] 
    insert 
    into
        employee_roles
        (employee_id, role_id) 
    values
        (?, ?)
2023-04-17 20:10:48,544 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2023-04-17 20:10:48,545 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [2] as [INTEGER] - [1]
2023-04-17 20:13:00,621 DEBUG org.hibernate.SQL [http-nio-8080-exec-9] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 20:13:00,621 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:13:00,623 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 20:13:00,624 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:13:00,624 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 20:13:00,625 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 20:13:00,625 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 20:13:00,625 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 20:13:00,627 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-9] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 20:13:00,629 DEBUG org.hibernate.SQL [http-nio-8080-exec-9] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 20:13:00,629 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2023-04-17 20:13:00,637 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 20:13:00,637 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 20:13:00,638 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 20:13:00,638 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 20:13:15,218 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 20:13:15,219 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:13:15,220 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 20:13:15,220 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:13:15,221 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 20:13:15,221 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 20:13:15,221 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 20:13:15,221 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 20:13:15,221 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-4] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 20:13:15,222 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 20:13:15,222 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2023-04-17 20:13:15,224 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 20:13:15,224 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 20:13:15,224 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 20:13:15,225 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 20:13:28,905 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 20:13:28,943 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 20:13:32,161 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-4] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: SERVER Not FOUND!] with root cause
java.lang.RuntimeException: SERVER Not FOUND!
	at com.yuripe.normalizator.services.SFTPService.lambda$getSftp$0(SFTPService.java:20)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.yuripe.normalizator.services.SFTPService.getSftp(SFTPService.java:20)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:102)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$419f2bfc.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 20:14:05,359 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 20:14:05,360 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:14:05,362 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 20:14:05,362 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:14:05,363 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 20:14:05,363 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 20:14:05,363 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 20:14:05,363 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 20:14:05,363 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-2] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 20:14:05,364 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 20:14:05,364 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2023-04-17 20:14:05,366 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 20:14:05,366 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 20:14:05,367 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 20:14:05,367 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 20:14:11,779 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 20:14:11,782 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 20:14:11,788 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-2] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: SERVER Not FOUND!] with root cause
java.lang.RuntimeException: SERVER Not FOUND!
	at com.yuripe.normalizator.services.SFTPService.lambda$getSftp$0(SFTPService.java:20)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.yuripe.normalizator.services.SFTPService.getSftp(SFTPService.java:20)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:102)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$419f2bfc.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 20:14:33,930 DEBUG org.hibernate.SQL [http-nio-8080-exec-3] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 20:14:33,931 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:14:33,932 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 20:14:33,932 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:14:33,932 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 20:14:33,932 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 20:14:33,932 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 20:14:33,933 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 20:14:33,933 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-3] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 20:14:33,933 DEBUG org.hibernate.SQL [http-nio-8080-exec-3] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 20:14:33,934 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2023-04-17 20:14:33,935 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 20:14:33,935 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 20:14:33,935 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 20:14:33,935 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 20:15:52,551 DEBUG org.hibernate.SQL [http-nio-8080-exec-3] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 20:15:52,554 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 20:15:52,557 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 20:15:52,557 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 20:15:52,558 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 20:15:52,558 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 20:15:52,558 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 20:15:52,558 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 20:15:52,558 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 20:16:15,610 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-3] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.io.IOException: Connection is not open
	at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:514)
	at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:648)
	at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:622)
	at org.apache.commons.net.ftp.FTP.syst(FTP.java:1712)
	at org.apache.commons.net.ftp.FTPClient.getSystemType(FTPClient.java:2792)
	at org.apache.commons.net.ftp.FTPClient.__createParser(FTPClient.java:3369)
	at org.apache.commons.net.ftp.FTPClient.initiateListParsing(FTPClient.java:3338)
	at org.apache.commons.net.ftp.FTPClient.listFiles(FTPClient.java:3084)
	at com.yuripe.core.library.services.FTPService.listFiles(FTPService.java:66)
	at com.yuripe.core.library.services.FTPService.checkFTPServerTargetFile(FTPService.java:46)
	at com.yuripe.normalizator.configurations.FTPServiceCustom.checkValidMandatoryInput(FTPServiceCustom.java:23)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:108)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$419f2bfc.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 20:16:31,224 DEBUG org.hibernate.SQL [http-nio-8080-exec-6] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 20:16:31,225 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:16:31,226 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-6] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 20:16:31,226 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-6] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:16:31,226 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-6] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 20:16:31,226 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-6] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 20:16:31,227 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-6] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 20:16:31,227 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-6] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 20:16:31,227 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-6] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 20:16:31,228 DEBUG org.hibernate.SQL [http-nio-8080-exec-6] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 20:16:31,228 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [BIGINT] - [1]
2023-04-17 20:16:31,229 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-6] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 20:16:31,229 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-6] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 20:16:31,229 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-6] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 20:16:31,231 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-6] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 20:16:33,306 DEBUG org.hibernate.SQL [http-nio-8080-exec-6] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 20:16:33,309 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 20:16:33,312 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-6] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 20:16:33,312 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-6] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 20:16:33,313 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-6] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 20:16:33,313 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-6] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 20:16:33,314 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-6] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 20:16:33,315 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-6] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 20:16:33,315 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-6] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 20:17:49,498 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-6] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.io.IOException: Connection is not open
	at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:514)
	at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:648)
	at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:622)
	at org.apache.commons.net.ftp.FTP.syst(FTP.java:1712)
	at org.apache.commons.net.ftp.FTPClient.getSystemType(FTPClient.java:2792)
	at org.apache.commons.net.ftp.FTPClient.__createParser(FTPClient.java:3369)
	at org.apache.commons.net.ftp.FTPClient.initiateListParsing(FTPClient.java:3338)
	at org.apache.commons.net.ftp.FTPClient.listFiles(FTPClient.java:3084)
	at com.yuripe.core.library.services.FTPService.listFiles(FTPService.java:66)
	at com.yuripe.core.library.services.FTPService.checkFTPServerTargetFile(FTPService.java:46)
	at com.yuripe.normalizator.configurations.FTPServiceCustom.checkValidMandatoryInput(FTPServiceCustom.java:23)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:108)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$419f2bfc.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 20:19:03,316 INFO com.yuripe.normalizator.NormalypApplication [main] Starting NormalypApplication using Java 17.0.2 on YPNB with PID 14292 (C:\Users\yurip\git\normalyp\normalyp\target\classes started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 20:19:03,323 DEBUG com.yuripe.normalizator.NormalypApplication [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 20:19:03,324 INFO com.yuripe.normalizator.NormalypApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 20:19:05,000 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1796b2d4
2023-04-17 20:19:05,001 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1796b2d4
2023-04-17 20:19:05,002 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1796b2d4
2023-04-17 20:19:05,002 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@200d1a3d
2023-04-17 20:19:05,003 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@7f42b194
2023-04-17 20:19:05,004 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@402b4f81
2023-04-17 20:19:05,005 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@e26a3df
2023-04-17 20:19:05,005 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@e26a3df
2023-04-17 20:19:05,006 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@e26a3df
2023-04-17 20:19:05,007 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@6d969330
2023-04-17 20:19:05,007 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@6d969330
2023-04-17 20:19:05,007 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6d969330
2023-04-17 20:19:05,008 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@7d66a126
2023-04-17 20:19:05,009 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@7d66a126
2023-04-17 20:19:05,009 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7d66a126
2023-04-17 20:19:05,010 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@307c59ea
2023-04-17 20:19:05,010 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@307c59ea
2023-04-17 20:19:05,011 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@307c59ea
2023-04-17 20:19:05,011 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@b8a144e
2023-04-17 20:19:05,012 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@b8a144e
2023-04-17 20:19:05,012 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@b8a144e
2023-04-17 20:19:05,013 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@7345f97d
2023-04-17 20:19:05,013 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@7345f97d
2023-04-17 20:19:05,013 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7345f97d
2023-04-17 20:19:05,014 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@591f6f83
2023-04-17 20:19:05,014 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@591f6f83
2023-04-17 20:19:05,014 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@591f6f83
2023-04-17 20:19:05,015 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6d6039df
2023-04-17 20:19:05,015 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6d6039df
2023-04-17 20:19:05,023 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1ab53860
2023-04-17 20:19:05,023 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1ab53860
2023-04-17 20:19:05,024 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@1600a8a2
2023-04-17 20:19:05,025 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1600a8a2
2023-04-17 20:19:05,025 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7b95bdb0
2023-04-17 20:19:05,026 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@423f8a73
2023-04-17 20:19:05,026 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@5844a2d1
2023-04-17 20:19:05,027 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@5844a2d1
2023-04-17 20:19:05,027 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@2e2f20b8
2023-04-17 20:19:05,027 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2e2f20b8
2023-04-17 20:19:05,028 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@3d0d120b
2023-04-17 20:19:05,028 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3d0d120b
2023-04-17 20:19:05,029 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@615b5480
2023-04-17 20:19:05,029 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@615b5480
2023-04-17 20:19:05,030 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6bb4cc0e
2023-04-17 20:19:05,030 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6bb4cc0e
2023-04-17 20:19:05,031 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@375084c9
2023-04-17 20:19:05,031 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@375084c9
2023-04-17 20:19:05,032 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e67cfe1
2023-04-17 20:19:05,032 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e67cfe1
2023-04-17 20:19:05,033 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3dc39459
2023-04-17 20:19:05,033 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3dc39459
2023-04-17 20:19:05,034 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76d0ecd7
2023-04-17 20:19:05,034 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76d0ecd7
2023-04-17 20:19:05,035 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@4df7d9ee
2023-04-17 20:19:05,036 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@4df7d9ee
2023-04-17 20:19:05,037 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@33de7f3d
2023-04-17 20:19:05,037 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@33de7f3d
2023-04-17 20:19:05,038 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@19eea77c
2023-04-17 20:19:05,038 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@19eea77c
2023-04-17 20:19:05,038 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@19eea77c
2023-04-17 20:19:05,040 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7cc2c551
2023-04-17 20:19:05,042 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@537b3b2e
2023-04-17 20:19:05,042 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@537b3b2e
2023-04-17 20:19:05,043 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@537b3b2e
2023-04-17 20:19:05,043 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@119d4443
2023-04-17 20:19:05,044 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7e0f9528
2023-04-17 20:19:05,045 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@7336fd8f
2023-04-17 20:19:05,045 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7336fd8f
2023-04-17 20:19:05,046 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@852ef8d
2023-04-17 20:19:05,046 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@852ef8d
2023-04-17 20:19:05,046 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@147e0734
2023-04-17 20:19:05,046 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@147e0734
2023-04-17 20:19:05,047 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@270d5060
2023-04-17 20:19:05,047 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@270d5060
2023-04-17 20:19:05,048 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@987a0bb
2023-04-17 20:19:05,048 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@987a0bb
2023-04-17 20:19:05,049 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3afca2c
2023-04-17 20:19:05,050 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@532dacf5
2023-04-17 20:19:05,050 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@532dacf5
2023-04-17 20:19:05,050 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@532dacf5
2023-04-17 20:19:05,051 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f4d01b6
2023-04-17 20:19:05,051 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f4d01b6
2023-04-17 20:19:05,051 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f4d01b6
2023-04-17 20:19:05,052 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@661e279d
2023-04-17 20:19:05,053 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@7523d5a1
2023-04-17 20:19:05,053 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@44641d6c
2023-04-17 20:19:05,053 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@44641d6c
2023-04-17 20:19:05,053 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@44641d6c
2023-04-17 20:19:05,054 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@26874f2c
2023-04-17 20:19:05,054 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@26874f2c
2023-04-17 20:19:05,054 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@26874f2c
2023-04-17 20:19:05,055 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@2fbd390
2023-04-17 20:19:05,056 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@f18b738
2023-04-17 20:19:05,057 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@19ae36f4
2023-04-17 20:19:05,057 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@19ae36f4
2023-04-17 20:19:05,058 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5fd8dd66
2023-04-17 20:19:05,059 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@7de35070
2023-04-17 20:19:05,060 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7de35070
2023-04-17 20:19:05,061 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@48dff674
2023-04-17 20:19:05,061 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@48dff674
2023-04-17 20:19:05,061 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4a9b3956
2023-04-17 20:19:05,062 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@643ecfef
2023-04-17 20:19:05,064 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@203b953c
2023-04-17 20:19:05,066 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@7a55fb81
2023-04-17 20:19:05,066 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7a55fb81
2023-04-17 20:19:05,066 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@61911947
2023-04-17 20:19:05,067 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5c53c235
2023-04-17 20:19:05,067 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2dcd0e41
2023-04-17 20:19:05,067 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7272ee51
2023-04-17 20:19:05,068 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1b409a79
2023-04-17 20:19:05,068 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5940b14e
2023-04-17 20:19:05,068 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1cba0321
2023-04-17 20:19:05,068 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@795f6681
2023-04-17 20:19:05,467 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7645b7d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4c50cd7d]
2023-04-17 20:19:05,830 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 20:19:05,832 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 20:19:05,834 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7645b7d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@59c862af]
2023-04-17 20:19:06,365 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@59c862af] for TypeConfiguration
2023-04-17 20:19:06,735 DEBUG com.yuripe.normalizator.security.jwt.AuthTokenFilter [main] Filter 'authenticationJwtTokenFilter' configured for use
2023-04-17 20:19:07,716 INFO com.yuripe.normalizator.NormalypApplication [main] Started NormalypApplication in 4.814 seconds (JVM running for 5.701)
2023-04-17 20:19:11,592 DEBUG org.hibernate.SQL [http-nio-8080-exec-3] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 20:19:11,595 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:19:11,599 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 20:19:11,603 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:19:11,604 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 20:19:11,604 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 20:19:11,604 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 20:19:11,604 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 20:19:11,617 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-3] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 20:19:11,622 DEBUG org.hibernate.SQL [http-nio-8080-exec-3] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 20:19:11,622 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2023-04-17 20:19:11,629 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 20:19:11,629 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 20:19:11,630 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 20:19:11,631 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 20:19:14,951 DEBUG org.hibernate.SQL [http-nio-8080-exec-3] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 20:19:14,952 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 20:19:14,955 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 20:19:14,955 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 20:19:14,956 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 20:19:14,956 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 20:19:14,956 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 20:19:14,957 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 20:19:14,957 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 20:19:37,850 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-3] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.io.IOException: Connection is not open
	at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:514)
	at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:648)
	at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:622)
	at org.apache.commons.net.ftp.FTP.syst(FTP.java:1712)
	at org.apache.commons.net.ftp.FTPClient.getSystemType(FTPClient.java:2792)
	at org.apache.commons.net.ftp.FTPClient.__createParser(FTPClient.java:3369)
	at org.apache.commons.net.ftp.FTPClient.initiateListParsing(FTPClient.java:3338)
	at org.apache.commons.net.ftp.FTPClient.listFiles(FTPClient.java:3084)
	at com.yuripe.core.library.services.FTPService.listFiles(FTPService.java:66)
	at com.yuripe.core.library.services.FTPService.checkFTPServerTargetFile(FTPService.java:46)
	at com.yuripe.normalizator.configurations.FTPServiceCustom.checkValidMandatoryInput(FTPServiceCustom.java:23)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:108)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$eda39f80.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 20:21:14,312 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 20:21:14,313 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:21:14,313 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 20:21:14,314 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:21:14,314 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 20:21:14,314 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 20:21:14,314 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 20:21:14,314 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 20:21:14,315 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-2] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 20:21:14,315 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 20:21:14,315 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2023-04-17 20:21:14,317 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 20:21:14,317 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 20:21:14,317 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 20:21:14,317 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 20:21:52,624 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 20:21:52,630 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 20:21:52,633 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 20:21:52,634 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 20:21:52,634 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 20:21:52,635 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 20:21:52,635 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 20:21:52,635 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 20:21:52,635 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 20:23:55,163 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-2] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.io.IOException: Connection is not open
	at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:514)
	at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:648)
	at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:622)
	at org.apache.commons.net.ftp.FTP.syst(FTP.java:1712)
	at org.apache.commons.net.ftp.FTPClient.getSystemType(FTPClient.java:2792)
	at org.apache.commons.net.ftp.FTPClient.__createParser(FTPClient.java:3369)
	at org.apache.commons.net.ftp.FTPClient.initiateListParsing(FTPClient.java:3338)
	at org.apache.commons.net.ftp.FTPClient.listFiles(FTPClient.java:3084)
	at com.yuripe.core.library.services.FTPService.listFiles(FTPService.java:66)
	at com.yuripe.core.library.services.FTPService.checkFTPServerTargetFile(FTPService.java:46)
	at com.yuripe.normalizator.configurations.FTPServiceCustom.checkValidMandatoryInput(FTPServiceCustom.java:23)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:108)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$eda39f80.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 20:24:30,532 INFO com.yuripe.normalizator.NormalypApplication [main] Starting NormalypApplication using Java 17.0.2 on YPNB with PID 16476 (C:\Users\yurip\git\normalyp\normalyp\target\classes started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 20:24:30,535 DEBUG com.yuripe.normalizator.NormalypApplication [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 20:24:30,536 INFO com.yuripe.normalizator.NormalypApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 20:24:32,076 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@935d3f9
2023-04-17 20:24:32,077 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@935d3f9
2023-04-17 20:24:32,077 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@935d3f9
2023-04-17 20:24:32,078 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7de147e9
2023-04-17 20:24:32,079 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@8eb6f9a
2023-04-17 20:24:32,080 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@13ef7fa1
2023-04-17 20:24:32,082 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@57a667c8
2023-04-17 20:24:32,082 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@57a667c8
2023-04-17 20:24:32,082 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@57a667c8
2023-04-17 20:24:32,084 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@4861cca9
2023-04-17 20:24:32,084 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@4861cca9
2023-04-17 20:24:32,085 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4861cca9
2023-04-17 20:24:32,085 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@1132baa3
2023-04-17 20:24:32,085 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@1132baa3
2023-04-17 20:24:32,086 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1132baa3
2023-04-17 20:24:32,086 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@57e03347
2023-04-17 20:24:32,087 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@57e03347
2023-04-17 20:24:32,087 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57e03347
2023-04-17 20:24:32,088 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@5fb8dc01
2023-04-17 20:24:32,089 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@5fb8dc01
2023-04-17 20:24:32,089 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@5fb8dc01
2023-04-17 20:24:32,090 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@554566a8
2023-04-17 20:24:32,090 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@554566a8
2023-04-17 20:24:32,091 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@554566a8
2023-04-17 20:24:32,091 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@2b44605c
2023-04-17 20:24:32,092 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@2b44605c
2023-04-17 20:24:32,092 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2b44605c
2023-04-17 20:24:32,093 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@611c3eae
2023-04-17 20:24:32,093 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@611c3eae
2023-04-17 20:24:32,095 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7b5ac347
2023-04-17 20:24:32,096 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7b5ac347
2023-04-17 20:24:32,097 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@6b25ef1c
2023-04-17 20:24:32,097 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@6b25ef1c
2023-04-17 20:24:32,097 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3f0ce0d1
2023-04-17 20:24:32,098 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1aedf08d
2023-04-17 20:24:32,099 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@1201769d
2023-04-17 20:24:32,099 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@1201769d
2023-04-17 20:24:32,100 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@504497fa
2023-04-17 20:24:32,100 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@504497fa
2023-04-17 20:24:32,102 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@6b5c134e
2023-04-17 20:24:32,102 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6b5c134e
2023-04-17 20:24:32,103 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@24691c5
2023-04-17 20:24:32,103 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@24691c5
2023-04-17 20:24:32,104 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5cc1bf20
2023-04-17 20:24:32,105 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5cc1bf20
2023-04-17 20:24:32,106 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@bd93bc3
2023-04-17 20:24:32,106 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@bd93bc3
2023-04-17 20:24:32,108 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@55bf35e5
2023-04-17 20:24:32,108 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@55bf35e5
2023-04-17 20:24:32,109 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6b16de91
2023-04-17 20:24:32,109 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6b16de91
2023-04-17 20:24:32,111 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@57c69937
2023-04-17 20:24:32,111 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@57c69937
2023-04-17 20:24:32,112 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@781dac73
2023-04-17 20:24:32,113 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@781dac73
2023-04-17 20:24:32,114 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@30159886
2023-04-17 20:24:32,114 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@30159886
2023-04-17 20:24:32,116 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@6682e6a5
2023-04-17 20:24:32,116 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6682e6a5
2023-04-17 20:24:32,116 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6682e6a5
2023-04-17 20:24:32,118 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@d84b3a2
2023-04-17 20:24:32,119 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1544ded3
2023-04-17 20:24:32,119 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1544ded3
2023-04-17 20:24:32,120 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1544ded3
2023-04-17 20:24:32,120 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@773eca84
2023-04-17 20:24:32,121 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5f56424d
2023-04-17 20:24:32,122 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@701c223a
2023-04-17 20:24:32,122 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@701c223a
2023-04-17 20:24:32,123 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@44dd0d38
2023-04-17 20:24:32,124 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@44dd0d38
2023-04-17 20:24:32,125 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@2bdab835
2023-04-17 20:24:32,125 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2bdab835
2023-04-17 20:24:32,126 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@1815577b
2023-04-17 20:24:32,126 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1815577b
2023-04-17 20:24:32,135 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1f949ab9
2023-04-17 20:24:32,135 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1f949ab9
2023-04-17 20:24:32,135 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3855d9b2
2023-04-17 20:24:32,136 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@da09250
2023-04-17 20:24:32,136 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@da09250
2023-04-17 20:24:32,136 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@da09250
2023-04-17 20:24:32,137 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@112c2930
2023-04-17 20:24:32,138 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@112c2930
2023-04-17 20:24:32,138 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@112c2930
2023-04-17 20:24:32,139 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@beabd6b
2023-04-17 20:24:32,140 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@2bfc2f8b
2023-04-17 20:24:32,140 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@1ae924f1
2023-04-17 20:24:32,140 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@1ae924f1
2023-04-17 20:24:32,141 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@1ae924f1
2023-04-17 20:24:32,141 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5f3b84bd
2023-04-17 20:24:32,141 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5f3b84bd
2023-04-17 20:24:32,142 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5f3b84bd
2023-04-17 20:24:32,142 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@166b11e
2023-04-17 20:24:32,142 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@3bc20984
2023-04-17 20:24:32,143 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@6735f210
2023-04-17 20:24:32,143 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6735f210
2023-04-17 20:24:32,144 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@173511ff
2023-04-17 20:24:32,145 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@216f01
2023-04-17 20:24:32,145 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@216f01
2023-04-17 20:24:32,146 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@120350eb
2023-04-17 20:24:32,146 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@120350eb
2023-04-17 20:24:32,147 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4217bce6
2023-04-17 20:24:32,147 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1b31af02
2023-04-17 20:24:32,148 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@730bea0
2023-04-17 20:24:32,151 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@5a3cf878
2023-04-17 20:24:32,151 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5a3cf878
2023-04-17 20:24:32,151 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5c53c235
2023-04-17 20:24:32,151 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2dcd0e41
2023-04-17 20:24:32,151 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7272ee51
2023-04-17 20:24:32,152 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1b409a79
2023-04-17 20:24:32,152 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5940b14e
2023-04-17 20:24:32,152 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1cba0321
2023-04-17 20:24:32,152 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@795f6681
2023-04-17 20:24:32,152 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@66d3b881
2023-04-17 20:24:32,582 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4c50cd7d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3ea84e01]
2023-04-17 20:24:32,966 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 20:24:32,968 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 20:24:32,968 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4c50cd7d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4bb9f7d4]
2023-04-17 20:24:33,548 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4bb9f7d4] for TypeConfiguration
2023-04-17 20:24:33,888 DEBUG com.yuripe.normalizator.security.jwt.AuthTokenFilter [main] Filter 'authenticationJwtTokenFilter' configured for use
2023-04-17 20:24:34,913 INFO com.yuripe.normalizator.NormalypApplication [main] Started NormalypApplication in 4.717 seconds (JVM running for 5.63)
2023-04-17 20:24:39,814 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 20:24:39,816 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:24:39,818 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 20:24:39,824 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:24:39,825 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 20:24:39,825 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 20:24:39,825 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 20:24:39,827 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 20:24:39,838 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-2] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 20:24:39,845 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 20:24:39,846 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2023-04-17 20:24:39,853 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 20:24:39,853 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 20:24:39,854 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 20:24:39,854 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 20:24:44,128 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 20:24:44,130 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 20:24:44,132 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 20:24:44,132 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 20:24:44,133 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 20:24:44,133 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 20:24:44,133 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 20:24:44,133 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 20:24:44,133 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 20:25:09,800 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-2] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.io.IOException: Connection is not open
	at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:514)
	at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:648)
	at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:622)
	at org.apache.commons.net.ftp.FTP.syst(FTP.java:1712)
	at org.apache.commons.net.ftp.FTPClient.getSystemType(FTPClient.java:2792)
	at org.apache.commons.net.ftp.FTPClient.__createParser(FTPClient.java:3369)
	at org.apache.commons.net.ftp.FTPClient.initiateListParsing(FTPClient.java:3338)
	at org.apache.commons.net.ftp.FTPClient.listFiles(FTPClient.java:3084)
	at com.yuripe.core.library.services.FTPService.listFiles(FTPService.java:66)
	at com.yuripe.core.library.services.FTPService.checkFTPServerTargetFile(FTPService.java:46)
	at com.yuripe.normalizator.configurations.FTPServiceCustom.checkValidMandatoryInput(FTPServiceCustom.java:23)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:108)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$34538531.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 20:25:56,329 INFO com.yuripe.normalizator.NormalypApplication [main] Starting NormalypApplication using Java 17.0.2 on YPNB with PID 16584 (C:\Users\yurip\git\normalyp\normalyp\target\classes started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 20:25:56,335 DEBUG com.yuripe.normalizator.NormalypApplication [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 20:25:56,335 INFO com.yuripe.normalizator.NormalypApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 20:25:57,986 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@307af381
2023-04-17 20:25:57,987 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@307af381
2023-04-17 20:25:57,987 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@307af381
2023-04-17 20:25:57,988 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5514579e
2023-04-17 20:25:57,988 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@54895681
2023-04-17 20:25:57,989 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@935d3f9
2023-04-17 20:25:57,991 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@37d699a1
2023-04-17 20:25:57,991 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@37d699a1
2023-04-17 20:25:57,992 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@37d699a1
2023-04-17 20:25:57,993 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@23b1aa9
2023-04-17 20:25:57,993 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@23b1aa9
2023-04-17 20:25:57,994 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@23b1aa9
2023-04-17 20:25:57,994 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@57a667c8
2023-04-17 20:25:57,995 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@57a667c8
2023-04-17 20:25:57,995 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@57a667c8
2023-04-17 20:25:57,996 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@4861cca9
2023-04-17 20:25:57,996 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@4861cca9
2023-04-17 20:25:57,996 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4861cca9
2023-04-17 20:25:57,997 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@1132baa3
2023-04-17 20:25:57,997 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@1132baa3
2023-04-17 20:25:57,997 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1132baa3
2023-04-17 20:25:57,998 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@57e03347
2023-04-17 20:25:57,999 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@57e03347
2023-04-17 20:25:57,999 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@57e03347
2023-04-17 20:25:57,999 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@5fb8dc01
2023-04-17 20:25:58,000 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@5fb8dc01
2023-04-17 20:25:58,000 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5fb8dc01
2023-04-17 20:25:58,000 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@554566a8
2023-04-17 20:25:58,000 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@554566a8
2023-04-17 20:25:58,001 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2b44605c
2023-04-17 20:25:58,002 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2b44605c
2023-04-17 20:25:58,003 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@611c3eae
2023-04-17 20:25:58,003 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@611c3eae
2023-04-17 20:25:58,003 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@17176b18
2023-04-17 20:25:58,004 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@57b9389f
2023-04-17 20:25:58,005 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@56b1e527
2023-04-17 20:25:58,005 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@56b1e527
2023-04-17 20:25:58,006 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@1aedf08d
2023-04-17 20:25:58,006 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1aedf08d
2023-04-17 20:25:58,007 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@1201769d
2023-04-17 20:25:58,007 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1201769d
2023-04-17 20:25:58,008 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@504497fa
2023-04-17 20:25:58,008 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@504497fa
2023-04-17 20:25:58,009 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6b5c134e
2023-04-17 20:25:58,009 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6b5c134e
2023-04-17 20:25:58,016 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@24691c5
2023-04-17 20:25:58,017 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@24691c5
2023-04-17 20:25:58,018 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cc1bf20
2023-04-17 20:25:58,018 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cc1bf20
2023-04-17 20:25:58,019 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@bd93bc3
2023-04-17 20:25:58,019 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@bd93bc3
2023-04-17 20:25:58,020 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@71bb8b34
2023-04-17 20:25:58,020 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@71bb8b34
2023-04-17 20:25:58,021 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@100bba26
2023-04-17 20:25:58,021 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@100bba26
2023-04-17 20:25:58,022 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@421ead7e
2023-04-17 20:25:58,023 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@421ead7e
2023-04-17 20:25:58,025 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@5e67a490
2023-04-17 20:25:58,025 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5e67a490
2023-04-17 20:25:58,025 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5e67a490
2023-04-17 20:25:58,027 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7f4e5a39
2023-04-17 20:25:58,028 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@11e17893
2023-04-17 20:25:58,028 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@11e17893
2023-04-17 20:25:58,029 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@11e17893
2023-04-17 20:25:58,029 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7cc2c551
2023-04-17 20:25:58,030 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@30036a18
2023-04-17 20:25:58,031 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@773eca84
2023-04-17 20:25:58,031 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@773eca84
2023-04-17 20:25:58,032 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@5f56424d
2023-04-17 20:25:58,032 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5f56424d
2023-04-17 20:25:58,033 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@701c223a
2023-04-17 20:25:58,033 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@701c223a
2023-04-17 20:25:58,034 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@44dd0d38
2023-04-17 20:25:58,035 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@44dd0d38
2023-04-17 20:25:58,035 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2bdab835
2023-04-17 20:25:58,035 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2bdab835
2023-04-17 20:25:58,036 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f64d9cb
2023-04-17 20:25:58,037 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@4c04216f
2023-04-17 20:25:58,037 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@4c04216f
2023-04-17 20:25:58,037 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@4c04216f
2023-04-17 20:25:58,038 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@39f42d0e
2023-04-17 20:25:58,038 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@39f42d0e
2023-04-17 20:25:58,038 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@39f42d0e
2023-04-17 20:25:58,039 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@da09250
2023-04-17 20:25:58,040 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@6fb0261e
2023-04-17 20:25:58,041 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@1f758e4f
2023-04-17 20:25:58,041 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@1f758e4f
2023-04-17 20:25:58,041 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@1f758e4f
2023-04-17 20:25:58,042 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2bfc2f8b
2023-04-17 20:25:58,043 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2bfc2f8b
2023-04-17 20:25:58,043 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2bfc2f8b
2023-04-17 20:25:58,044 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@13ca16bf
2023-04-17 20:25:58,044 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@59d5a6fd
2023-04-17 20:25:58,046 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@166b11e
2023-04-17 20:25:58,046 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@166b11e
2023-04-17 20:25:58,047 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3bc20984
2023-04-17 20:25:58,048 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@6735f210
2023-04-17 20:25:58,049 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6735f210
2023-04-17 20:25:58,052 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@55c50f52
2023-04-17 20:25:58,052 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@55c50f52
2023-04-17 20:25:58,054 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@216f01
2023-04-17 20:25:58,055 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@722787b5
2023-04-17 20:25:58,056 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4217bce6
2023-04-17 20:25:58,059 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@51fe7f15
2023-04-17 20:25:58,059 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@51fe7f15
2023-04-17 20:25:58,059 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@41f964f9
2023-04-17 20:25:58,060 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@652e345
2023-04-17 20:25:58,060 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7574d4ad
2023-04-17 20:25:58,060 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7bede4ea
2023-04-17 20:25:58,061 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@713999c2
2023-04-17 20:25:58,061 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6060146b
2023-04-17 20:25:58,061 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@33627576
2023-04-17 20:25:58,061 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@27bc1d44
2023-04-17 20:25:58,430 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@83ebdc5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@a047bdb]
2023-04-17 20:25:58,786 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 20:25:58,788 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 20:25:58,788 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@83ebdc5] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@b8142f4]
2023-04-17 20:25:59,312 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@b8142f4] for TypeConfiguration
2023-04-17 20:25:59,679 DEBUG com.yuripe.normalizator.security.jwt.AuthTokenFilter [main] Filter 'authenticationJwtTokenFilter' configured for use
2023-04-17 20:26:00,615 INFO com.yuripe.normalizator.NormalypApplication [main] Started NormalypApplication in 4.668 seconds (JVM running for 5.749)
2023-04-17 20:26:09,960 DEBUG org.hibernate.SQL [http-nio-8080-exec-1] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 20:26:09,962 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:26:09,965 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 20:26:09,971 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:26:09,971 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 20:26:09,971 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 20:26:09,972 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 20:26:09,972 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 20:26:09,981 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-1] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 20:26:09,989 DEBUG org.hibernate.SQL [http-nio-8080-exec-1] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 20:26:09,989 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2023-04-17 20:26:09,993 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 20:26:09,994 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 20:26:09,994 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 20:26:09,994 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 20:26:13,581 DEBUG org.hibernate.SQL [http-nio-8080-exec-1] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 20:26:13,583 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 20:26:13,586 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 20:26:13,586 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 20:26:13,586 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 20:26:13,587 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 20:26:13,587 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 20:26:13,587 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 20:26:13,587 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 20:26:37,109 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-1] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.io.IOException: Connection is not open
	at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:514)
	at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:648)
	at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:622)
	at org.apache.commons.net.ftp.FTP.syst(FTP.java:1712)
	at org.apache.commons.net.ftp.FTPClient.getSystemType(FTPClient.java:2792)
	at org.apache.commons.net.ftp.FTPClient.__createParser(FTPClient.java:3369)
	at org.apache.commons.net.ftp.FTPClient.initiateListParsing(FTPClient.java:3338)
	at org.apache.commons.net.ftp.FTPClient.listFiles(FTPClient.java:3084)
	at com.yuripe.core.library.services.FTPService.listFiles(FTPService.java:66)
	at com.yuripe.core.library.services.FTPService.checkFTPServerTargetFile(FTPService.java:46)
	at com.yuripe.normalizator.configurations.FTPServiceCustom.checkValidMandatoryInput(FTPServiceCustom.java:23)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:108)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$ab1dbbc5.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 20:27:02,030 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 20:27:02,030 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:27:02,032 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 20:27:02,033 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:27:02,033 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 20:27:02,033 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 20:27:02,033 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 20:27:02,033 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 20:27:02,033 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-4] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 20:27:02,034 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 20:27:02,034 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2023-04-17 20:27:02,035 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 20:27:02,036 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 20:27:02,036 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 20:27:02,036 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 20:27:04,498 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 20:27:04,501 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 20:27:04,504 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 20:27:04,504 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 20:27:04,505 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 20:27:04,505 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 20:27:04,506 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 20:27:04,506 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 20:27:04,506 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 20:28:53,897 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-4] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.io.IOException: Connection is not open
	at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:514)
	at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:648)
	at org.apache.commons.net.ftp.FTP.sendCommand(FTP.java:622)
	at org.apache.commons.net.ftp.FTP.syst(FTP.java:1712)
	at org.apache.commons.net.ftp.FTPClient.getSystemType(FTPClient.java:2792)
	at org.apache.commons.net.ftp.FTPClient.__createParser(FTPClient.java:3369)
	at org.apache.commons.net.ftp.FTPClient.initiateListParsing(FTPClient.java:3338)
	at org.apache.commons.net.ftp.FTPClient.listFiles(FTPClient.java:3084)
	at com.yuripe.core.library.services.FTPService.listFiles(FTPService.java:66)
	at com.yuripe.core.library.services.FTPService.checkFTPServerTargetFile(FTPService.java:46)
	at com.yuripe.normalizator.configurations.FTPServiceCustom.checkValidMandatoryInput(FTPServiceCustom.java:23)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:108)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$ab1dbbc5.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 20:29:34,889 INFO com.yuripe.normalizator.NormalypApplicationTests [main] Starting NormalypApplicationTests using Java 17.0.2 on YPNB with PID 11024 (started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 20:29:34,892 DEBUG com.yuripe.normalizator.NormalypApplicationTests [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 20:29:34,893 INFO com.yuripe.normalizator.NormalypApplicationTests [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 20:29:36,590 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@36478bce
2023-04-17 20:29:36,591 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@36478bce
2023-04-17 20:29:36,591 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@36478bce
2023-04-17 20:29:36,592 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@39d77de9
2023-04-17 20:29:36,592 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@785ed99c
2023-04-17 20:29:36,593 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@272778ae
2023-04-17 20:29:36,594 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@47fcefb3
2023-04-17 20:29:36,595 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@47fcefb3
2023-04-17 20:29:36,595 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@47fcefb3
2023-04-17 20:29:36,596 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@3f5dfe69
2023-04-17 20:29:36,597 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@3f5dfe69
2023-04-17 20:29:36,597 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3f5dfe69
2023-04-17 20:29:36,599 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@451e2fa9
2023-04-17 20:29:36,600 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@451e2fa9
2023-04-17 20:29:36,600 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@451e2fa9
2023-04-17 20:29:36,601 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@a91119b
2023-04-17 20:29:36,601 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@a91119b
2023-04-17 20:29:36,602 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@a91119b
2023-04-17 20:29:36,603 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@60591e1b
2023-04-17 20:29:36,605 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@60591e1b
2023-04-17 20:29:36,605 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@60591e1b
2023-04-17 20:29:36,607 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@74a820bf
2023-04-17 20:29:36,607 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@74a820bf
2023-04-17 20:29:36,607 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@74a820bf
2023-04-17 20:29:36,609 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@5333f08f
2023-04-17 20:29:36,609 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@5333f08f
2023-04-17 20:29:36,609 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5333f08f
2023-04-17 20:29:36,611 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@c568f91
2023-04-17 20:29:36,611 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@c568f91
2023-04-17 20:29:36,613 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6fbf5db2
2023-04-17 20:29:36,613 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6fbf5db2
2023-04-17 20:29:36,615 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@4a31ed12
2023-04-17 20:29:36,615 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@4a31ed12
2023-04-17 20:29:36,616 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@49232c6f
2023-04-17 20:29:36,617 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7781263c
2023-04-17 20:29:36,619 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@37d3e140
2023-04-17 20:29:36,619 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@37d3e140
2023-04-17 20:29:36,620 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@1291aab5
2023-04-17 20:29:36,620 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1291aab5
2023-04-17 20:29:36,622 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@325162e9
2023-04-17 20:29:36,622 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@325162e9
2023-04-17 20:29:36,623 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@545d2560
2023-04-17 20:29:36,624 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@545d2560
2023-04-17 20:29:36,626 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@16681017
2023-04-17 20:29:36,626 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@16681017
2023-04-17 20:29:36,627 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3079c26a
2023-04-17 20:29:36,627 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3079c26a
2023-04-17 20:29:36,628 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7841bd30
2023-04-17 20:29:36,629 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7841bd30
2023-04-17 20:29:36,630 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@78c74647
2023-04-17 20:29:36,630 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@78c74647
2023-04-17 20:29:36,632 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@61d60e38
2023-04-17 20:29:36,632 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@61d60e38
2023-04-17 20:29:36,634 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@55a0f011
2023-04-17 20:29:36,635 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@55a0f011
2023-04-17 20:29:36,637 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@61da0413
2023-04-17 20:29:36,637 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@61da0413
2023-04-17 20:29:36,639 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@3e43f049
2023-04-17 20:29:36,640 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e43f049
2023-04-17 20:29:36,640 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e43f049
2023-04-17 20:29:36,642 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5122e4bf
2023-04-17 20:29:36,647 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@2c8b8de0
2023-04-17 20:29:36,648 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2c8b8de0
2023-04-17 20:29:36,648 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2c8b8de0
2023-04-17 20:29:36,649 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@36d582cb
2023-04-17 20:29:36,650 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6562cc23
2023-04-17 20:29:36,652 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@47187f50
2023-04-17 20:29:36,652 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@47187f50
2023-04-17 20:29:36,653 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@241b971f
2023-04-17 20:29:36,653 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@241b971f
2023-04-17 20:29:36,654 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@70be89ec
2023-04-17 20:29:36,655 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@70be89ec
2023-04-17 20:29:36,656 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@935493d
2023-04-17 20:29:36,656 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@935493d
2023-04-17 20:29:36,657 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@87f501f
2023-04-17 20:29:36,657 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@87f501f
2023-04-17 20:29:36,657 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4863c8ac
2023-04-17 20:29:36,659 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@1e56bc9b
2023-04-17 20:29:36,659 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1e56bc9b
2023-04-17 20:29:36,659 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@1e56bc9b
2023-04-17 20:29:36,661 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7be94cd6
2023-04-17 20:29:36,661 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7be94cd6
2023-04-17 20:29:36,661 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7be94cd6
2023-04-17 20:29:36,662 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@7f22687e
2023-04-17 20:29:36,663 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@1e495414
2023-04-17 20:29:36,664 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@2f09e6b2
2023-04-17 20:29:36,665 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@2f09e6b2
2023-04-17 20:29:36,665 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@2f09e6b2
2023-04-17 20:29:36,666 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@34f7b44f
2023-04-17 20:29:36,666 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@34f7b44f
2023-04-17 20:29:36,667 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@34f7b44f
2023-04-17 20:29:36,667 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@25a5c8e
2023-04-17 20:29:36,668 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@14e750c5
2023-04-17 20:29:36,670 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@7d50f2a8
2023-04-17 20:29:36,670 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7d50f2a8
2023-04-17 20:29:36,671 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6321a5aa
2023-04-17 20:29:36,672 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@39449465
2023-04-17 20:29:36,673 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@39449465
2023-04-17 20:29:36,675 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@ef86c72
2023-04-17 20:29:36,675 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@ef86c72
2023-04-17 20:29:36,676 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ad3f70a
2023-04-17 20:29:36,676 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7761e342
2023-04-17 20:29:36,678 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@6ce26986
2023-04-17 20:29:36,681 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@39f0c343
2023-04-17 20:29:36,682 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@39f0c343
2023-04-17 20:29:36,683 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@71c0b742
2023-04-17 20:29:36,683 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3bbb8c16
2023-04-17 20:29:36,684 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@73e1ecd0
2023-04-17 20:29:36,684 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@11eec06b
2023-04-17 20:29:36,684 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65600fb3
2023-04-17 20:29:36,685 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@25ce435
2023-04-17 20:29:36,685 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7ea71fc2
2023-04-17 20:29:36,685 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@19ad75e5
2023-04-17 20:29:37,219 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e50eeb9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@34cb0e49]
2023-04-17 20:29:37,654 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 20:29:37,657 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 20:29:37,657 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e50eeb9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6774f264]
2023-04-17 20:29:38,227 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6774f264] for TypeConfiguration
2023-04-17 20:29:40,233 INFO com.yuripe.normalizator.NormalypApplicationTests [main] Started NormalypApplicationTests in 5.581 seconds (JVM running for 6.582)
2023-04-17 20:29:40,478 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [SpringApplicationShutdownHook] Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6774f264] for TypeConfiguration
2023-04-17 20:29:40,479 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [SpringApplicationShutdownHook] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@568a55d1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6774f264]
2023-04-17 20:30:02,321 INFO com.yuripe.normalizator.NormalypApplicationTests [main] Starting NormalypApplicationTests using Java 17.0.2 on YPNB with PID 3412 (started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 20:30:02,324 DEBUG com.yuripe.normalizator.NormalypApplicationTests [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 20:30:02,324 INFO com.yuripe.normalizator.NormalypApplicationTests [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 20:30:04,044 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@2c06b113
2023-04-17 20:30:04,045 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@2c06b113
2023-04-17 20:30:04,046 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2c06b113
2023-04-17 20:30:04,047 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@272778ae
2023-04-17 20:30:04,048 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@6842c101
2023-04-17 20:30:04,049 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47fcefb3
2023-04-17 20:30:04,050 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@571a663c
2023-04-17 20:30:04,051 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@571a663c
2023-04-17 20:30:04,051 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@571a663c
2023-04-17 20:30:04,053 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@497ed877
2023-04-17 20:30:04,054 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@497ed877
2023-04-17 20:30:04,054 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@497ed877
2023-04-17 20:30:04,056 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@77083e41
2023-04-17 20:30:04,056 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@77083e41
2023-04-17 20:30:04,057 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@77083e41
2023-04-17 20:30:04,058 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@29c53c4f
2023-04-17 20:30:04,058 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@29c53c4f
2023-04-17 20:30:04,058 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@29c53c4f
2023-04-17 20:30:04,060 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@5a30722c
2023-04-17 20:30:04,062 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@5a30722c
2023-04-17 20:30:04,063 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@5a30722c
2023-04-17 20:30:04,064 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@27898e13
2023-04-17 20:30:04,064 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@27898e13
2023-04-17 20:30:04,065 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@27898e13
2023-04-17 20:30:04,066 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@5fd43e58
2023-04-17 20:30:04,066 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@5fd43e58
2023-04-17 20:30:04,066 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5fd43e58
2023-04-17 20:30:04,067 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@509a6095
2023-04-17 20:30:04,067 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@509a6095
2023-04-17 20:30:04,069 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3ab595c8
2023-04-17 20:30:04,070 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3ab595c8
2023-04-17 20:30:04,071 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@7781263c
2023-04-17 20:30:04,071 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@7781263c
2023-04-17 20:30:04,072 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6b9c42bd
2023-04-17 20:30:04,072 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e53c4ad
2023-04-17 20:30:04,073 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@7d133fb7
2023-04-17 20:30:04,074 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7d133fb7
2023-04-17 20:30:04,075 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@1ee40b5c
2023-04-17 20:30:04,075 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1ee40b5c
2023-04-17 20:30:04,076 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@124eb83d
2023-04-17 20:30:04,077 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@124eb83d
2023-04-17 20:30:04,078 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6aae0e6f
2023-04-17 20:30:04,078 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6aae0e6f
2023-04-17 20:30:04,079 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1e2445f6
2023-04-17 20:30:04,079 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1e2445f6
2023-04-17 20:30:04,080 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@45c80312
2023-04-17 20:30:04,081 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@45c80312
2023-04-17 20:30:04,082 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@39652a30
2023-04-17 20:30:04,082 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@39652a30
2023-04-17 20:30:04,084 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@629075f4
2023-04-17 20:30:04,084 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@629075f4
2023-04-17 20:30:04,086 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27e199ce
2023-04-17 20:30:04,087 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27e199ce
2023-04-17 20:30:04,089 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@61da0413
2023-04-17 20:30:04,089 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@61da0413
2023-04-17 20:30:04,091 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@3e43f049
2023-04-17 20:30:04,091 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3e43f049
2023-04-17 20:30:04,092 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@27f71195
2023-04-17 20:30:04,092 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@27f71195
2023-04-17 20:30:04,092 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@27f71195
2023-04-17 20:30:04,094 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2c8b8de0
2023-04-17 20:30:04,095 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@3f048c86
2023-04-17 20:30:04,095 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3f048c86
2023-04-17 20:30:04,095 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3f048c86
2023-04-17 20:30:04,096 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2ce524d2
2023-04-17 20:30:04,096 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@78116659
2023-04-17 20:30:04,097 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@125f16b2
2023-04-17 20:30:04,097 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@125f16b2
2023-04-17 20:30:04,098 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@2aee0704
2023-04-17 20:30:04,098 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2aee0704
2023-04-17 20:30:04,099 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@9b367c8
2023-04-17 20:30:04,099 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@9b367c8
2023-04-17 20:30:04,100 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@54495935
2023-04-17 20:30:04,101 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@54495935
2023-04-17 20:30:04,102 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1edfedf1
2023-04-17 20:30:04,102 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1edfedf1
2023-04-17 20:30:04,103 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1e56bc9b
2023-04-17 20:30:04,104 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@20cff21e
2023-04-17 20:30:04,104 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@20cff21e
2023-04-17 20:30:04,104 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@20cff21e
2023-04-17 20:30:04,105 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6af87130
2023-04-17 20:30:04,105 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6af87130
2023-04-17 20:30:04,105 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6af87130
2023-04-17 20:30:04,106 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@30508066
2023-04-17 20:30:04,107 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@1bee0085
2023-04-17 20:30:04,108 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5403907
2023-04-17 20:30:04,108 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5403907
2023-04-17 20:30:04,108 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5403907
2023-04-17 20:30:04,109 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@14e750c5
2023-04-17 20:30:04,109 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@14e750c5
2023-04-17 20:30:04,110 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@14e750c5
2023-04-17 20:30:04,110 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@77324a58
2023-04-17 20:30:04,111 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@66713605
2023-04-17 20:30:04,113 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@7b297740
2023-04-17 20:30:04,113 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7b297740
2023-04-17 20:30:04,114 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e0ad709
2023-04-17 20:30:04,115 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@35563e4c
2023-04-17 20:30:04,115 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@35563e4c
2023-04-17 20:30:04,116 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@7761e342
2023-04-17 20:30:04,117 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7761e342
2023-04-17 20:30:04,117 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2d237460
2023-04-17 20:30:04,118 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2f4d32bf
2023-04-17 20:30:04,119 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4f811029
2023-04-17 20:30:04,122 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@65600fb3
2023-04-17 20:30:04,123 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@65600fb3
2023-04-17 20:30:04,123 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7cd5fcf4
2023-04-17 20:30:04,123 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@19cdc217
2023-04-17 20:30:04,124 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5f5297e3
2023-04-17 20:30:04,124 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2d22d3b1
2023-04-17 20:30:04,124 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7ec3a8bd
2023-04-17 20:30:04,124 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@9690008
2023-04-17 20:30:04,124 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@42cf6349
2023-04-17 20:30:04,125 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@79cb8ffa
2023-04-17 20:30:04,593 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@782e6b40] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3b65084e]
2023-04-17 20:30:05,014 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 20:30:05,017 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 20:30:05,017 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@782e6b40] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5cd71ee2]
2023-04-17 20:30:05,551 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5cd71ee2] for TypeConfiguration
2023-04-17 20:30:07,404 INFO com.yuripe.normalizator.NormalypApplicationTests [main] Started NormalypApplicationTests in 5.327 seconds (JVM running for 6.334)
2023-04-17 20:30:07,622 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [SpringApplicationShutdownHook] Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5cd71ee2] for TypeConfiguration
2023-04-17 20:30:07,623 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [SpringApplicationShutdownHook] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@588465b9] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5cd71ee2]
2023-04-17 20:31:06,415 INFO com.yuripe.normalizator.NormalypApplication [main] Starting NormalypApplication using Java 17.0.2 on YPNB with PID 11672 (C:\Users\yurip\git\normalyp\normalyp\target\classes started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 20:31:06,420 DEBUG com.yuripe.normalizator.NormalypApplication [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 20:31:06,421 INFO com.yuripe.normalizator.NormalypApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 20:31:08,061 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1796b2d4
2023-04-17 20:31:08,062 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1796b2d4
2023-04-17 20:31:08,062 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1796b2d4
2023-04-17 20:31:08,063 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@200d1a3d
2023-04-17 20:31:08,063 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@7f42b194
2023-04-17 20:31:08,064 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@402b4f81
2023-04-17 20:31:08,065 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@e26a3df
2023-04-17 20:31:08,065 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@e26a3df
2023-04-17 20:31:08,065 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@e26a3df
2023-04-17 20:31:08,066 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@6d969330
2023-04-17 20:31:08,066 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@6d969330
2023-04-17 20:31:08,067 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6d969330
2023-04-17 20:31:08,067 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@7d66a126
2023-04-17 20:31:08,067 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@7d66a126
2023-04-17 20:31:08,068 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7d66a126
2023-04-17 20:31:08,068 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@307c59ea
2023-04-17 20:31:08,069 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@307c59ea
2023-04-17 20:31:08,069 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@307c59ea
2023-04-17 20:31:08,069 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@b8a144e
2023-04-17 20:31:08,069 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@b8a144e
2023-04-17 20:31:08,070 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@b8a144e
2023-04-17 20:31:08,078 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@7345f97d
2023-04-17 20:31:08,078 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@7345f97d
2023-04-17 20:31:08,078 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7345f97d
2023-04-17 20:31:08,079 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@591f6f83
2023-04-17 20:31:08,079 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@591f6f83
2023-04-17 20:31:08,079 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@591f6f83
2023-04-17 20:31:08,081 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6d6039df
2023-04-17 20:31:08,081 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6d6039df
2023-04-17 20:31:08,081 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1ab53860
2023-04-17 20:31:08,082 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1ab53860
2023-04-17 20:31:08,083 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@1600a8a2
2023-04-17 20:31:08,083 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1600a8a2
2023-04-17 20:31:08,083 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7b95bdb0
2023-04-17 20:31:08,084 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@423f8a73
2023-04-17 20:31:08,084 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@5844a2d1
2023-04-17 20:31:08,084 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@5844a2d1
2023-04-17 20:31:08,085 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@2e2f20b8
2023-04-17 20:31:08,085 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2e2f20b8
2023-04-17 20:31:08,086 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@3d0d120b
2023-04-17 20:31:08,086 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3d0d120b
2023-04-17 20:31:08,087 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@615b5480
2023-04-17 20:31:08,087 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@615b5480
2023-04-17 20:31:08,087 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6bb4cc0e
2023-04-17 20:31:08,087 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6bb4cc0e
2023-04-17 20:31:08,088 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@375084c9
2023-04-17 20:31:08,088 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@375084c9
2023-04-17 20:31:08,089 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e67cfe1
2023-04-17 20:31:08,089 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e67cfe1
2023-04-17 20:31:08,091 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3dc39459
2023-04-17 20:31:08,091 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3dc39459
2023-04-17 20:31:08,092 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76d0ecd7
2023-04-17 20:31:08,092 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76d0ecd7
2023-04-17 20:31:08,093 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@4df7d9ee
2023-04-17 20:31:08,093 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@4df7d9ee
2023-04-17 20:31:08,094 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@33de7f3d
2023-04-17 20:31:08,094 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@33de7f3d
2023-04-17 20:31:08,095 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@19eea77c
2023-04-17 20:31:08,095 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@19eea77c
2023-04-17 20:31:08,095 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@19eea77c
2023-04-17 20:31:08,097 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7cc2c551
2023-04-17 20:31:08,097 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@537b3b2e
2023-04-17 20:31:08,097 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@537b3b2e
2023-04-17 20:31:08,098 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@537b3b2e
2023-04-17 20:31:08,098 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@119d4443
2023-04-17 20:31:08,099 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7e0f9528
2023-04-17 20:31:08,099 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@7336fd8f
2023-04-17 20:31:08,099 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7336fd8f
2023-04-17 20:31:08,100 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@852ef8d
2023-04-17 20:31:08,100 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@852ef8d
2023-04-17 20:31:08,101 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@147e0734
2023-04-17 20:31:08,101 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@147e0734
2023-04-17 20:31:08,101 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@270d5060
2023-04-17 20:31:08,101 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@270d5060
2023-04-17 20:31:08,103 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@987a0bb
2023-04-17 20:31:08,103 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@987a0bb
2023-04-17 20:31:08,104 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3afca2c
2023-04-17 20:31:08,104 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@532dacf5
2023-04-17 20:31:08,105 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@532dacf5
2023-04-17 20:31:08,105 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@532dacf5
2023-04-17 20:31:08,105 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f4d01b6
2023-04-17 20:31:08,105 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f4d01b6
2023-04-17 20:31:08,105 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f4d01b6
2023-04-17 20:31:08,107 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@661e279d
2023-04-17 20:31:08,108 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@7523d5a1
2023-04-17 20:31:08,108 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@44641d6c
2023-04-17 20:31:08,108 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@44641d6c
2023-04-17 20:31:08,108 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@44641d6c
2023-04-17 20:31:08,109 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@26874f2c
2023-04-17 20:31:08,109 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@26874f2c
2023-04-17 20:31:08,109 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@26874f2c
2023-04-17 20:31:08,109 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@2fbd390
2023-04-17 20:31:08,109 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@f18b738
2023-04-17 20:31:08,110 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@19ae36f4
2023-04-17 20:31:08,110 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@19ae36f4
2023-04-17 20:31:08,110 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5fd8dd66
2023-04-17 20:31:08,112 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@7de35070
2023-04-17 20:31:08,113 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7de35070
2023-04-17 20:31:08,114 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@48dff674
2023-04-17 20:31:08,114 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@48dff674
2023-04-17 20:31:08,114 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4a9b3956
2023-04-17 20:31:08,115 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@643ecfef
2023-04-17 20:31:08,116 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@203b953c
2023-04-17 20:31:08,118 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@7a55fb81
2023-04-17 20:31:08,118 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7a55fb81
2023-04-17 20:31:08,119 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@61911947
2023-04-17 20:31:08,119 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5c53c235
2023-04-17 20:31:08,119 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2dcd0e41
2023-04-17 20:31:08,119 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7272ee51
2023-04-17 20:31:08,119 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1b409a79
2023-04-17 20:31:08,119 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5940b14e
2023-04-17 20:31:08,119 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1cba0321
2023-04-17 20:31:08,120 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@795f6681
2023-04-17 20:31:08,496 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7645b7d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4c50cd7d]
2023-04-17 20:31:08,837 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 20:31:08,839 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 20:31:08,839 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7645b7d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@59c862af]
2023-04-17 20:31:09,368 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@59c862af] for TypeConfiguration
2023-04-17 20:31:09,712 DEBUG com.yuripe.normalizator.security.jwt.AuthTokenFilter [main] Filter 'authenticationJwtTokenFilter' configured for use
2023-04-17 20:31:10,594 INFO com.yuripe.normalizator.NormalypApplication [main] Started NormalypApplication in 4.518 seconds (JVM running for 5.444)
2023-04-17 20:31:25,335 DEBUG org.hibernate.SQL [http-nio-8080-exec-1] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 20:31:25,337 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:31:25,341 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 20:31:25,345 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:31:25,345 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 20:31:25,346 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 20:31:25,346 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 20:31:25,346 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 20:31:25,356 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-1] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 20:31:25,361 DEBUG org.hibernate.SQL [http-nio-8080-exec-1] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 20:31:25,362 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2023-04-17 20:31:25,369 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 20:31:25,370 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 20:31:25,370 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 20:31:25,371 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 20:31:28,676 DEBUG org.hibernate.SQL [http-nio-8080-exec-1] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 20:31:28,677 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 20:31:28,679 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 20:31:28,680 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 20:31:28,680 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 20:31:28,681 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 20:31:28,681 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 20:31:28,681 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 20:31:28,682 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 20:31:49,767 ERROR com.yuripe.normalizator.controllers.BatchProxyController [http-nio-8080-exec-1] Requested data 404 NOT_FOUND
2023-04-17 20:32:37,512 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 20:32:37,513 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:32:37,515 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 20:32:37,515 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:32:37,515 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 20:32:37,516 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 20:32:37,516 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 20:32:37,516 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 20:32:37,516 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-4] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 20:32:37,517 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 20:32:37,517 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2023-04-17 20:32:37,519 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 20:32:37,519 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 20:32:37,520 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 20:32:37,520 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 20:32:40,915 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 20:32:40,916 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 20:32:40,918 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 20:32:40,918 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 20:32:40,919 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 20:32:40,920 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 20:32:40,920 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 20:32:40,920 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 20:32:40,920 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 20:33:02,281 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-4] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException: Cannot invoke "java.net.Socket.getInetAddress()" because "this._socket_" is null] with root cause
java.lang.NullPointerException: Cannot invoke "java.net.Socket.getInetAddress()" because "this._socket_" is null
	at org.apache.commons.net.SocketClient.getRemoteAddress(SocketClient.java:671)
	at org.apache.commons.net.ftp.FTPClient._openDataConnection_(FTPClient.java:815)
	at org.apache.commons.net.ftp.FTPClient._retrieveFile(FTPClient.java:1899)
	at org.apache.commons.net.ftp.FTPClient.retrieveFile(FTPClient.java:1885)
	at com.yuripe.core.library.services.FTPService.downloadFile(FTPService.java:77)
	at com.yuripe.normalizator.configurations.FTPServiceCustom.getFileFromSFTP(FTPServiceCustom.java:27)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:113)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$8382dcc6.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 20:34:14,452 INFO com.yuripe.normalizator.NormalypApplication [main] Starting NormalypApplication using Java 17.0.2 on YPNB with PID 9356 (C:\Users\yurip\git\normalyp\normalyp\target\classes started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 20:34:14,457 DEBUG com.yuripe.normalizator.NormalypApplication [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 20:34:14,457 INFO com.yuripe.normalizator.NormalypApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 20:34:16,070 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1796b2d4
2023-04-17 20:34:16,071 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1796b2d4
2023-04-17 20:34:16,072 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1796b2d4
2023-04-17 20:34:16,073 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@200d1a3d
2023-04-17 20:34:16,074 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@7f42b194
2023-04-17 20:34:16,075 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@402b4f81
2023-04-17 20:34:16,076 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@e26a3df
2023-04-17 20:34:16,076 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@e26a3df
2023-04-17 20:34:16,077 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@e26a3df
2023-04-17 20:34:16,078 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@6d969330
2023-04-17 20:34:16,078 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@6d969330
2023-04-17 20:34:16,079 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6d969330
2023-04-17 20:34:16,080 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@7d66a126
2023-04-17 20:34:16,080 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@7d66a126
2023-04-17 20:34:16,080 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7d66a126
2023-04-17 20:34:16,082 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@307c59ea
2023-04-17 20:34:16,083 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@307c59ea
2023-04-17 20:34:16,083 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@307c59ea
2023-04-17 20:34:16,084 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@b8a144e
2023-04-17 20:34:16,085 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@b8a144e
2023-04-17 20:34:16,085 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@b8a144e
2023-04-17 20:34:16,085 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@7345f97d
2023-04-17 20:34:16,086 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@7345f97d
2023-04-17 20:34:16,086 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7345f97d
2023-04-17 20:34:16,087 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@591f6f83
2023-04-17 20:34:16,087 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@591f6f83
2023-04-17 20:34:16,087 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@591f6f83
2023-04-17 20:34:16,088 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6d6039df
2023-04-17 20:34:16,088 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6d6039df
2023-04-17 20:34:16,089 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1ab53860
2023-04-17 20:34:16,089 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1ab53860
2023-04-17 20:34:16,090 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@1600a8a2
2023-04-17 20:34:16,090 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1600a8a2
2023-04-17 20:34:16,091 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7b95bdb0
2023-04-17 20:34:16,091 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@423f8a73
2023-04-17 20:34:16,092 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@5844a2d1
2023-04-17 20:34:16,092 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@5844a2d1
2023-04-17 20:34:16,093 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@2e2f20b8
2023-04-17 20:34:16,093 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2e2f20b8
2023-04-17 20:34:16,094 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@3d0d120b
2023-04-17 20:34:16,094 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3d0d120b
2023-04-17 20:34:16,095 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@615b5480
2023-04-17 20:34:16,095 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@615b5480
2023-04-17 20:34:16,096 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6bb4cc0e
2023-04-17 20:34:16,096 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6bb4cc0e
2023-04-17 20:34:16,097 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@375084c9
2023-04-17 20:34:16,097 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@375084c9
2023-04-17 20:34:16,098 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e67cfe1
2023-04-17 20:34:16,098 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e67cfe1
2023-04-17 20:34:16,100 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3dc39459
2023-04-17 20:34:16,100 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3dc39459
2023-04-17 20:34:16,101 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76d0ecd7
2023-04-17 20:34:16,101 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76d0ecd7
2023-04-17 20:34:16,103 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@4df7d9ee
2023-04-17 20:34:16,103 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@4df7d9ee
2023-04-17 20:34:16,104 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@33de7f3d
2023-04-17 20:34:16,104 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@33de7f3d
2023-04-17 20:34:16,105 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@19eea77c
2023-04-17 20:34:16,105 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@19eea77c
2023-04-17 20:34:16,106 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@19eea77c
2023-04-17 20:34:16,107 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7cc2c551
2023-04-17 20:34:16,109 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@537b3b2e
2023-04-17 20:34:16,109 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@537b3b2e
2023-04-17 20:34:16,109 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@537b3b2e
2023-04-17 20:34:16,110 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@119d4443
2023-04-17 20:34:16,110 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7e0f9528
2023-04-17 20:34:16,111 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@7336fd8f
2023-04-17 20:34:16,111 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7336fd8f
2023-04-17 20:34:16,113 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@852ef8d
2023-04-17 20:34:16,113 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@852ef8d
2023-04-17 20:34:16,114 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@147e0734
2023-04-17 20:34:16,114 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@147e0734
2023-04-17 20:34:16,115 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@270d5060
2023-04-17 20:34:16,115 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@270d5060
2023-04-17 20:34:16,116 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@987a0bb
2023-04-17 20:34:16,117 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@987a0bb
2023-04-17 20:34:16,117 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3afca2c
2023-04-17 20:34:16,118 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@532dacf5
2023-04-17 20:34:16,118 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@532dacf5
2023-04-17 20:34:16,118 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@532dacf5
2023-04-17 20:34:16,119 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f4d01b6
2023-04-17 20:34:16,120 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f4d01b6
2023-04-17 20:34:16,120 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f4d01b6
2023-04-17 20:34:16,121 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@661e279d
2023-04-17 20:34:16,122 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@7523d5a1
2023-04-17 20:34:16,122 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@44641d6c
2023-04-17 20:34:16,122 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@44641d6c
2023-04-17 20:34:16,123 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@44641d6c
2023-04-17 20:34:16,123 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@26874f2c
2023-04-17 20:34:16,124 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@26874f2c
2023-04-17 20:34:16,124 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@26874f2c
2023-04-17 20:34:16,124 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@2fbd390
2023-04-17 20:34:16,124 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@f18b738
2023-04-17 20:34:16,126 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@19ae36f4
2023-04-17 20:34:16,126 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@19ae36f4
2023-04-17 20:34:16,126 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5fd8dd66
2023-04-17 20:34:16,127 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@7de35070
2023-04-17 20:34:16,128 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7de35070
2023-04-17 20:34:16,129 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@48dff674
2023-04-17 20:34:16,129 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@48dff674
2023-04-17 20:34:16,130 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4a9b3956
2023-04-17 20:34:16,131 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@643ecfef
2023-04-17 20:34:16,132 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@203b953c
2023-04-17 20:34:16,134 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@7a55fb81
2023-04-17 20:34:16,135 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7a55fb81
2023-04-17 20:34:16,135 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@61911947
2023-04-17 20:34:16,135 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5c53c235
2023-04-17 20:34:16,136 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2dcd0e41
2023-04-17 20:34:16,136 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7272ee51
2023-04-17 20:34:16,136 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1b409a79
2023-04-17 20:34:16,136 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5940b14e
2023-04-17 20:34:16,136 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1cba0321
2023-04-17 20:34:16,136 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@795f6681
2023-04-17 20:34:16,540 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7645b7d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4c50cd7d]
2023-04-17 20:34:16,893 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 20:34:16,893 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 20:34:16,895 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7645b7d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@59c862af]
2023-04-17 20:34:17,452 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@59c862af] for TypeConfiguration
2023-04-17 20:34:17,856 DEBUG com.yuripe.normalizator.security.jwt.AuthTokenFilter [main] Filter 'authenticationJwtTokenFilter' configured for use
2023-04-17 20:34:18,791 INFO com.yuripe.normalizator.NormalypApplication [main] Started NormalypApplication in 4.666 seconds (JVM running for 5.598)
2023-04-17 20:34:36,498 DEBUG org.hibernate.SQL [http-nio-8080-exec-5] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 20:34:36,500 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:34:36,504 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 20:34:36,509 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:34:36,509 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 20:34:36,510 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 20:34:36,510 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 20:34:36,510 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 20:34:36,527 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-5] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 20:34:36,536 DEBUG org.hibernate.SQL [http-nio-8080-exec-5] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 20:34:36,537 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2023-04-17 20:34:36,545 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 20:34:36,546 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 20:34:36,547 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 20:34:36,548 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 20:34:36,618 DEBUG org.hibernate.SQL [http-nio-8080-exec-5] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 20:34:36,619 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 20:34:36,620 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 20:34:36,621 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 20:34:36,621 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 20:34:36,621 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 20:34:36,621 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 20:34:36,621 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 20:34:36,622 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 20:35:31,395 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-5] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException: Cannot invoke "java.net.Socket.getInetAddress()" because "this._socket_" is null] with root cause
java.lang.NullPointerException: Cannot invoke "java.net.Socket.getInetAddress()" because "this._socket_" is null
	at org.apache.commons.net.SocketClient.getRemoteAddress(SocketClient.java:671)
	at org.apache.commons.net.ftp.FTPClient._openDataConnection_(FTPClient.java:815)
	at org.apache.commons.net.ftp.FTPClient._retrieveFile(FTPClient.java:1899)
	at org.apache.commons.net.ftp.FTPClient.retrieveFile(FTPClient.java:1885)
	at com.yuripe.core.library.services.FTPService.downloadFile(FTPService.java:77)
	at com.yuripe.normalizator.configurations.FTPServiceCustom.getFileFromSFTP(FTPServiceCustom.java:27)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:113)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$8382dcc6.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 20:36:11,025 INFO com.yuripe.normalizator.NormalypApplication [main] Starting NormalypApplication using Java 17.0.2 on YPNB with PID 12816 (C:\Users\yurip\git\normalyp\normalyp\target\classes started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 20:36:11,031 DEBUG com.yuripe.normalizator.NormalypApplication [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 20:36:11,031 INFO com.yuripe.normalizator.NormalypApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 20:36:12,545 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@4d7cac24
2023-04-17 20:36:12,546 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@4d7cac24
2023-04-17 20:36:12,546 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4d7cac24
2023-04-17 20:36:12,546 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@63917fe1
2023-04-17 20:36:12,547 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@2c60ce47
2023-04-17 20:36:12,548 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1c74d19
2023-04-17 20:36:12,549 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@5345dfe8
2023-04-17 20:36:12,549 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@5345dfe8
2023-04-17 20:36:12,550 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5345dfe8
2023-04-17 20:36:12,551 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@401e02b4
2023-04-17 20:36:12,552 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@401e02b4
2023-04-17 20:36:12,552 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@401e02b4
2023-04-17 20:36:12,552 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@10e9a5fe
2023-04-17 20:36:12,553 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@10e9a5fe
2023-04-17 20:36:12,553 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@10e9a5fe
2023-04-17 20:36:12,555 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@53feeac9
2023-04-17 20:36:12,555 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@53feeac9
2023-04-17 20:36:12,555 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@53feeac9
2023-04-17 20:36:12,556 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@2e362407
2023-04-17 20:36:12,556 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@2e362407
2023-04-17 20:36:12,556 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@2e362407
2023-04-17 20:36:12,557 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@24e5389c
2023-04-17 20:36:12,557 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@24e5389c
2023-04-17 20:36:12,557 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@24e5389c
2023-04-17 20:36:12,558 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@54326e9
2023-04-17 20:36:12,558 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@54326e9
2023-04-17 20:36:12,558 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@54326e9
2023-04-17 20:36:12,560 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@78b0ec3a
2023-04-17 20:36:12,560 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@78b0ec3a
2023-04-17 20:36:12,561 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6818fd48
2023-04-17 20:36:12,561 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6818fd48
2023-04-17 20:36:12,561 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@7b5021d1
2023-04-17 20:36:12,562 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@7b5021d1
2023-04-17 20:36:12,564 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@33bdd01
2023-04-17 20:36:12,564 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@27ffd9f8
2023-04-17 20:36:12,565 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@55c1ced9
2023-04-17 20:36:12,565 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@55c1ced9
2023-04-17 20:36:12,566 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@1144a02b
2023-04-17 20:36:12,566 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1144a02b
2023-04-17 20:36:12,567 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@35e74e08
2023-04-17 20:36:12,568 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@35e74e08
2023-04-17 20:36:12,569 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5d7f8467
2023-04-17 20:36:12,569 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5d7f8467
2023-04-17 20:36:12,570 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2eb1c615
2023-04-17 20:36:12,570 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2eb1c615
2023-04-17 20:36:12,571 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@370c7cc5
2023-04-17 20:36:12,571 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@370c7cc5
2023-04-17 20:36:12,572 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@25c1f5ee
2023-04-17 20:36:12,572 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@25c1f5ee
2023-04-17 20:36:12,573 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@74c121d4
2023-04-17 20:36:12,573 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@74c121d4
2023-04-17 20:36:12,574 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1510b9a2
2023-04-17 20:36:12,574 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1510b9a2
2023-04-17 20:36:12,575 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@6bf570c
2023-04-17 20:36:12,576 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bf570c
2023-04-17 20:36:12,576 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@7de147e9
2023-04-17 20:36:12,577 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7de147e9
2023-04-17 20:36:12,578 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@13ef7fa1
2023-04-17 20:36:12,578 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@13ef7fa1
2023-04-17 20:36:12,578 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@13ef7fa1
2023-04-17 20:36:12,579 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@267ff4df
2023-04-17 20:36:12,580 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@7f6b7426
2023-04-17 20:36:12,581 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7f6b7426
2023-04-17 20:36:12,581 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7f6b7426
2023-04-17 20:36:12,581 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@714e861f
2023-04-17 20:36:12,582 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3a2546d6
2023-04-17 20:36:12,583 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@733f1395
2023-04-17 20:36:12,585 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@733f1395
2023-04-17 20:36:12,585 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@2ee92e7d
2023-04-17 20:36:12,585 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2ee92e7d
2023-04-17 20:36:12,586 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@3751acd7
2023-04-17 20:36:12,586 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3751acd7
2023-04-17 20:36:12,586 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@24a04257
2023-04-17 20:36:12,586 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@24a04257
2023-04-17 20:36:12,587 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7b3cbe6e
2023-04-17 20:36:12,587 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7b3cbe6e
2023-04-17 20:36:12,589 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1ab53860
2023-04-17 20:36:12,589 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@6b25ef1c
2023-04-17 20:36:12,589 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@6b25ef1c
2023-04-17 20:36:12,590 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@6b25ef1c
2023-04-17 20:36:12,590 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@423f8a73
2023-04-17 20:36:12,590 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@423f8a73
2023-04-17 20:36:12,590 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@423f8a73
2023-04-17 20:36:12,590 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@5844a2d1
2023-04-17 20:36:12,592 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@3b28b7b0
2023-04-17 20:36:12,592 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@374c3975
2023-04-17 20:36:12,593 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@374c3975
2023-04-17 20:36:12,593 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@374c3975
2023-04-17 20:36:12,593 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60807fd9
2023-04-17 20:36:12,593 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60807fd9
2023-04-17 20:36:12,593 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60807fd9
2023-04-17 20:36:12,593 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@24691c5
2023-04-17 20:36:12,593 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@ddffa6c
2023-04-17 20:36:12,594 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@bd93bc3
2023-04-17 20:36:12,596 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@bd93bc3
2023-04-17 20:36:12,596 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7a814310
2023-04-17 20:36:12,597 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@6b16de91
2023-04-17 20:36:12,597 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6b16de91
2023-04-17 20:36:12,598 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@25533bba
2023-04-17 20:36:12,599 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@25533bba
2023-04-17 20:36:12,599 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@76d0ecd7
2023-04-17 20:36:12,604 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@35ac9ebd
2023-04-17 20:36:12,608 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@5e67a490
2023-04-17 20:36:12,610 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@69feb4d9
2023-04-17 20:36:12,611 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@69feb4d9
2023-04-17 20:36:12,611 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@30036a18
2023-04-17 20:36:12,611 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@537b3b2e
2023-04-17 20:36:12,611 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1544ded3
2023-04-17 20:36:12,611 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3ccb12d
2023-04-17 20:36:12,614 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@28b458e6
2023-04-17 20:36:12,614 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@221ca495
2023-04-17 20:36:12,614 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@119d4443
2023-04-17 20:36:12,614 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@773eca84
2023-04-17 20:36:12,991 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7da77305] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3cdfbbef]
2023-04-17 20:36:13,320 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 20:36:13,321 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 20:36:13,322 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7da77305] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1d1c63af]
2023-04-17 20:36:13,834 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1d1c63af] for TypeConfiguration
2023-04-17 20:36:14,179 DEBUG com.yuripe.normalizator.security.jwt.AuthTokenFilter [main] Filter 'authenticationJwtTokenFilter' configured for use
2023-04-17 20:36:15,130 INFO com.yuripe.normalizator.NormalypApplication [main] Started NormalypApplication in 4.476 seconds (JVM running for 5.376)
2023-04-17 20:36:23,334 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 20:36:23,339 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:36:23,345 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 20:36:23,354 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:36:23,354 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 20:36:23,354 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 20:36:23,356 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 20:36:23,356 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 20:36:23,374 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-4] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 20:36:23,386 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 20:36:23,387 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2023-04-17 20:36:23,397 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 20:36:23,398 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 20:36:23,399 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 20:36:23,399 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 20:36:23,525 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 20:36:23,526 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 20:36:23,528 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 20:36:23,529 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 20:36:23,530 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 20:36:23,530 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 20:36:23,531 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 20:36:23,531 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 20:36:23,531 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 20:37:06,023 INFO com.yuripe.normalizator.NormalypApplicationTests [main] Starting NormalypApplicationTests using Java 17.0.2 on YPNB with PID 19656 (started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 20:37:06,026 DEBUG com.yuripe.normalizator.NormalypApplicationTests [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 20:37:06,027 INFO com.yuripe.normalizator.NormalypApplicationTests [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 20:37:07,836 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@78d73b1b
2023-04-17 20:37:07,837 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@78d73b1b
2023-04-17 20:37:07,837 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78d73b1b
2023-04-17 20:37:07,838 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@44dfdd58
2023-04-17 20:37:07,839 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@c48b543
2023-04-17 20:37:07,840 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@5ea7bc4
2023-04-17 20:37:07,842 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@29bbc63c
2023-04-17 20:37:07,842 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@29bbc63c
2023-04-17 20:37:07,842 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29bbc63c
2023-04-17 20:37:07,844 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@2c48cede
2023-04-17 20:37:07,845 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@2c48cede
2023-04-17 20:37:07,846 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2c48cede
2023-04-17 20:37:07,847 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@6ad6443
2023-04-17 20:37:07,848 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@6ad6443
2023-04-17 20:37:07,848 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6ad6443
2023-04-17 20:37:07,849 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@175c5c3a
2023-04-17 20:37:07,850 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@175c5c3a
2023-04-17 20:37:07,850 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@175c5c3a
2023-04-17 20:37:07,852 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@70b48eb3
2023-04-17 20:37:07,852 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@70b48eb3
2023-04-17 20:37:07,853 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@70b48eb3
2023-04-17 20:37:07,854 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@194012a2
2023-04-17 20:37:07,854 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@194012a2
2023-04-17 20:37:07,855 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@194012a2
2023-04-17 20:37:07,856 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@64279ab
2023-04-17 20:37:07,856 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@64279ab
2023-04-17 20:37:07,856 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@64279ab
2023-04-17 20:37:07,858 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@48e41b5d
2023-04-17 20:37:07,858 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@48e41b5d
2023-04-17 20:37:07,859 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7f4a1cac
2023-04-17 20:37:07,859 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7f4a1cac
2023-04-17 20:37:07,860 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@2e952845
2023-04-17 20:37:07,861 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@2e952845
2023-04-17 20:37:07,861 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@57cabdc3
2023-04-17 20:37:07,862 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@13278a41
2023-04-17 20:37:07,863 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@5396eeb1
2023-04-17 20:37:07,863 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@5396eeb1
2023-04-17 20:37:07,864 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@584ca390
2023-04-17 20:37:07,864 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@584ca390
2023-04-17 20:37:07,865 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@2aea717c
2023-04-17 20:37:07,865 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2aea717c
2023-04-17 20:37:07,866 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5e3db14
2023-04-17 20:37:07,867 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5e3db14
2023-04-17 20:37:07,868 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7741ae1b
2023-04-17 20:37:07,868 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7741ae1b
2023-04-17 20:37:07,869 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4a22e4d7
2023-04-17 20:37:07,869 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4a22e4d7
2023-04-17 20:37:07,870 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37e7c4cc
2023-04-17 20:37:07,871 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37e7c4cc
2023-04-17 20:37:07,872 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6aea99e7
2023-04-17 20:37:07,873 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6aea99e7
2023-04-17 20:37:07,875 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1c84d80a
2023-04-17 20:37:07,876 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1c84d80a
2023-04-17 20:37:07,878 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@404ced67
2023-04-17 20:37:07,878 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@404ced67
2023-04-17 20:37:07,880 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@7364f68
2023-04-17 20:37:07,880 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7364f68
2023-04-17 20:37:07,882 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@76a362a4
2023-04-17 20:37:07,882 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76a362a4
2023-04-17 20:37:07,882 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76a362a4
2023-04-17 20:37:07,884 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2017f6e6
2023-04-17 20:37:07,885 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@70c29356
2023-04-17 20:37:07,885 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@70c29356
2023-04-17 20:37:07,885 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@70c29356
2023-04-17 20:37:07,886 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@27f71195
2023-04-17 20:37:07,887 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@226d5af0
2023-04-17 20:37:07,888 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@1de13f34
2023-04-17 20:37:07,888 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1de13f34
2023-04-17 20:37:07,889 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@788e3702
2023-04-17 20:37:07,889 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@788e3702
2023-04-17 20:37:07,890 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@245cb8df
2023-04-17 20:37:07,890 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@245cb8df
2023-04-17 20:37:07,891 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@79195c22
2023-04-17 20:37:07,891 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@79195c22
2023-04-17 20:37:07,892 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@11c581a0
2023-04-17 20:37:07,892 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@11c581a0
2023-04-17 20:37:07,892 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@34c62fdf
2023-04-17 20:37:07,894 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@3a6e9856
2023-04-17 20:37:07,894 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@3a6e9856
2023-04-17 20:37:07,894 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@3a6e9856
2023-04-17 20:37:07,895 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4c4c7d6c
2023-04-17 20:37:07,895 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4c4c7d6c
2023-04-17 20:37:07,896 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4c4c7d6c
2023-04-17 20:37:07,898 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@1ecf0ac6
2023-04-17 20:37:07,899 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@463045fb
2023-04-17 20:37:07,900 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@22a4ca4a
2023-04-17 20:37:07,900 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@22a4ca4a
2023-04-17 20:37:07,900 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@22a4ca4a
2023-04-17 20:37:07,901 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@9408857
2023-04-17 20:37:07,901 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@9408857
2023-04-17 20:37:07,901 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@9408857
2023-04-17 20:37:07,902 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@16e1219f
2023-04-17 20:37:07,903 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@7dbae40
2023-04-17 20:37:07,904 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@242ff747
2023-04-17 20:37:07,905 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@242ff747
2023-04-17 20:37:07,905 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2c7c0e36
2023-04-17 20:37:07,906 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@1c7f9861
2023-04-17 20:37:07,907 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1c7f9861
2023-04-17 20:37:07,908 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@6e3dd5ce
2023-04-17 20:37:07,908 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6e3dd5ce
2023-04-17 20:37:07,911 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@53016b11
2023-04-17 20:37:07,911 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6dd79214
2023-04-17 20:37:07,912 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@51f68849
2023-04-17 20:37:07,915 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@56a05324
2023-04-17 20:37:07,915 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@56a05324
2023-04-17 20:37:07,915 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@56cfe6be
2023-04-17 20:37:07,915 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7f0d8eff
2023-04-17 20:37:07,915 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@149aa7b2
2023-04-17 20:37:07,916 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3ca3648
2023-04-17 20:37:07,916 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2a99ca99
2023-04-17 20:37:07,916 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@39f0c343
2023-04-17 20:37:07,916 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@781654f8
2023-04-17 20:37:07,916 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2abc55c4
2023-04-17 20:37:08,450 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1cc9bd9b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2f471037]
2023-04-17 20:37:08,914 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 20:37:08,917 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 20:37:08,918 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1cc9bd9b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@199806aa]
2023-04-17 20:37:09,504 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@199806aa] for TypeConfiguration
2023-04-17 20:37:11,471 INFO com.yuripe.normalizator.NormalypApplicationTests [main] Started NormalypApplicationTests in 5.676 seconds (JVM running for 6.743)
2023-04-17 20:37:11,732 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [SpringApplicationShutdownHook] Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@199806aa] for TypeConfiguration
2023-04-17 20:37:11,732 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [SpringApplicationShutdownHook] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@40d5ae06] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@199806aa]
2023-04-17 20:37:28,308 INFO com.yuripe.normalizator.NormalypApplication [main] Starting NormalypApplication using Java 17.0.2 on YPNB with PID 9912 (C:\Users\yurip\git\normalyp\normalyp\target\classes started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 20:37:28,312 DEBUG com.yuripe.normalizator.NormalypApplication [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 20:37:28,312 INFO com.yuripe.normalizator.NormalypApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 20:37:29,930 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@23564dd2
2023-04-17 20:37:29,930 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@23564dd2
2023-04-17 20:37:29,931 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@23564dd2
2023-04-17 20:37:29,932 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@214b342f
2023-04-17 20:37:29,932 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@200d1a3d
2023-04-17 20:37:29,932 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@7f42b194
2023-04-17 20:37:29,934 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@4e8598d9
2023-04-17 20:37:29,934 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@4e8598d9
2023-04-17 20:37:29,934 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4e8598d9
2023-04-17 20:37:29,936 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@2094bf3d
2023-04-17 20:37:29,936 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@2094bf3d
2023-04-17 20:37:29,936 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2094bf3d
2023-04-17 20:37:29,945 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@714e861f
2023-04-17 20:37:29,945 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@714e861f
2023-04-17 20:37:29,945 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@714e861f
2023-04-17 20:37:29,946 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@3a2546d6
2023-04-17 20:37:29,947 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@3a2546d6
2023-04-17 20:37:29,947 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3a2546d6
2023-04-17 20:37:29,948 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@733f1395
2023-04-17 20:37:29,948 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@733f1395
2023-04-17 20:37:29,948 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@733f1395
2023-04-17 20:37:29,948 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@2ee92e7d
2023-04-17 20:37:29,949 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@2ee92e7d
2023-04-17 20:37:29,949 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ee92e7d
2023-04-17 20:37:29,949 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@3751acd7
2023-04-17 20:37:29,949 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@3751acd7
2023-04-17 20:37:29,950 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3751acd7
2023-04-17 20:37:29,950 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@24a04257
2023-04-17 20:37:29,950 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@24a04257
2023-04-17 20:37:29,951 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7b3cbe6e
2023-04-17 20:37:29,951 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7b3cbe6e
2023-04-17 20:37:29,952 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@72b2c5ed
2023-04-17 20:37:29,953 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@72b2c5ed
2023-04-17 20:37:29,954 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1600a8a2
2023-04-17 20:37:29,954 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7b95bdb0
2023-04-17 20:37:29,955 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@b5d9f1e
2023-04-17 20:37:29,955 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@b5d9f1e
2023-04-17 20:37:29,956 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@4607d78b
2023-04-17 20:37:29,956 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4607d78b
2023-04-17 20:37:29,957 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@60b1ff3b
2023-04-17 20:37:29,958 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@60b1ff3b
2023-04-17 20:37:29,959 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@35c8be21
2023-04-17 20:37:29,959 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@35c8be21
2023-04-17 20:37:29,960 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6537ac
2023-04-17 20:37:29,960 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6537ac
2023-04-17 20:37:29,961 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@46cf8c07
2023-04-17 20:37:29,961 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@46cf8c07
2023-04-17 20:37:29,962 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b01cb8d
2023-04-17 20:37:29,962 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b01cb8d
2023-04-17 20:37:29,963 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@179ee36b
2023-04-17 20:37:29,963 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@179ee36b
2023-04-17 20:37:29,965 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@25533bba
2023-04-17 20:37:29,965 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@25533bba
2023-04-17 20:37:29,968 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@5dcf0772
2023-04-17 20:37:29,968 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@5dcf0772
2023-04-17 20:37:29,969 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@2dac2e1b
2023-04-17 20:37:29,970 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2dac2e1b
2023-04-17 20:37:29,972 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10131289
2023-04-17 20:37:29,973 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10131289
2023-04-17 20:37:29,974 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10131289
2023-04-17 20:37:29,979 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@19eea77c
2023-04-17 20:37:29,982 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@37c1cfa
2023-04-17 20:37:29,982 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@37c1cfa
2023-04-17 20:37:29,982 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@37c1cfa
2023-04-17 20:37:29,984 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1544ded3
2023-04-17 20:37:29,985 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3a38e4dc
2023-04-17 20:37:29,986 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@448cdb47
2023-04-17 20:37:29,986 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@448cdb47
2023-04-17 20:37:29,987 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@161d95c6
2023-04-17 20:37:29,987 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@161d95c6
2023-04-17 20:37:29,988 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@539fc5d1
2023-04-17 20:37:29,988 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@539fc5d1
2023-04-17 20:37:29,989 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@55222ee9
2023-04-17 20:37:29,990 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@55222ee9
2023-04-17 20:37:29,991 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@71369e1a
2023-04-17 20:37:29,993 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@71369e1a
2023-04-17 20:37:29,994 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@987a0bb
2023-04-17 20:37:29,995 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@3a209918
2023-04-17 20:37:29,996 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@3a209918
2023-04-17 20:37:29,996 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@3a209918
2023-04-17 20:37:29,997 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@587f4f63
2023-04-17 20:37:29,997 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@587f4f63
2023-04-17 20:37:29,997 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@587f4f63
2023-04-17 20:37:29,999 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@28e7bb31
2023-04-17 20:37:29,999 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@661e279d
2023-04-17 20:37:30,000 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@32e5af53
2023-04-17 20:37:30,001 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@32e5af53
2023-04-17 20:37:30,001 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@32e5af53
2023-04-17 20:37:30,002 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@27bcb4ad
2023-04-17 20:37:30,002 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@27bcb4ad
2023-04-17 20:37:30,002 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@27bcb4ad
2023-04-17 20:37:30,003 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@26874f2c
2023-04-17 20:37:30,003 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@2fbd390
2023-04-17 20:37:30,005 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@7f51f588
2023-04-17 20:37:30,005 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7f51f588
2023-04-17 20:37:30,006 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@19ae36f4
2023-04-17 20:37:30,008 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@53cddaf8
2023-04-17 20:37:30,008 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@53cddaf8
2023-04-17 20:37:30,011 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@edb83f8
2023-04-17 20:37:30,011 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@edb83f8
2023-04-17 20:37:30,011 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@48dff674
2023-04-17 20:37:30,012 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4a9b3956
2023-04-17 20:37:30,014 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@bb8ead8
2023-04-17 20:37:30,017 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@6060146b
2023-04-17 20:37:30,017 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6060146b
2023-04-17 20:37:30,017 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7a55fb81
2023-04-17 20:37:30,018 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5a3cf878
2023-04-17 20:37:30,018 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1d2d8846
2023-04-17 20:37:30,019 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@34cd65ac
2023-04-17 20:37:30,019 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@61911947
2023-04-17 20:37:30,019 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5c53c235
2023-04-17 20:37:30,019 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2dcd0e41
2023-04-17 20:37:30,020 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7272ee51
2023-04-17 20:37:30,394 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1a43a88e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@51f34185]
2023-04-17 20:37:30,774 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 20:37:30,775 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 20:37:30,776 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1a43a88e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@50b38342]
2023-04-17 20:37:31,317 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@50b38342] for TypeConfiguration
2023-04-17 20:37:31,700 DEBUG com.yuripe.normalizator.security.jwt.AuthTokenFilter [main] Filter 'authenticationJwtTokenFilter' configured for use
2023-04-17 20:37:32,626 INFO com.yuripe.normalizator.NormalypApplication [main] Started NormalypApplication in 4.655 seconds (JVM running for 5.591)
2023-04-17 20:37:37,831 DEBUG org.hibernate.SQL [http-nio-8080-exec-5] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 20:37:37,835 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:37:37,841 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 20:37:37,848 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:37:37,849 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 20:37:37,850 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 20:37:37,850 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 20:37:37,850 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 20:37:37,868 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-5] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 20:37:37,881 DEBUG org.hibernate.SQL [http-nio-8080-exec-5] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 20:37:37,882 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2023-04-17 20:37:37,892 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 20:37:37,893 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 20:37:37,894 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 20:37:37,894 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 20:37:38,015 DEBUG org.hibernate.SQL [http-nio-8080-exec-5] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 20:37:38,016 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 20:37:38,018 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 20:37:38,018 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 20:37:38,018 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 20:37:38,019 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 20:37:38,019 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 20:37:38,019 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 20:37:38,020 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 20:38:02,200 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-5] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.io.FileNotFoundException: src\main\resources\BATCH_IN_FILES\ciaoa.txt (The system cannot find the path specified)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at com.yuripe.core.library.services.FTPService.downloadFile(FTPService.java:76)
	at com.yuripe.normalizator.configurations.FTPServiceCustom.getFileFromSFTP(FTPServiceCustom.java:27)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:113)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$af619c76.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 20:38:48,669 INFO com.yuripe.normalizator.NormalypApplication [main] Starting NormalypApplication using Java 17.0.2 on YPNB with PID 13740 (C:\Users\yurip\git\normalyp\normalyp\target\classes started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 20:38:48,674 DEBUG com.yuripe.normalizator.NormalypApplication [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 20:38:48,675 INFO com.yuripe.normalizator.NormalypApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 20:38:50,298 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@3af236d0
2023-04-17 20:38:50,299 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@3af236d0
2023-04-17 20:38:50,299 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3af236d0
2023-04-17 20:38:50,300 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@935d3f9
2023-04-17 20:38:50,301 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@589fb74d
2023-04-17 20:38:50,303 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@37d699a1
2023-04-17 20:38:50,303 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@54489296
2023-04-17 20:38:50,304 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@54489296
2023-04-17 20:38:50,304 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@54489296
2023-04-17 20:38:50,304 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@712cd5d3
2023-04-17 20:38:50,305 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@712cd5d3
2023-04-17 20:38:50,305 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@712cd5d3
2023-04-17 20:38:50,305 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@6c8f4bc7
2023-04-17 20:38:50,306 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@6c8f4bc7
2023-04-17 20:38:50,306 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6c8f4bc7
2023-04-17 20:38:50,307 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@2fdf22f7
2023-04-17 20:38:50,307 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@2fdf22f7
2023-04-17 20:38:50,307 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2fdf22f7
2023-04-17 20:38:50,309 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@2edb2f8b
2023-04-17 20:38:50,309 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@2edb2f8b
2023-04-17 20:38:50,309 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@2edb2f8b
2023-04-17 20:38:50,309 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@3e38c472
2023-04-17 20:38:50,310 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@3e38c472
2023-04-17 20:38:50,310 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3e38c472
2023-04-17 20:38:50,310 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@66020d69
2023-04-17 20:38:50,311 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@66020d69
2023-04-17 20:38:50,311 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@66020d69
2023-04-17 20:38:50,311 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@55421b8d
2023-04-17 20:38:50,311 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@55421b8d
2023-04-17 20:38:50,312 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@13e00016
2023-04-17 20:38:50,312 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@13e00016
2023-04-17 20:38:50,313 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@57b9389f
2023-04-17 20:38:50,313 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@57b9389f
2023-04-17 20:38:50,313 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@727986ad
2023-04-17 20:38:50,314 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@68c34db2
2023-04-17 20:38:50,315 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@113dcaf8
2023-04-17 20:38:50,315 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@113dcaf8
2023-04-17 20:38:50,316 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@4af7dd6a
2023-04-17 20:38:50,316 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4af7dd6a
2023-04-17 20:38:50,317 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@5618fc1f
2023-04-17 20:38:50,317 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5618fc1f
2023-04-17 20:38:50,317 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@34d9df9f
2023-04-17 20:38:50,317 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@34d9df9f
2023-04-17 20:38:50,318 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7b91d9f
2023-04-17 20:38:50,318 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7b91d9f
2023-04-17 20:38:50,319 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2e3f324e
2023-04-17 20:38:50,319 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2e3f324e
2023-04-17 20:38:50,319 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2a136383
2023-04-17 20:38:50,320 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2a136383
2023-04-17 20:38:50,321 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@25567581
2023-04-17 20:38:50,321 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@25567581
2023-04-17 20:38:50,322 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3b6c2be6
2023-04-17 20:38:50,322 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3b6c2be6
2023-04-17 20:38:50,323 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@421ead7e
2023-04-17 20:38:50,323 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@421ead7e
2023-04-17 20:38:50,324 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@5e67a490
2023-04-17 20:38:50,324 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e67a490
2023-04-17 20:38:50,325 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@50f4b83d
2023-04-17 20:38:50,326 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50f4b83d
2023-04-17 20:38:50,326 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50f4b83d
2023-04-17 20:38:50,327 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@11e17893
2023-04-17 20:38:50,328 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@69feb4d9
2023-04-17 20:38:50,328 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@69feb4d9
2023-04-17 20:38:50,328 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@69feb4d9
2023-04-17 20:38:50,329 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@537b3b2e
2023-04-17 20:38:50,329 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7d47dfed
2023-04-17 20:38:50,330 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@237b2852
2023-04-17 20:38:50,330 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@237b2852
2023-04-17 20:38:50,331 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@550c973e
2023-04-17 20:38:50,331 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@550c973e
2023-04-17 20:38:50,332 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@7e94e331
2023-04-17 20:38:50,333 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7e94e331
2023-04-17 20:38:50,333 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@7b8aebd0
2023-04-17 20:38:50,334 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7b8aebd0
2023-04-17 20:38:50,334 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@71567f33
2023-04-17 20:38:50,334 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@71567f33
2023-04-17 20:38:50,341 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4c04216f
2023-04-17 20:38:50,342 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@47a3d56a
2023-04-17 20:38:50,343 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@47a3d56a
2023-04-17 20:38:50,343 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@47a3d56a
2023-04-17 20:38:50,344 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6d31f106
2023-04-17 20:38:50,344 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6d31f106
2023-04-17 20:38:50,344 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6d31f106
2023-04-17 20:38:50,345 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@7f426ddd
2023-04-17 20:38:50,345 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@733534f9
2023-04-17 20:38:50,346 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@61853c7e
2023-04-17 20:38:50,346 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@61853c7e
2023-04-17 20:38:50,346 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@61853c7e
2023-04-17 20:38:50,347 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@59d5a6fd
2023-04-17 20:38:50,347 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@59d5a6fd
2023-04-17 20:38:50,347 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@59d5a6fd
2023-04-17 20:38:50,347 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@64dc86c6
2023-04-17 20:38:50,348 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@1e191150
2023-04-17 20:38:50,349 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@2424cb9d
2023-04-17 20:38:50,349 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2424cb9d
2023-04-17 20:38:50,349 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@69a373fd
2023-04-17 20:38:50,350 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@36ad5f2a
2023-04-17 20:38:50,350 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@36ad5f2a
2023-04-17 20:38:50,352 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@722787b5
2023-04-17 20:38:50,352 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@722787b5
2023-04-17 20:38:50,352 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1a497286
2023-04-17 20:38:50,353 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d401cdc
2023-04-17 20:38:50,354 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@389a5022
2023-04-17 20:38:50,356 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@713999c2
2023-04-17 20:38:50,356 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@713999c2
2023-04-17 20:38:50,356 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1af677f8
2023-04-17 20:38:50,357 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7a55fb81
2023-04-17 20:38:50,357 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5a3cf878
2023-04-17 20:38:50,357 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1d2d8846
2023-04-17 20:38:50,357 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@34cd65ac
2023-04-17 20:38:50,358 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@61911947
2023-04-17 20:38:50,358 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5c53c235
2023-04-17 20:38:50,358 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2dcd0e41
2023-04-17 20:38:50,711 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@709d6de5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1a43a88e]
2023-04-17 20:38:51,057 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 20:38:51,059 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 20:38:51,060 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@709d6de5] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@146833a2]
2023-04-17 20:38:51,584 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@146833a2] for TypeConfiguration
2023-04-17 20:38:51,950 DEBUG com.yuripe.normalizator.security.jwt.AuthTokenFilter [main] Filter 'authenticationJwtTokenFilter' configured for use
2023-04-17 20:38:52,870 INFO com.yuripe.normalizator.NormalypApplication [main] Started NormalypApplication in 4.561 seconds (JVM running for 5.643)
2023-04-17 20:38:57,712 DEBUG org.hibernate.SQL [http-nio-8080-exec-3] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 20:38:57,716 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:38:57,721 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 20:38:57,727 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:38:57,728 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 20:38:57,728 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 20:38:57,729 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 20:38:57,729 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 20:38:57,741 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-3] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 20:38:57,749 DEBUG org.hibernate.SQL [http-nio-8080-exec-3] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 20:38:57,750 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [BIGINT] - [1]
2023-04-17 20:38:57,758 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 20:38:57,758 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 20:38:57,759 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 20:38:57,759 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 20:38:57,817 DEBUG org.hibernate.SQL [http-nio-8080-exec-3] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 20:38:57,818 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 20:38:57,820 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 20:38:57,821 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 20:38:57,821 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 20:38:57,821 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 20:38:57,822 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 20:38:57,822 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 20:38:57,822 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 20:39:17,861 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-3] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException: Cannot invoke "java.net.Socket.getInetAddress()" because "this._socket_" is null] with root cause
java.lang.NullPointerException: Cannot invoke "java.net.Socket.getInetAddress()" because "this._socket_" is null
	at org.apache.commons.net.SocketClient.getRemoteAddress(SocketClient.java:671)
	at org.apache.commons.net.ftp.FTPClient._openDataConnection_(FTPClient.java:815)
	at org.apache.commons.net.ftp.FTPClient._retrieveFile(FTPClient.java:1899)
	at org.apache.commons.net.ftp.FTPClient.retrieveFile(FTPClient.java:1885)
	at com.yuripe.core.library.services.FTPService.downloadFile(FTPService.java:77)
	at com.yuripe.normalizator.configurations.FTPServiceCustom.getFileFromSFTP(FTPServiceCustom.java:27)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:113)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$ef02d011.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 20:44:08,522 INFO com.yuripe.normalizator.NormalypApplicationTests [main] Starting NormalypApplicationTests using Java 17.0.2 on YPNB with PID 2396 (started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 20:44:08,525 DEBUG com.yuripe.normalizator.NormalypApplicationTests [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 20:44:08,526 INFO com.yuripe.normalizator.NormalypApplicationTests [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 20:44:10,328 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@28b523a
2023-04-17 20:44:10,329 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@28b523a
2023-04-17 20:44:10,329 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@28b523a
2023-04-17 20:44:10,331 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@78d73b1b
2023-04-17 20:44:10,331 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@29d070c7
2023-04-17 20:44:10,332 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@72a8361b
2023-04-17 20:44:10,333 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@696fad31
2023-04-17 20:44:10,333 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@696fad31
2023-04-17 20:44:10,334 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@696fad31
2023-04-17 20:44:10,334 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@272778ae
2023-04-17 20:44:10,335 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@272778ae
2023-04-17 20:44:10,335 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@272778ae
2023-04-17 20:44:10,336 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@39c87b42
2023-04-17 20:44:10,336 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@39c87b42
2023-04-17 20:44:10,336 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@39c87b42
2023-04-17 20:44:10,337 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@78b03788
2023-04-17 20:44:10,338 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@78b03788
2023-04-17 20:44:10,338 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@78b03788
2023-04-17 20:44:10,339 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@69a5c6be
2023-04-17 20:44:10,339 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@69a5c6be
2023-04-17 20:44:10,340 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@69a5c6be
2023-04-17 20:44:10,341 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@7b8ea1db
2023-04-17 20:44:10,341 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@7b8ea1db
2023-04-17 20:44:10,341 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b8ea1db
2023-04-17 20:44:10,342 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@55296b50
2023-04-17 20:44:10,343 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@55296b50
2023-04-17 20:44:10,343 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@55296b50
2023-04-17 20:44:10,344 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@794240e2
2023-04-17 20:44:10,344 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@794240e2
2023-04-17 20:44:10,345 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@51e8d066
2023-04-17 20:44:10,345 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@51e8d066
2023-04-17 20:44:10,346 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@4a1a412e
2023-04-17 20:44:10,347 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@4a1a412e
2023-04-17 20:44:10,347 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@68dfda77
2023-04-17 20:44:10,347 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6fbf5db2
2023-04-17 20:44:10,348 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@4a31ed12
2023-04-17 20:44:10,348 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@4a31ed12
2023-04-17 20:44:10,349 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@279126f5
2023-04-17 20:44:10,349 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@279126f5
2023-04-17 20:44:10,350 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@33324c05
2023-04-17 20:44:10,350 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@33324c05
2023-04-17 20:44:10,351 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5ca4dce5
2023-04-17 20:44:10,352 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5ca4dce5
2023-04-17 20:44:10,352 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5fb54740
2023-04-17 20:44:10,353 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5fb54740
2023-04-17 20:44:10,354 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@50e5032c
2023-04-17 20:44:10,354 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@50e5032c
2023-04-17 20:44:10,355 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d8835af
2023-04-17 20:44:10,355 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d8835af
2023-04-17 20:44:10,356 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3a40bb52
2023-04-17 20:44:10,356 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3a40bb52
2023-04-17 20:44:10,357 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@78c74647
2023-04-17 20:44:10,357 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@78c74647
2023-04-17 20:44:10,358 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@559991f5
2023-04-17 20:44:10,359 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@559991f5
2023-04-17 20:44:10,359 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@20256a0b
2023-04-17 20:44:10,360 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@20256a0b
2023-04-17 20:44:10,361 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@7ea42c82
2023-04-17 20:44:10,361 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7ea42c82
2023-04-17 20:44:10,361 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7ea42c82
2023-04-17 20:44:10,364 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@106c988
2023-04-17 20:44:10,365 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@79ca7bea
2023-04-17 20:44:10,365 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@79ca7bea
2023-04-17 20:44:10,366 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@79ca7bea
2023-04-17 20:44:10,367 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@755a7218
2023-04-17 20:44:10,368 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@340afaf8
2023-04-17 20:44:10,369 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@527937d0
2023-04-17 20:44:10,369 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@527937d0
2023-04-17 20:44:10,370 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@7e191fda
2023-04-17 20:44:10,370 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7e191fda
2023-04-17 20:44:10,371 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@d25e878
2023-04-17 20:44:10,371 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@d25e878
2023-04-17 20:44:10,372 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@26b3c9a2
2023-04-17 20:44:10,372 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@26b3c9a2
2023-04-17 20:44:10,373 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@c9b5a99
2023-04-17 20:44:10,373 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@c9b5a99
2023-04-17 20:44:10,374 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f3c7808
2023-04-17 20:44:10,374 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@1eb85a47
2023-04-17 20:44:10,375 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1eb85a47
2023-04-17 20:44:10,375 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@1eb85a47
2023-04-17 20:44:10,376 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4863c8ac
2023-04-17 20:44:10,376 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4863c8ac
2023-04-17 20:44:10,376 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4863c8ac
2023-04-17 20:44:10,377 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@7f0766ef
2023-04-17 20:44:10,378 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@447521e
2023-04-17 20:44:10,379 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@27ab206
2023-04-17 20:44:10,379 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@27ab206
2023-04-17 20:44:10,379 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@27ab206
2023-04-17 20:44:10,380 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@72c4a3aa
2023-04-17 20:44:10,380 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@72c4a3aa
2023-04-17 20:44:10,381 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@72c4a3aa
2023-04-17 20:44:10,381 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@646d810b
2023-04-17 20:44:10,382 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@2f09e6b2
2023-04-17 20:44:10,384 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@b06d46d
2023-04-17 20:44:10,384 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@b06d46d
2023-04-17 20:44:10,384 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4409cae6
2023-04-17 20:44:10,385 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@2ab09943
2023-04-17 20:44:10,386 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2ab09943
2023-04-17 20:44:10,387 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@1b7554d4
2023-04-17 20:44:10,387 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1b7554d4
2023-04-17 20:44:10,387 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1fe8f5e8
2023-04-17 20:44:10,388 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4ee8051c
2023-04-17 20:44:10,389 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@47058864
2023-04-17 20:44:10,393 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@34009349
2023-04-17 20:44:10,393 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@34009349
2023-04-17 20:44:10,394 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7f2b584b
2023-04-17 20:44:10,394 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5866731
2023-04-17 20:44:10,394 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@56a05324
2023-04-17 20:44:10,394 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@11e71181
2023-04-17 20:44:10,394 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@342beaf6
2023-04-17 20:44:10,394 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@222acad
2023-04-17 20:44:10,395 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@56cfe6be
2023-04-17 20:44:10,395 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7f0d8eff
2023-04-17 20:44:10,943 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@55071497] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@10d98940]
2023-04-17 20:44:11,379 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 20:44:11,381 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 20:44:11,381 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@55071497] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7538cfe6]
2023-04-17 20:44:11,937 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7538cfe6] for TypeConfiguration
2023-04-17 20:44:13,967 INFO com.yuripe.normalizator.NormalypApplicationTests [main] Started NormalypApplicationTests in 5.705 seconds (JVM running for 6.814)
2023-04-17 20:44:14,224 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [SpringApplicationShutdownHook] Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7538cfe6] for TypeConfiguration
2023-04-17 20:44:14,224 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [SpringApplicationShutdownHook] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5e4d8f72] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7538cfe6]
2023-04-17 20:44:19,721 INFO com.yuripe.normalizator.NormalypApplication [main] Starting NormalypApplication using Java 17.0.2 on YPNB with PID 11400 (C:\Users\yurip\git\normalyp\normalyp\target\classes started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 20:44:19,729 DEBUG com.yuripe.normalizator.NormalypApplication [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 20:44:19,729 INFO com.yuripe.normalizator.NormalypApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 20:44:21,329 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@5db0003d
2023-04-17 20:44:21,330 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@5db0003d
2023-04-17 20:44:21,330 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5db0003d
2023-04-17 20:44:21,330 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@37d699a1
2023-04-17 20:44:21,331 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@2a8f8555
2023-04-17 20:44:21,332 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@54489296
2023-04-17 20:44:21,333 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@2094bf3d
2023-04-17 20:44:21,334 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@2094bf3d
2023-04-17 20:44:21,334 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2094bf3d
2023-04-17 20:44:21,335 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@714e861f
2023-04-17 20:44:21,335 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@714e861f
2023-04-17 20:44:21,336 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@714e861f
2023-04-17 20:44:21,337 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@3a2546d6
2023-04-17 20:44:21,337 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@3a2546d6
2023-04-17 20:44:21,338 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3a2546d6
2023-04-17 20:44:21,338 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@733f1395
2023-04-17 20:44:21,339 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@733f1395
2023-04-17 20:44:21,339 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@733f1395
2023-04-17 20:44:21,339 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@2ee92e7d
2023-04-17 20:44:21,340 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@2ee92e7d
2023-04-17 20:44:21,340 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ee92e7d
2023-04-17 20:44:21,340 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@3751acd7
2023-04-17 20:44:21,341 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@3751acd7
2023-04-17 20:44:21,341 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3751acd7
2023-04-17 20:44:21,342 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@24a04257
2023-04-17 20:44:21,342 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@24a04257
2023-04-17 20:44:21,342 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@24a04257
2023-04-17 20:44:21,343 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7b3cbe6e
2023-04-17 20:44:21,343 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7b3cbe6e
2023-04-17 20:44:21,344 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@72b2c5ed
2023-04-17 20:44:21,344 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@72b2c5ed
2023-04-17 20:44:21,344 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@68c34db2
2023-04-17 20:44:21,344 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@68c34db2
2023-04-17 20:44:21,345 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1491cd6c
2023-04-17 20:44:21,345 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@b5d9f1e
2023-04-17 20:44:21,346 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@4607d78b
2023-04-17 20:44:21,346 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@4607d78b
2023-04-17 20:44:21,347 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@60b1ff3b
2023-04-17 20:44:21,347 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@60b1ff3b
2023-04-17 20:44:21,348 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@35c8be21
2023-04-17 20:44:21,348 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@35c8be21
2023-04-17 20:44:21,349 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6537ac
2023-04-17 20:44:21,349 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6537ac
2023-04-17 20:44:21,349 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@46cf8c07
2023-04-17 20:44:21,350 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@46cf8c07
2023-04-17 20:44:21,350 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@b01cb8d
2023-04-17 20:44:21,350 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@b01cb8d
2023-04-17 20:44:21,351 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@179ee36b
2023-04-17 20:44:21,352 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@179ee36b
2023-04-17 20:44:21,360 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@197ce367
2023-04-17 20:44:21,360 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@197ce367
2023-04-17 20:44:21,362 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@446b64b3
2023-04-17 20:44:21,362 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@446b64b3
2023-04-17 20:44:21,363 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@5e67a490
2023-04-17 20:44:21,363 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@5e67a490
2023-04-17 20:44:21,364 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@50f4b83d
2023-04-17 20:44:21,364 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@50f4b83d
2023-04-17 20:44:21,365 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10fb4575
2023-04-17 20:44:21,365 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10fb4575
2023-04-17 20:44:21,365 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10fb4575
2023-04-17 20:44:21,367 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@69feb4d9
2023-04-17 20:44:21,367 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@28b458e6
2023-04-17 20:44:21,367 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@28b458e6
2023-04-17 20:44:21,367 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@28b458e6
2023-04-17 20:44:21,368 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3a38e4dc
2023-04-17 20:44:21,368 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@448cdb47
2023-04-17 20:44:21,369 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@161d95c6
2023-04-17 20:44:21,369 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@161d95c6
2023-04-17 20:44:21,370 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@539fc5d1
2023-04-17 20:44:21,370 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@539fc5d1
2023-04-17 20:44:21,371 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@55222ee9
2023-04-17 20:44:21,371 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@55222ee9
2023-04-17 20:44:21,372 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@71369e1a
2023-04-17 20:44:21,372 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71369e1a
2023-04-17 20:44:21,373 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3719360c
2023-04-17 20:44:21,373 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3719360c
2023-04-17 20:44:21,373 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@47a3d56a
2023-04-17 20:44:21,374 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@587f4f63
2023-04-17 20:44:21,374 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@587f4f63
2023-04-17 20:44:21,374 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@587f4f63
2023-04-17 20:44:21,375 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@28e7bb31
2023-04-17 20:44:21,375 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@28e7bb31
2023-04-17 20:44:21,375 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@28e7bb31
2023-04-17 20:44:21,377 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@621624b1
2023-04-17 20:44:21,378 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@32e5af53
2023-04-17 20:44:21,378 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@27bcb4ad
2023-04-17 20:44:21,378 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@27bcb4ad
2023-04-17 20:44:21,379 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@27bcb4ad
2023-04-17 20:44:21,379 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e191150
2023-04-17 20:44:21,379 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e191150
2023-04-17 20:44:21,380 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e191150
2023-04-17 20:44:21,380 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@5323999f
2023-04-17 20:44:21,380 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@45eab322
2023-04-17 20:44:21,381 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@372954e1
2023-04-17 20:44:21,382 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@372954e1
2023-04-17 20:44:21,382 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1002d192
2023-04-17 20:44:21,383 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@1e721583
2023-04-17 20:44:21,384 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1e721583
2023-04-17 20:44:21,384 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@7d401cdc
2023-04-17 20:44:21,384 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7d401cdc
2023-04-17 20:44:21,385 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77fc19cf
2023-04-17 20:44:21,385 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3c16528d
2023-04-17 20:44:21,386 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@677cb96e
2023-04-17 20:44:21,388 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@34cd65ac
2023-04-17 20:44:21,389 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@34cd65ac
2023-04-17 20:44:21,389 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7272ee51
2023-04-17 20:44:21,389 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1b409a79
2023-04-17 20:44:21,389 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5940b14e
2023-04-17 20:44:21,390 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1cba0321
2023-04-17 20:44:21,390 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@795f6681
2023-04-17 20:44:21,390 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@66d3b881
2023-04-17 20:44:21,390 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3a45afd4
2023-04-17 20:44:21,390 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@762a10b6
2023-04-17 20:44:21,744 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1a4930cf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3fd33f48]
2023-04-17 20:44:22,097 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 20:44:22,100 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 20:44:22,100 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1a4930cf] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@183ef89a]
2023-04-17 20:44:22,613 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@183ef89a] for TypeConfiguration
2023-04-17 20:44:22,966 DEBUG com.yuripe.normalizator.security.jwt.AuthTokenFilter [main] Filter 'authenticationJwtTokenFilter' configured for use
2023-04-17 20:44:23,791 INFO com.yuripe.normalizator.NormalypApplication [main] Started NormalypApplication in 4.431 seconds (JVM running for 5.358)
2023-04-17 20:44:26,844 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 20:44:26,846 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:44:26,849 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 20:44:26,853 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:44:26,853 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 20:44:26,855 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 20:44:26,855 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 20:44:26,855 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 20:44:26,863 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-4] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 20:44:26,869 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 20:44:26,869 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2023-04-17 20:44:26,874 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 20:44:26,875 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 20:44:26,875 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 20:44:26,875 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 20:44:26,945 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 20:44:26,946 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 20:44:26,947 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 20:44:26,948 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 20:44:26,948 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 20:44:26,949 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 20:44:26,949 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 20:44:26,949 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 20:44:26,950 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 20:46:24,249 INFO com.yuripe.normalizator.NormalypApplication [main] Starting NormalypApplication using Java 17.0.2 on YPNB with PID 11912 (C:\Users\yurip\git\normalyp\normalyp\target\classes started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 20:46:24,253 DEBUG com.yuripe.normalizator.NormalypApplication [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 20:46:24,253 INFO com.yuripe.normalizator.NormalypApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 20:46:25,740 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@6f96dd64
2023-04-17 20:46:25,741 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@6f96dd64
2023-04-17 20:46:25,741 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6f96dd64
2023-04-17 20:46:25,742 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@f559c74
2023-04-17 20:46:25,743 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@4466cf5d
2023-04-17 20:46:25,744 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@2b7facc7
2023-04-17 20:46:25,745 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@59328218
2023-04-17 20:46:25,745 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@59328218
2023-04-17 20:46:25,745 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@59328218
2023-04-17 20:46:25,746 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@52621501
2023-04-17 20:46:25,746 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@52621501
2023-04-17 20:46:25,746 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@52621501
2023-04-17 20:46:25,747 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@48567727
2023-04-17 20:46:25,747 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@48567727
2023-04-17 20:46:25,748 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@48567727
2023-04-17 20:46:25,748 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@716f94c1
2023-04-17 20:46:25,749 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@716f94c1
2023-04-17 20:46:25,749 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@716f94c1
2023-04-17 20:46:25,750 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@7c0df4ab
2023-04-17 20:46:25,750 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@7c0df4ab
2023-04-17 20:46:25,750 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@7c0df4ab
2023-04-17 20:46:25,751 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@6c8efde4
2023-04-17 20:46:25,751 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@6c8efde4
2023-04-17 20:46:25,751 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6c8efde4
2023-04-17 20:46:25,752 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@4ae8fb2a
2023-04-17 20:46:25,752 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@4ae8fb2a
2023-04-17 20:46:25,752 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4ae8fb2a
2023-04-17 20:46:25,753 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1a2773a8
2023-04-17 20:46:25,753 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1a2773a8
2023-04-17 20:46:25,754 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1cde374
2023-04-17 20:46:25,754 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1cde374
2023-04-17 20:46:25,755 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@2e4eda17
2023-04-17 20:46:25,755 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@2e4eda17
2023-04-17 20:46:25,755 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@799f354a
2023-04-17 20:46:25,756 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7af1d072
2023-04-17 20:46:25,756 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@59b492ec
2023-04-17 20:46:25,756 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@59b492ec
2023-04-17 20:46:25,757 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@1894fa9f
2023-04-17 20:46:25,757 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1894fa9f
2023-04-17 20:46:25,758 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@33d230ce
2023-04-17 20:46:25,758 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@33d230ce
2023-04-17 20:46:25,759 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@62e73ab6
2023-04-17 20:46:25,759 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@62e73ab6
2023-04-17 20:46:25,760 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@681de87f
2023-04-17 20:46:25,760 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@681de87f
2023-04-17 20:46:25,761 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4e974b9e
2023-04-17 20:46:25,761 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4e974b9e
2023-04-17 20:46:25,761 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@250967f1
2023-04-17 20:46:25,761 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@250967f1
2023-04-17 20:46:25,762 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@274fdea6
2023-04-17 20:46:25,763 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@274fdea6
2023-04-17 20:46:25,764 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@307af381
2023-04-17 20:46:25,764 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@307af381
2023-04-17 20:46:25,765 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@2dd0a0d0
2023-04-17 20:46:25,765 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@2dd0a0d0
2023-04-17 20:46:25,766 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@200d1a3d
2023-04-17 20:46:25,766 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@200d1a3d
2023-04-17 20:46:25,767 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@402b4f81
2023-04-17 20:46:25,767 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@402b4f81
2023-04-17 20:46:25,767 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@402b4f81
2023-04-17 20:46:25,768 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e8598d9
2023-04-17 20:46:25,769 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1b17d8ab
2023-04-17 20:46:25,769 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1b17d8ab
2023-04-17 20:46:25,769 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1b17d8ab
2023-04-17 20:46:25,770 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6c8f4bc7
2023-04-17 20:46:25,770 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@2fdf22f7
2023-04-17 20:46:25,771 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@2edb2f8b
2023-04-17 20:46:25,771 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2edb2f8b
2023-04-17 20:46:25,773 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@3e38c472
2023-04-17 20:46:25,773 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3e38c472
2023-04-17 20:46:25,774 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@66020d69
2023-04-17 20:46:25,774 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@66020d69
2023-04-17 20:46:25,775 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@55421b8d
2023-04-17 20:46:25,775 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@55421b8d
2023-04-17 20:46:25,776 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@13e00016
2023-04-17 20:46:25,776 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@13e00016
2023-04-17 20:46:25,776 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4e4395c
2023-04-17 20:46:25,778 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@1600a8a2
2023-04-17 20:46:25,778 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1600a8a2
2023-04-17 20:46:25,779 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@1600a8a2
2023-04-17 20:46:25,779 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1491cd6c
2023-04-17 20:46:25,779 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1491cd6c
2023-04-17 20:46:25,780 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1491cd6c
2023-04-17 20:46:25,781 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@3f866f50
2023-04-17 20:46:25,781 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@4607d78b
2023-04-17 20:46:25,782 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@60b1ff3b
2023-04-17 20:46:25,782 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@60b1ff3b
2023-04-17 20:46:25,782 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@60b1ff3b
2023-04-17 20:46:25,782 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@35c8be21
2023-04-17 20:46:25,782 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@35c8be21
2023-04-17 20:46:25,782 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@35c8be21
2023-04-17 20:46:25,783 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@615b5480
2023-04-17 20:46:25,783 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@3b218c74
2023-04-17 20:46:25,784 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@375084c9
2023-04-17 20:46:25,784 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@375084c9
2023-04-17 20:46:25,785 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@38c460e8
2023-04-17 20:46:25,786 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@3dc39459
2023-04-17 20:46:25,786 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3dc39459
2023-04-17 20:46:25,788 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@3b6c2be6
2023-04-17 20:46:25,788 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3b6c2be6
2023-04-17 20:46:25,788 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4ae280da
2023-04-17 20:46:25,789 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@446b64b3
2023-04-17 20:46:25,790 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@3a4e524
2023-04-17 20:46:25,792 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@23648d2d
2023-04-17 20:46:25,793 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@23648d2d
2023-04-17 20:46:25,793 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2cc75b25
2023-04-17 20:46:25,793 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@30036a18
2023-04-17 20:46:25,794 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@537b3b2e
2023-04-17 20:46:25,794 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1544ded3
2023-04-17 20:46:25,794 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3ccb12d
2023-04-17 20:46:25,794 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@28b458e6
2023-04-17 20:46:25,794 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@221ca495
2023-04-17 20:46:25,795 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@119d4443
2023-04-17 20:46:26,188 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@308a9264] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7da77305]
2023-04-17 20:46:26,531 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 20:46:26,533 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 20:46:26,533 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@308a9264] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@54b2d002]
2023-04-17 20:46:27,030 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@54b2d002] for TypeConfiguration
2023-04-17 20:46:27,379 DEBUG com.yuripe.normalizator.security.jwt.AuthTokenFilter [main] Filter 'authenticationJwtTokenFilter' configured for use
2023-04-17 20:46:28,215 INFO com.yuripe.normalizator.NormalypApplication [main] Started NormalypApplication in 4.285 seconds (JVM running for 5.137)
2023-04-17 20:47:15,283 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 20:47:15,287 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:47:15,293 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 20:47:15,303 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:47:15,303 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 20:47:15,304 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 20:47:15,305 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 20:47:15,305 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 20:47:15,327 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-2] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 20:47:15,341 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 20:47:15,343 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2023-04-17 20:47:15,352 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 20:47:15,353 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 20:47:15,354 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 20:47:15,355 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 20:47:15,478 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 20:47:15,478 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 20:47:15,480 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 20:47:15,481 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 20:47:15,481 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 20:47:15,482 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 20:47:15,482 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 20:47:15,482 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 20:47:15,482 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 20:47:27,423 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-2] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.io.FileNotFoundException: src\main\resources\BATCH_IN_FILES (Access is denied)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at com.yuripe.core.library.services.FTPService.downloadFile(FTPService.java:76)
	at com.yuripe.normalizator.configurations.FTPServiceCustom.getFileFromSFTP(FTPServiceCustom.java:27)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:113)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$642e9774.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 20:48:23,352 DEBUG org.hibernate.SQL [http-nio-8080-exec-1] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 20:48:23,353 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:48:23,354 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 20:48:23,354 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:48:23,355 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 20:48:23,355 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 20:48:23,355 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 20:48:23,355 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 20:48:23,355 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-1] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 20:48:23,355 DEBUG org.hibernate.SQL [http-nio-8080-exec-1] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 20:48:23,356 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2023-04-17 20:48:23,357 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 20:48:23,357 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 20:48:23,357 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 20:48:23,357 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 20:48:23,360 DEBUG org.hibernate.SQL [http-nio-8080-exec-1] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 20:48:23,360 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 20:48:23,361 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 20:48:23,361 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 20:48:23,361 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 20:48:23,361 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 20:48:23,361 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 20:48:23,362 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 20:48:23,362 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 20:48:23,413 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-1] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.io.FileNotFoundException: src\main\resources\BATCH_IN_FILES (Access is denied)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at com.yuripe.core.library.services.FTPService.downloadFile(FTPService.java:76)
	at com.yuripe.normalizator.configurations.FTPServiceCustom.getFileFromSFTP(FTPServiceCustom.java:27)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:113)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$642e9774.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 20:48:34,408 DEBUG org.hibernate.SQL [http-nio-8080-exec-8] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 20:48:34,409 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:48:34,410 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 20:48:34,410 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:48:34,410 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 20:48:34,411 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 20:48:34,411 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 20:48:34,411 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 20:48:34,411 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-8] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 20:48:34,411 DEBUG org.hibernate.SQL [http-nio-8080-exec-8] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 20:48:34,412 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2023-04-17 20:48:34,413 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 20:48:34,413 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 20:48:34,413 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 20:48:34,413 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 20:48:34,417 DEBUG org.hibernate.SQL [http-nio-8080-exec-8] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 20:48:34,418 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 20:48:34,419 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 20:48:34,419 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 20:48:34,420 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 20:48:34,420 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 20:48:34,420 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 20:48:34,420 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 20:48:34,420 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 20:48:34,471 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-8] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.io.FileNotFoundException: src\main\resources\BATCH_IN_FILES (Access is denied)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at com.yuripe.core.library.services.FTPService.downloadFile(FTPService.java:76)
	at com.yuripe.normalizator.configurations.FTPServiceCustom.getFileFromSFTP(FTPServiceCustom.java:27)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:113)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$642e9774.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 20:48:48,641 INFO com.yuripe.normalizator.NormalypApplication [main] Starting NormalypApplication using Java 17.0.2 on YPNB with PID 3800 (C:\Users\yurip\git\normalyp\normalyp\target\classes started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 20:48:48,646 DEBUG com.yuripe.normalizator.NormalypApplication [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 20:48:48,647 INFO com.yuripe.normalizator.NormalypApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 20:48:50,253 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@935d3f9
2023-04-17 20:48:50,253 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@935d3f9
2023-04-17 20:48:50,254 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@935d3f9
2023-04-17 20:48:50,254 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7de147e9
2023-04-17 20:48:50,256 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@8eb6f9a
2023-04-17 20:48:50,257 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@13ef7fa1
2023-04-17 20:48:50,258 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@57a667c8
2023-04-17 20:48:50,258 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@57a667c8
2023-04-17 20:48:50,258 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@57a667c8
2023-04-17 20:48:50,259 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@4861cca9
2023-04-17 20:48:50,259 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@4861cca9
2023-04-17 20:48:50,259 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4861cca9
2023-04-17 20:48:50,260 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@1132baa3
2023-04-17 20:48:50,261 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@1132baa3
2023-04-17 20:48:50,261 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1132baa3
2023-04-17 20:48:50,261 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@57e03347
2023-04-17 20:48:50,262 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@57e03347
2023-04-17 20:48:50,262 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57e03347
2023-04-17 20:48:50,263 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@5fb8dc01
2023-04-17 20:48:50,263 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@5fb8dc01
2023-04-17 20:48:50,263 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@5fb8dc01
2023-04-17 20:48:50,264 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@554566a8
2023-04-17 20:48:50,264 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@554566a8
2023-04-17 20:48:50,264 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@554566a8
2023-04-17 20:48:50,265 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@2b44605c
2023-04-17 20:48:50,265 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@2b44605c
2023-04-17 20:48:50,265 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2b44605c
2023-04-17 20:48:50,266 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@611c3eae
2023-04-17 20:48:50,266 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@611c3eae
2023-04-17 20:48:50,267 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7b5ac347
2023-04-17 20:48:50,267 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7b5ac347
2023-04-17 20:48:50,267 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@6b25ef1c
2023-04-17 20:48:50,267 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@6b25ef1c
2023-04-17 20:48:50,268 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3f0ce0d1
2023-04-17 20:48:50,268 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1aedf08d
2023-04-17 20:48:50,269 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@1201769d
2023-04-17 20:48:50,269 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@1201769d
2023-04-17 20:48:50,269 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@504497fa
2023-04-17 20:48:50,270 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@504497fa
2023-04-17 20:48:50,270 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@6b5c134e
2023-04-17 20:48:50,270 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6b5c134e
2023-04-17 20:48:50,272 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@24691c5
2023-04-17 20:48:50,272 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@24691c5
2023-04-17 20:48:50,273 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5cc1bf20
2023-04-17 20:48:50,273 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5cc1bf20
2023-04-17 20:48:50,281 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@bd93bc3
2023-04-17 20:48:50,282 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@bd93bc3
2023-04-17 20:48:50,282 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@55bf35e5
2023-04-17 20:48:50,283 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@55bf35e5
2023-04-17 20:48:50,283 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6b16de91
2023-04-17 20:48:50,284 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6b16de91
2023-04-17 20:48:50,285 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@57c69937
2023-04-17 20:48:50,285 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@57c69937
2023-04-17 20:48:50,286 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@781dac73
2023-04-17 20:48:50,286 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@781dac73
2023-04-17 20:48:50,287 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@30159886
2023-04-17 20:48:50,287 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@30159886
2023-04-17 20:48:50,288 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@6682e6a5
2023-04-17 20:48:50,288 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6682e6a5
2023-04-17 20:48:50,288 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6682e6a5
2023-04-17 20:48:50,289 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@d84b3a2
2023-04-17 20:48:50,291 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1544ded3
2023-04-17 20:48:50,291 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1544ded3
2023-04-17 20:48:50,291 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1544ded3
2023-04-17 20:48:50,291 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@773eca84
2023-04-17 20:48:50,292 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5f56424d
2023-04-17 20:48:50,293 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@701c223a
2023-04-17 20:48:50,293 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@701c223a
2023-04-17 20:48:50,293 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@44dd0d38
2023-04-17 20:48:50,293 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@44dd0d38
2023-04-17 20:48:50,294 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@2bdab835
2023-04-17 20:48:50,294 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2bdab835
2023-04-17 20:48:50,295 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@1815577b
2023-04-17 20:48:50,295 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1815577b
2023-04-17 20:48:50,295 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1f949ab9
2023-04-17 20:48:50,296 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1f949ab9
2023-04-17 20:48:50,296 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3855d9b2
2023-04-17 20:48:50,297 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@da09250
2023-04-17 20:48:50,297 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@da09250
2023-04-17 20:48:50,297 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@da09250
2023-04-17 20:48:50,298 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@112c2930
2023-04-17 20:48:50,298 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@112c2930
2023-04-17 20:48:50,298 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@112c2930
2023-04-17 20:48:50,299 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@beabd6b
2023-04-17 20:48:50,299 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@2bfc2f8b
2023-04-17 20:48:50,300 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@1ae924f1
2023-04-17 20:48:50,300 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@1ae924f1
2023-04-17 20:48:50,300 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@1ae924f1
2023-04-17 20:48:50,300 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5f3b84bd
2023-04-17 20:48:50,300 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5f3b84bd
2023-04-17 20:48:50,301 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5f3b84bd
2023-04-17 20:48:50,302 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@166b11e
2023-04-17 20:48:50,302 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@3bc20984
2023-04-17 20:48:50,303 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@6735f210
2023-04-17 20:48:50,304 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6735f210
2023-04-17 20:48:50,304 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@173511ff
2023-04-17 20:48:50,305 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@216f01
2023-04-17 20:48:50,305 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@216f01
2023-04-17 20:48:50,307 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@120350eb
2023-04-17 20:48:50,307 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@120350eb
2023-04-17 20:48:50,308 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4217bce6
2023-04-17 20:48:50,309 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1b31af02
2023-04-17 20:48:50,310 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@730bea0
2023-04-17 20:48:50,313 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@5a3cf878
2023-04-17 20:48:50,313 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5a3cf878
2023-04-17 20:48:50,313 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5c53c235
2023-04-17 20:48:50,314 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2dcd0e41
2023-04-17 20:48:50,314 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7272ee51
2023-04-17 20:48:50,314 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1b409a79
2023-04-17 20:48:50,314 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5940b14e
2023-04-17 20:48:50,315 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1cba0321
2023-04-17 20:48:50,315 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@795f6681
2023-04-17 20:48:50,315 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@66d3b881
2023-04-17 20:48:50,712 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4c50cd7d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3ea84e01]
2023-04-17 20:48:51,072 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 20:48:51,074 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 20:48:51,074 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4c50cd7d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4bb9f7d4]
2023-04-17 20:48:51,608 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4bb9f7d4] for TypeConfiguration
2023-04-17 20:48:52,036 DEBUG com.yuripe.normalizator.security.jwt.AuthTokenFilter [main] Filter 'authenticationJwtTokenFilter' configured for use
2023-04-17 20:48:53,017 INFO com.yuripe.normalizator.NormalypApplication [main] Started NormalypApplication in 4.703 seconds (JVM running for 5.594)
2023-04-17 20:48:55,868 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 20:48:55,870 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:48:55,872 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 20:48:55,876 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:48:55,877 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 20:48:55,877 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 20:48:55,877 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 20:48:55,877 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 20:48:55,886 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-4] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 20:48:55,892 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 20:48:55,893 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2023-04-17 20:48:55,901 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 20:48:55,901 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 20:48:55,902 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 20:48:55,902 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 20:48:55,968 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 20:48:55,968 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 20:48:55,969 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 20:48:55,970 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 20:48:55,970 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 20:48:55,970 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 20:48:55,970 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 20:48:55,971 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 20:48:55,971 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 20:48:56,050 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-4] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.io.FileNotFoundException: src\main\resources\BATCH_IN_FILES (Access is denied)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at com.yuripe.core.library.services.FTPService.downloadFile(FTPService.java:76)
	at com.yuripe.normalizator.configurations.FTPServiceCustom.getFileFromSFTP(FTPServiceCustom.java:27)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:113)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$37efc3e6.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 20:52:19,712 INFO com.yuripe.normalizator.NormalypApplication [main] Starting NormalypApplication using Java 17.0.2 on YPNB with PID 3264 (C:\Users\yurip\git\normalyp\normalyp\target\classes started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 20:52:19,718 DEBUG com.yuripe.normalizator.NormalypApplication [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 20:52:19,718 INFO com.yuripe.normalizator.NormalypApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 20:52:21,303 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1796b2d4
2023-04-17 20:52:21,305 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1796b2d4
2023-04-17 20:52:21,305 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1796b2d4
2023-04-17 20:52:21,305 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@200d1a3d
2023-04-17 20:52:21,306 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@7f42b194
2023-04-17 20:52:21,307 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@402b4f81
2023-04-17 20:52:21,315 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@e26a3df
2023-04-17 20:52:21,315 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@e26a3df
2023-04-17 20:52:21,315 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@e26a3df
2023-04-17 20:52:21,317 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@6d969330
2023-04-17 20:52:21,318 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@6d969330
2023-04-17 20:52:21,318 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6d969330
2023-04-17 20:52:21,319 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@7d66a126
2023-04-17 20:52:21,320 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@7d66a126
2023-04-17 20:52:21,320 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7d66a126
2023-04-17 20:52:21,321 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@307c59ea
2023-04-17 20:52:21,321 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@307c59ea
2023-04-17 20:52:21,321 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@307c59ea
2023-04-17 20:52:21,322 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@b8a144e
2023-04-17 20:52:21,322 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@b8a144e
2023-04-17 20:52:21,322 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@b8a144e
2023-04-17 20:52:21,323 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@7345f97d
2023-04-17 20:52:21,323 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@7345f97d
2023-04-17 20:52:21,323 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7345f97d
2023-04-17 20:52:21,324 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@591f6f83
2023-04-17 20:52:21,324 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@591f6f83
2023-04-17 20:52:21,324 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@591f6f83
2023-04-17 20:52:21,325 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6d6039df
2023-04-17 20:52:21,325 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6d6039df
2023-04-17 20:52:21,326 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1ab53860
2023-04-17 20:52:21,327 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1ab53860
2023-04-17 20:52:21,327 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@1600a8a2
2023-04-17 20:52:21,328 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1600a8a2
2023-04-17 20:52:21,328 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7b95bdb0
2023-04-17 20:52:21,328 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@423f8a73
2023-04-17 20:52:21,329 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@5844a2d1
2023-04-17 20:52:21,329 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@5844a2d1
2023-04-17 20:52:21,330 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@2e2f20b8
2023-04-17 20:52:21,330 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2e2f20b8
2023-04-17 20:52:21,331 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@3d0d120b
2023-04-17 20:52:21,331 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3d0d120b
2023-04-17 20:52:21,332 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@615b5480
2023-04-17 20:52:21,332 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@615b5480
2023-04-17 20:52:21,333 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6bb4cc0e
2023-04-17 20:52:21,333 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6bb4cc0e
2023-04-17 20:52:21,334 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@375084c9
2023-04-17 20:52:21,334 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@375084c9
2023-04-17 20:52:21,335 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e67cfe1
2023-04-17 20:52:21,335 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e67cfe1
2023-04-17 20:52:21,336 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3dc39459
2023-04-17 20:52:21,337 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3dc39459
2023-04-17 20:52:21,338 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76d0ecd7
2023-04-17 20:52:21,339 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76d0ecd7
2023-04-17 20:52:21,340 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@4df7d9ee
2023-04-17 20:52:21,340 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@4df7d9ee
2023-04-17 20:52:21,341 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@33de7f3d
2023-04-17 20:52:21,341 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@33de7f3d
2023-04-17 20:52:21,343 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@19eea77c
2023-04-17 20:52:21,343 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@19eea77c
2023-04-17 20:52:21,344 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@19eea77c
2023-04-17 20:52:21,345 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7cc2c551
2023-04-17 20:52:21,347 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@537b3b2e
2023-04-17 20:52:21,347 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@537b3b2e
2023-04-17 20:52:21,347 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@537b3b2e
2023-04-17 20:52:21,347 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@119d4443
2023-04-17 20:52:21,348 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7e0f9528
2023-04-17 20:52:21,349 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@7336fd8f
2023-04-17 20:52:21,349 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7336fd8f
2023-04-17 20:52:21,349 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@852ef8d
2023-04-17 20:52:21,350 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@852ef8d
2023-04-17 20:52:21,350 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@147e0734
2023-04-17 20:52:21,350 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@147e0734
2023-04-17 20:52:21,351 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@270d5060
2023-04-17 20:52:21,351 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@270d5060
2023-04-17 20:52:21,352 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@987a0bb
2023-04-17 20:52:21,352 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@987a0bb
2023-04-17 20:52:21,353 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3afca2c
2023-04-17 20:52:21,353 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@532dacf5
2023-04-17 20:52:21,353 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@532dacf5
2023-04-17 20:52:21,354 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@532dacf5
2023-04-17 20:52:21,354 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f4d01b6
2023-04-17 20:52:21,355 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f4d01b6
2023-04-17 20:52:21,355 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f4d01b6
2023-04-17 20:52:21,356 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@661e279d
2023-04-17 20:52:21,356 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@7523d5a1
2023-04-17 20:52:21,357 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@44641d6c
2023-04-17 20:52:21,357 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@44641d6c
2023-04-17 20:52:21,357 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@44641d6c
2023-04-17 20:52:21,359 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@26874f2c
2023-04-17 20:52:21,359 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@26874f2c
2023-04-17 20:52:21,359 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@26874f2c
2023-04-17 20:52:21,359 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@2fbd390
2023-04-17 20:52:21,360 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@f18b738
2023-04-17 20:52:21,361 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@19ae36f4
2023-04-17 20:52:21,362 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@19ae36f4
2023-04-17 20:52:21,362 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5fd8dd66
2023-04-17 20:52:21,363 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@7de35070
2023-04-17 20:52:21,364 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7de35070
2023-04-17 20:52:21,365 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@48dff674
2023-04-17 20:52:21,365 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@48dff674
2023-04-17 20:52:21,366 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4a9b3956
2023-04-17 20:52:21,366 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@643ecfef
2023-04-17 20:52:21,367 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@203b953c
2023-04-17 20:52:21,371 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@7a55fb81
2023-04-17 20:52:21,371 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7a55fb81
2023-04-17 20:52:21,371 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@61911947
2023-04-17 20:52:21,371 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5c53c235
2023-04-17 20:52:21,371 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2dcd0e41
2023-04-17 20:52:21,372 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7272ee51
2023-04-17 20:52:21,372 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1b409a79
2023-04-17 20:52:21,372 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5940b14e
2023-04-17 20:52:21,372 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1cba0321
2023-04-17 20:52:21,372 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@795f6681
2023-04-17 20:52:21,746 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7645b7d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4c50cd7d]
2023-04-17 20:52:22,099 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 20:52:22,100 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 20:52:22,101 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7645b7d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@59c862af]
2023-04-17 20:52:22,615 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@59c862af] for TypeConfiguration
2023-04-17 20:52:23,011 DEBUG com.yuripe.normalizator.security.jwt.AuthTokenFilter [main] Filter 'authenticationJwtTokenFilter' configured for use
2023-04-17 20:52:23,969 INFO com.yuripe.normalizator.NormalypApplication [main] Started NormalypApplication in 4.595 seconds (JVM running for 5.507)
2023-04-17 20:52:31,826 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 20:52:31,831 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:52:31,837 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 20:52:31,846 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:52:31,846 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 20:52:31,847 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 20:52:31,847 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 20:52:31,848 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 20:52:31,868 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-2] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 20:52:31,879 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 20:52:31,880 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2023-04-17 20:52:31,890 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 20:52:31,891 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 20:52:31,892 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 20:52:31,893 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 20:52:32,020 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 20:52:32,021 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 20:52:32,023 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 20:52:32,024 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 20:52:32,024 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 20:52:32,024 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 20:52:32,025 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 20:52:32,026 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 20:52:32,026 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 20:52:32,138 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-2] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.io.FileNotFoundException: src\main\resources (Access is denied)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at com.yuripe.core.library.services.FTPService.downloadFile(FTPService.java:76)
	at com.yuripe.normalizator.configurations.FTPServiceCustom.getFileFromSFTP(FTPServiceCustom.java:27)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:113)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$623ebed0.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 20:53:27,197 INFO com.yuripe.normalizator.NormalypApplication [main] Starting NormalypApplication using Java 17.0.2 on YPNB with PID 6520 (C:\Users\yurip\git\normalyp\normalyp\target\classes started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 20:53:27,201 DEBUG com.yuripe.normalizator.NormalypApplication [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 20:53:27,203 INFO com.yuripe.normalizator.NormalypApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 20:53:28,797 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@214b342f
2023-04-17 20:53:28,798 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@214b342f
2023-04-17 20:53:28,798 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@214b342f
2023-04-17 20:53:28,799 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@12567179
2023-04-17 20:53:28,800 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@29170a47
2023-04-17 20:53:28,801 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@23b1aa9
2023-04-17 20:53:28,802 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@712cd5d3
2023-04-17 20:53:28,802 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@712cd5d3
2023-04-17 20:53:28,802 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@712cd5d3
2023-04-17 20:53:28,803 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@6c8f4bc7
2023-04-17 20:53:28,803 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@6c8f4bc7
2023-04-17 20:53:28,804 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6c8f4bc7
2023-04-17 20:53:28,804 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@2fdf22f7
2023-04-17 20:53:28,805 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@2fdf22f7
2023-04-17 20:53:28,805 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2fdf22f7
2023-04-17 20:53:28,806 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@2edb2f8b
2023-04-17 20:53:28,806 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@2edb2f8b
2023-04-17 20:53:28,806 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2edb2f8b
2023-04-17 20:53:28,807 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@3e38c472
2023-04-17 20:53:28,807 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@3e38c472
2023-04-17 20:53:28,808 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e38c472
2023-04-17 20:53:28,809 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@66020d69
2023-04-17 20:53:28,809 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@66020d69
2023-04-17 20:53:28,809 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@66020d69
2023-04-17 20:53:28,810 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@55421b8d
2023-04-17 20:53:28,810 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@55421b8d
2023-04-17 20:53:28,810 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@55421b8d
2023-04-17 20:53:28,811 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@13e00016
2023-04-17 20:53:28,811 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@13e00016
2023-04-17 20:53:28,812 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@57b9389f
2023-04-17 20:53:28,813 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@57b9389f
2023-04-17 20:53:28,813 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@56b1e527
2023-04-17 20:53:28,813 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@56b1e527
2023-04-17 20:53:28,814 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@664db2ca
2023-04-17 20:53:28,814 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@113dcaf8
2023-04-17 20:53:28,815 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@4af7dd6a
2023-04-17 20:53:28,816 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@4af7dd6a
2023-04-17 20:53:28,817 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@5618fc1f
2023-04-17 20:53:28,817 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5618fc1f
2023-04-17 20:53:28,818 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@34d9df9f
2023-04-17 20:53:28,818 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@34d9df9f
2023-04-17 20:53:28,818 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7b91d9f
2023-04-17 20:53:28,819 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7b91d9f
2023-04-17 20:53:28,819 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2e3f324e
2023-04-17 20:53:28,819 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2e3f324e
2023-04-17 20:53:28,820 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2a136383
2023-04-17 20:53:28,820 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2a136383
2023-04-17 20:53:28,821 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@25567581
2023-04-17 20:53:28,821 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@25567581
2023-04-17 20:53:28,822 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@71bb8b34
2023-04-17 20:53:28,823 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@71bb8b34
2023-04-17 20:53:28,824 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1ad1c363
2023-04-17 20:53:28,824 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1ad1c363
2023-04-17 20:53:28,825 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@3a4e524
2023-04-17 20:53:28,825 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@3a4e524
2023-04-17 20:53:28,826 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@5d66ae3a
2023-04-17 20:53:28,826 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d66ae3a
2023-04-17 20:53:28,827 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@ac4915e
2023-04-17 20:53:28,827 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@ac4915e
2023-04-17 20:53:28,829 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@ac4915e
2023-04-17 20:53:28,831 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@23648d2d
2023-04-17 20:53:28,834 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@3ccb12d
2023-04-17 20:53:28,834 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ccb12d
2023-04-17 20:53:28,834 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ccb12d
2023-04-17 20:53:28,835 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7d47dfed
2023-04-17 20:53:28,835 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@237b2852
2023-04-17 20:53:28,836 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@550c973e
2023-04-17 20:53:28,836 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@550c973e
2023-04-17 20:53:28,837 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@7e94e331
2023-04-17 20:53:28,837 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7e94e331
2023-04-17 20:53:28,838 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@7b8aebd0
2023-04-17 20:53:28,838 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7b8aebd0
2023-04-17 20:53:28,838 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@71567f33
2023-04-17 20:53:28,839 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71567f33
2023-04-17 20:53:28,839 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5a7b6b75
2023-04-17 20:53:28,839 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5a7b6b75
2023-04-17 20:53:28,840 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39f42d0e
2023-04-17 20:53:28,841 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@6d31f106
2023-04-17 20:53:28,841 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@6d31f106
2023-04-17 20:53:28,841 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@6d31f106
2023-04-17 20:53:28,842 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7f426ddd
2023-04-17 20:53:28,842 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7f426ddd
2023-04-17 20:53:28,842 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7f426ddd
2023-04-17 20:53:28,843 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@38de5daf
2023-04-17 20:53:28,844 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@61853c7e
2023-04-17 20:53:28,844 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@59d5a6fd
2023-04-17 20:53:28,844 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@59d5a6fd
2023-04-17 20:53:28,845 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@59d5a6fd
2023-04-17 20:53:28,845 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e734eee
2023-04-17 20:53:28,845 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e734eee
2023-04-17 20:53:28,846 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e734eee
2023-04-17 20:53:28,846 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@5e68be2
2023-04-17 20:53:28,847 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@aca3c85
2023-04-17 20:53:28,849 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@4567fb2b
2023-04-17 20:53:28,849 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4567fb2b
2023-04-17 20:53:28,850 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6df11e91
2023-04-17 20:53:28,851 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@7c901203
2023-04-17 20:53:28,851 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7c901203
2023-04-17 20:53:28,852 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@2ccc9681
2023-04-17 20:53:28,853 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2ccc9681
2023-04-17 20:53:28,853 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@aa752bb
2023-04-17 20:53:28,855 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2bb31455
2023-04-17 20:53:28,856 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@41a16eb3
2023-04-17 20:53:28,858 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@1d2d8846
2023-04-17 20:53:28,859 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1d2d8846
2023-04-17 20:53:28,859 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2dcd0e41
2023-04-17 20:53:28,859 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7272ee51
2023-04-17 20:53:28,860 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1b409a79
2023-04-17 20:53:28,860 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5940b14e
2023-04-17 20:53:28,860 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1cba0321
2023-04-17 20:53:28,860 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@795f6681
2023-04-17 20:53:28,860 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@66d3b881
2023-04-17 20:53:28,860 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3a45afd4
2023-04-17 20:53:29,251 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3ea84e01] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1a4930cf]
2023-04-17 20:53:29,583 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 20:53:29,585 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 20:53:29,585 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3ea84e01] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@673a9db4]
2023-04-17 20:53:30,099 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@673a9db4] for TypeConfiguration
2023-04-17 20:53:30,449 DEBUG com.yuripe.normalizator.security.jwt.AuthTokenFilter [main] Filter 'authenticationJwtTokenFilter' configured for use
2023-04-17 20:53:31,375 INFO com.yuripe.normalizator.NormalypApplication [main] Started NormalypApplication in 4.513 seconds (JVM running for 5.425)
2023-04-17 20:53:34,989 DEBUG org.hibernate.SQL [http-nio-8080-exec-10] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 20:53:34,992 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:53:34,994 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-10] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 20:53:34,998 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-10] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:53:34,998 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-10] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 20:53:35,000 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-10] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 20:53:35,000 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-10] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 20:53:35,000 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-10] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 20:53:35,009 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-10] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 20:53:35,015 DEBUG org.hibernate.SQL [http-nio-8080-exec-10] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 20:53:35,016 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [BIGINT] - [1]
2023-04-17 20:53:35,021 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-10] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 20:53:35,022 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-10] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 20:53:35,022 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-10] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 20:53:35,023 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-10] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 20:53:35,091 DEBUG org.hibernate.SQL [http-nio-8080-exec-10] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 20:53:35,091 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 20:53:35,093 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-10] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 20:53:35,093 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-10] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 20:53:35,093 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-10] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 20:53:35,093 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-10] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 20:53:35,093 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-10] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 20:53:35,093 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-10] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 20:53:35,094 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-10] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 20:53:40,635 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-10] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.io.FileNotFoundException: src\main\resources\BATCH_IN_FILES (Access is denied)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at com.yuripe.core.library.services.FTPService.downloadFile(FTPService.java:76)
	at com.yuripe.normalizator.configurations.FTPServiceCustom.getFileFromSFTP(FTPServiceCustom.java:27)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:113)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$ea45f735.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 20:54:21,575 DEBUG org.hibernate.SQL [http-nio-8080-exec-8] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 20:54:21,576 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:54:21,577 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 20:54:21,578 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:54:21,578 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 20:54:21,578 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 20:54:21,579 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 20:54:21,579 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 20:54:21,579 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-8] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 20:54:21,580 DEBUG org.hibernate.SQL [http-nio-8080-exec-8] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 20:54:21,580 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2023-04-17 20:54:21,582 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 20:54:21,582 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 20:54:21,583 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 20:54:21,583 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 20:54:21,585 DEBUG org.hibernate.SQL [http-nio-8080-exec-8] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 20:54:21,586 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 20:54:21,586 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 20:54:21,587 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 20:54:21,587 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 20:54:21,587 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 20:54:21,587 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 20:54:21,587 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 20:54:21,587 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 20:54:42,107 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-8] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.io.FileNotFoundException: src\main\resources\BATCH_IN_FILES (Access is denied)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at com.yuripe.core.library.services.FTPService.downloadFile(FTPService.java:76)
	at com.yuripe.normalizator.configurations.FTPServiceCustom.getFileFromSFTP(FTPServiceCustom.java:27)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:113)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$ea45f735.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 20:55:17,130 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 20:55:17,131 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 20:55:17,132 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 20:55:17,133 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 20:55:17,133 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 20:55:17,133 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 20:55:17,133 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 20:55:17,135 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 20:55:17,135 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-2] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 20:55:17,136 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 20:55:17,136 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2023-04-17 20:55:17,137 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 20:55:17,137 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 20:55:17,138 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 20:55:17,138 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 20:55:17,143 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 20:55:17,144 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 20:55:17,145 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 20:55:17,146 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 20:55:17,146 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 20:55:17,146 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 20:55:17,146 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 20:55:17,146 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 20:55:17,148 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 20:55:55,299 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-2] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.io.FileNotFoundException: src\main\resources\BATCH_IN_FILES (Access is denied)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at com.yuripe.core.library.services.FTPService.downloadFile(FTPService.java:76)
	at com.yuripe.normalizator.configurations.FTPServiceCustom.getFileFromSFTP(FTPServiceCustom.java:27)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:113)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$ea45f735.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 21:05:01,603 INFO com.yuripe.normalizator.NormalypApplication [main] Starting NormalypApplication using Java 17.0.2 on YPNB with PID 11700 (C:\Users\yurip\git\normalyp\normalyp\target\classes started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 21:05:01,609 DEBUG com.yuripe.normalizator.NormalypApplication [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 21:05:01,609 INFO com.yuripe.normalizator.NormalypApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 21:05:03,256 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@23564dd2
2023-04-17 21:05:03,257 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@23564dd2
2023-04-17 21:05:03,257 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@23564dd2
2023-04-17 21:05:03,258 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@214b342f
2023-04-17 21:05:03,259 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@200d1a3d
2023-04-17 21:05:03,260 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@7f42b194
2023-04-17 21:05:03,261 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@4e8598d9
2023-04-17 21:05:03,261 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@4e8598d9
2023-04-17 21:05:03,261 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4e8598d9
2023-04-17 21:05:03,262 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@2094bf3d
2023-04-17 21:05:03,262 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@2094bf3d
2023-04-17 21:05:03,263 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2094bf3d
2023-04-17 21:05:03,263 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@714e861f
2023-04-17 21:05:03,264 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@714e861f
2023-04-17 21:05:03,264 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@714e861f
2023-04-17 21:05:03,264 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@3a2546d6
2023-04-17 21:05:03,265 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@3a2546d6
2023-04-17 21:05:03,265 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3a2546d6
2023-04-17 21:05:03,266 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@733f1395
2023-04-17 21:05:03,266 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@733f1395
2023-04-17 21:05:03,266 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@733f1395
2023-04-17 21:05:03,267 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@2ee92e7d
2023-04-17 21:05:03,268 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@2ee92e7d
2023-04-17 21:05:03,268 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ee92e7d
2023-04-17 21:05:03,269 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@3751acd7
2023-04-17 21:05:03,269 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@3751acd7
2023-04-17 21:05:03,269 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3751acd7
2023-04-17 21:05:03,270 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@24a04257
2023-04-17 21:05:03,270 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@24a04257
2023-04-17 21:05:03,272 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7b3cbe6e
2023-04-17 21:05:03,272 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7b3cbe6e
2023-04-17 21:05:03,273 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@72b2c5ed
2023-04-17 21:05:03,273 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@72b2c5ed
2023-04-17 21:05:03,273 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1600a8a2
2023-04-17 21:05:03,274 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7b95bdb0
2023-04-17 21:05:03,275 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@b5d9f1e
2023-04-17 21:05:03,275 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@b5d9f1e
2023-04-17 21:05:03,276 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@4607d78b
2023-04-17 21:05:03,276 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4607d78b
2023-04-17 21:05:03,276 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@60b1ff3b
2023-04-17 21:05:03,277 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@60b1ff3b
2023-04-17 21:05:03,277 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@35c8be21
2023-04-17 21:05:03,278 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@35c8be21
2023-04-17 21:05:03,279 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6537ac
2023-04-17 21:05:03,279 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6537ac
2023-04-17 21:05:03,279 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@46cf8c07
2023-04-17 21:05:03,280 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@46cf8c07
2023-04-17 21:05:03,281 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b01cb8d
2023-04-17 21:05:03,281 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b01cb8d
2023-04-17 21:05:03,282 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@179ee36b
2023-04-17 21:05:03,283 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@179ee36b
2023-04-17 21:05:03,285 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@25533bba
2023-04-17 21:05:03,285 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@25533bba
2023-04-17 21:05:03,287 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@5dcf0772
2023-04-17 21:05:03,287 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@5dcf0772
2023-04-17 21:05:03,289 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@2dac2e1b
2023-04-17 21:05:03,289 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2dac2e1b
2023-04-17 21:05:03,291 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10131289
2023-04-17 21:05:03,291 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10131289
2023-04-17 21:05:03,291 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10131289
2023-04-17 21:05:03,293 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@19eea77c
2023-04-17 21:05:03,294 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@37c1cfa
2023-04-17 21:05:03,294 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@37c1cfa
2023-04-17 21:05:03,294 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@37c1cfa
2023-04-17 21:05:03,295 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1544ded3
2023-04-17 21:05:03,296 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3a38e4dc
2023-04-17 21:05:03,296 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@448cdb47
2023-04-17 21:05:03,296 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@448cdb47
2023-04-17 21:05:03,297 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@161d95c6
2023-04-17 21:05:03,298 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@161d95c6
2023-04-17 21:05:03,298 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@539fc5d1
2023-04-17 21:05:03,298 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@539fc5d1
2023-04-17 21:05:03,299 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@55222ee9
2023-04-17 21:05:03,300 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@55222ee9
2023-04-17 21:05:03,300 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@71369e1a
2023-04-17 21:05:03,301 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@71369e1a
2023-04-17 21:05:03,301 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@987a0bb
2023-04-17 21:05:03,302 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@3a209918
2023-04-17 21:05:03,302 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@3a209918
2023-04-17 21:05:03,302 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@3a209918
2023-04-17 21:05:03,303 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@587f4f63
2023-04-17 21:05:03,303 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@587f4f63
2023-04-17 21:05:03,303 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@587f4f63
2023-04-17 21:05:03,305 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@28e7bb31
2023-04-17 21:05:03,305 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@661e279d
2023-04-17 21:05:03,306 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@32e5af53
2023-04-17 21:05:03,306 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@32e5af53
2023-04-17 21:05:03,306 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@32e5af53
2023-04-17 21:05:03,307 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@27bcb4ad
2023-04-17 21:05:03,307 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@27bcb4ad
2023-04-17 21:05:03,307 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@27bcb4ad
2023-04-17 21:05:03,308 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@26874f2c
2023-04-17 21:05:03,308 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@2fbd390
2023-04-17 21:05:03,310 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@7f51f588
2023-04-17 21:05:03,310 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7f51f588
2023-04-17 21:05:03,310 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@19ae36f4
2023-04-17 21:05:03,311 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@53cddaf8
2023-04-17 21:05:03,311 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@53cddaf8
2023-04-17 21:05:03,312 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@edb83f8
2023-04-17 21:05:03,313 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@edb83f8
2023-04-17 21:05:03,313 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@48dff674
2023-04-17 21:05:03,314 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4a9b3956
2023-04-17 21:05:03,315 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@bb8ead8
2023-04-17 21:05:03,318 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@6060146b
2023-04-17 21:05:03,318 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6060146b
2023-04-17 21:05:03,319 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7a55fb81
2023-04-17 21:05:03,319 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5a3cf878
2023-04-17 21:05:03,319 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1d2d8846
2023-04-17 21:05:03,319 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@34cd65ac
2023-04-17 21:05:03,319 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@61911947
2023-04-17 21:05:03,320 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5c53c235
2023-04-17 21:05:03,320 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2dcd0e41
2023-04-17 21:05:03,320 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7272ee51
2023-04-17 21:05:03,725 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1a43a88e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@51f34185]
2023-04-17 21:05:04,054 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 21:05:04,055 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 21:05:04,055 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1a43a88e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@50b38342]
2023-04-17 21:05:04,569 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@50b38342] for TypeConfiguration
2023-04-17 21:05:04,905 DEBUG com.yuripe.normalizator.security.jwt.AuthTokenFilter [main] Filter 'authenticationJwtTokenFilter' configured for use
2023-04-17 21:05:05,701 INFO com.yuripe.normalizator.NormalypApplication [main] Started NormalypApplication in 4.473 seconds (JVM running for 5.452)
2023-04-17 21:05:10,936 DEBUG org.hibernate.SQL [http-nio-8080-exec-1] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 21:05:10,939 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 21:05:10,942 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 21:05:10,946 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 21:05:10,946 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 21:05:10,946 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 21:05:10,946 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 21:05:10,946 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 21:05:10,955 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-1] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 21:05:10,960 DEBUG org.hibernate.SQL [http-nio-8080-exec-1] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 21:05:10,961 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2023-04-17 21:05:10,965 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 21:05:10,966 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 21:05:10,966 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 21:05:10,966 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 21:05:11,032 DEBUG org.hibernate.SQL [http-nio-8080-exec-1] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 21:05:11,032 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 21:05:11,033 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 21:05:11,033 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 21:05:11,033 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 21:05:11,034 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 21:05:11,034 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 21:05:11,034 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 21:05:11,034 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 21:05:24,118 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-1] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.io.FileNotFoundException: C:\Users\yurip\git\normalyp\normalyp\target (Access is denied)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at com.yuripe.core.library.services.FTPService.downloadFile(FTPService.java:76)
	at com.yuripe.normalizator.configurations.FTPServiceCustom.getFileFromSFTP(FTPServiceCustom.java:27)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:119)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$af619c76.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 21:05:31,966 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 21:05:31,966 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 21:05:31,968 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 21:05:31,968 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 21:05:31,968 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 21:05:31,969 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 21:05:31,969 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 21:05:31,970 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 21:05:31,970 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-4] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 21:05:31,971 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 21:05:31,971 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2023-04-17 21:05:31,973 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 21:05:31,974 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 21:05:31,974 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 21:05:31,974 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 21:08:11,446 INFO com.yuripe.normalizator.NormalypApplication [main] Starting NormalypApplication using Java 17.0.2 on YPNB with PID 8880 (C:\Users\yurip\git\normalyp\normalyp\target\classes started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 21:08:11,451 DEBUG com.yuripe.normalizator.NormalypApplication [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 21:08:11,452 INFO com.yuripe.normalizator.NormalypApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 21:08:13,073 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@5db0003d
2023-04-17 21:08:13,074 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@5db0003d
2023-04-17 21:08:13,074 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5db0003d
2023-04-17 21:08:13,075 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@37d699a1
2023-04-17 21:08:13,076 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@2a8f8555
2023-04-17 21:08:13,077 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@54489296
2023-04-17 21:08:13,078 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@2094bf3d
2023-04-17 21:08:13,078 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@2094bf3d
2023-04-17 21:08:13,078 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2094bf3d
2023-04-17 21:08:13,079 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@714e861f
2023-04-17 21:08:13,080 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@714e861f
2023-04-17 21:08:13,080 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@714e861f
2023-04-17 21:08:13,080 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@3a2546d6
2023-04-17 21:08:13,080 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@3a2546d6
2023-04-17 21:08:13,087 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3a2546d6
2023-04-17 21:08:13,088 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@733f1395
2023-04-17 21:08:13,089 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@733f1395
2023-04-17 21:08:13,089 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@733f1395
2023-04-17 21:08:13,090 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@2ee92e7d
2023-04-17 21:08:13,091 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@2ee92e7d
2023-04-17 21:08:13,091 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ee92e7d
2023-04-17 21:08:13,091 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@3751acd7
2023-04-17 21:08:13,092 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@3751acd7
2023-04-17 21:08:13,092 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3751acd7
2023-04-17 21:08:13,092 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@24a04257
2023-04-17 21:08:13,093 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@24a04257
2023-04-17 21:08:13,093 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@24a04257
2023-04-17 21:08:13,093 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7b3cbe6e
2023-04-17 21:08:13,094 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7b3cbe6e
2023-04-17 21:08:13,094 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@72b2c5ed
2023-04-17 21:08:13,095 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@72b2c5ed
2023-04-17 21:08:13,095 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@68c34db2
2023-04-17 21:08:13,095 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@68c34db2
2023-04-17 21:08:13,096 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1491cd6c
2023-04-17 21:08:13,096 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@b5d9f1e
2023-04-17 21:08:13,097 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@4607d78b
2023-04-17 21:08:13,097 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@4607d78b
2023-04-17 21:08:13,098 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@60b1ff3b
2023-04-17 21:08:13,098 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@60b1ff3b
2023-04-17 21:08:13,099 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@35c8be21
2023-04-17 21:08:13,099 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@35c8be21
2023-04-17 21:08:13,100 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6537ac
2023-04-17 21:08:13,100 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6537ac
2023-04-17 21:08:13,101 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@46cf8c07
2023-04-17 21:08:13,101 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@46cf8c07
2023-04-17 21:08:13,102 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@b01cb8d
2023-04-17 21:08:13,102 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@b01cb8d
2023-04-17 21:08:13,102 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@179ee36b
2023-04-17 21:08:13,103 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@179ee36b
2023-04-17 21:08:13,104 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@197ce367
2023-04-17 21:08:13,104 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@197ce367
2023-04-17 21:08:13,106 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@446b64b3
2023-04-17 21:08:13,106 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@446b64b3
2023-04-17 21:08:13,107 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@5e67a490
2023-04-17 21:08:13,107 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@5e67a490
2023-04-17 21:08:13,108 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@50f4b83d
2023-04-17 21:08:13,108 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@50f4b83d
2023-04-17 21:08:13,109 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10fb4575
2023-04-17 21:08:13,109 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10fb4575
2023-04-17 21:08:13,109 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10fb4575
2023-04-17 21:08:13,110 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@69feb4d9
2023-04-17 21:08:13,111 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@28b458e6
2023-04-17 21:08:13,111 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@28b458e6
2023-04-17 21:08:13,113 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@28b458e6
2023-04-17 21:08:13,113 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3a38e4dc
2023-04-17 21:08:13,114 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@448cdb47
2023-04-17 21:08:13,115 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@161d95c6
2023-04-17 21:08:13,115 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@161d95c6
2023-04-17 21:08:13,115 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@539fc5d1
2023-04-17 21:08:13,115 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@539fc5d1
2023-04-17 21:08:13,117 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@55222ee9
2023-04-17 21:08:13,117 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@55222ee9
2023-04-17 21:08:13,117 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@71369e1a
2023-04-17 21:08:13,117 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71369e1a
2023-04-17 21:08:13,117 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3719360c
2023-04-17 21:08:13,119 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3719360c
2023-04-17 21:08:13,119 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@47a3d56a
2023-04-17 21:08:13,120 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@587f4f63
2023-04-17 21:08:13,120 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@587f4f63
2023-04-17 21:08:13,120 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@587f4f63
2023-04-17 21:08:13,120 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@28e7bb31
2023-04-17 21:08:13,120 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@28e7bb31
2023-04-17 21:08:13,121 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@28e7bb31
2023-04-17 21:08:13,122 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@621624b1
2023-04-17 21:08:13,122 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@32e5af53
2023-04-17 21:08:13,123 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@27bcb4ad
2023-04-17 21:08:13,123 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@27bcb4ad
2023-04-17 21:08:13,123 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@27bcb4ad
2023-04-17 21:08:13,123 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e191150
2023-04-17 21:08:13,124 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e191150
2023-04-17 21:08:13,124 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e191150
2023-04-17 21:08:13,124 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@5323999f
2023-04-17 21:08:13,125 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@45eab322
2023-04-17 21:08:13,126 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@372954e1
2023-04-17 21:08:13,126 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@372954e1
2023-04-17 21:08:13,127 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1002d192
2023-04-17 21:08:13,130 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@1e721583
2023-04-17 21:08:13,130 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1e721583
2023-04-17 21:08:13,131 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@7d401cdc
2023-04-17 21:08:13,131 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7d401cdc
2023-04-17 21:08:13,132 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77fc19cf
2023-04-17 21:08:13,133 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3c16528d
2023-04-17 21:08:13,134 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@677cb96e
2023-04-17 21:08:13,137 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@34cd65ac
2023-04-17 21:08:13,137 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@34cd65ac
2023-04-17 21:08:13,138 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7272ee51
2023-04-17 21:08:13,138 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1b409a79
2023-04-17 21:08:13,139 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5940b14e
2023-04-17 21:08:13,139 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1cba0321
2023-04-17 21:08:13,139 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@795f6681
2023-04-17 21:08:13,139 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@66d3b881
2023-04-17 21:08:13,140 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3a45afd4
2023-04-17 21:08:13,140 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@762a10b6
2023-04-17 21:08:13,519 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1a4930cf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3fd33f48]
2023-04-17 21:08:13,868 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 21:08:13,870 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 21:08:13,871 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1a4930cf] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@183ef89a]
2023-04-17 21:08:14,430 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@183ef89a] for TypeConfiguration
2023-04-17 21:08:14,890 DEBUG com.yuripe.normalizator.security.jwt.AuthTokenFilter [main] Filter 'authenticationJwtTokenFilter' configured for use
2023-04-17 21:08:15,895 INFO com.yuripe.normalizator.NormalypApplication [main] Started NormalypApplication in 4.773 seconds (JVM running for 5.71)
2023-04-17 21:08:20,316 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 21:08:20,318 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 21:08:20,320 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 21:08:20,324 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 21:08:20,324 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 21:08:20,325 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 21:08:20,325 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 21:08:20,325 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 21:08:20,334 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-2] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 21:08:20,338 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 21:08:20,338 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2023-04-17 21:08:20,345 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 21:08:20,345 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 21:08:20,346 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 21:08:20,346 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 21:08:33,763 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 21:08:33,765 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 21:08:33,766 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 21:08:33,767 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 21:08:33,767 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 21:08:33,767 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 21:08:33,767 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 21:08:33,768 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 21:08:33,768 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 21:11:47,626 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 21:11:47,634 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 21:11:47,641 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 21:12:35,188 INFO com.yuripe.normalizator.NormalypApplication [main] Starting NormalypApplication using Java 17.0.2 on YPNB with PID 8728 (C:\Users\yurip\git\normalyp\normalyp\target\classes started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 21:12:35,193 DEBUG com.yuripe.normalizator.NormalypApplication [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 21:12:35,193 INFO com.yuripe.normalizator.NormalypApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 21:12:36,736 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1796b2d4
2023-04-17 21:12:36,736 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1796b2d4
2023-04-17 21:12:36,737 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1796b2d4
2023-04-17 21:12:36,737 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@200d1a3d
2023-04-17 21:12:36,738 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@7f42b194
2023-04-17 21:12:36,740 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@402b4f81
2023-04-17 21:12:36,741 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@e26a3df
2023-04-17 21:12:36,741 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@e26a3df
2023-04-17 21:12:36,741 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@e26a3df
2023-04-17 21:12:36,743 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@6d969330
2023-04-17 21:12:36,743 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@6d969330
2023-04-17 21:12:36,744 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6d969330
2023-04-17 21:12:36,744 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@7d66a126
2023-04-17 21:12:36,745 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@7d66a126
2023-04-17 21:12:36,745 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7d66a126
2023-04-17 21:12:36,746 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@307c59ea
2023-04-17 21:12:36,746 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@307c59ea
2023-04-17 21:12:36,746 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@307c59ea
2023-04-17 21:12:36,747 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@b8a144e
2023-04-17 21:12:36,747 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@b8a144e
2023-04-17 21:12:36,747 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@b8a144e
2023-04-17 21:12:36,748 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@7345f97d
2023-04-17 21:12:36,750 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@7345f97d
2023-04-17 21:12:36,750 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7345f97d
2023-04-17 21:12:36,751 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@591f6f83
2023-04-17 21:12:36,751 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@591f6f83
2023-04-17 21:12:36,751 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@591f6f83
2023-04-17 21:12:36,752 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6d6039df
2023-04-17 21:12:36,752 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6d6039df
2023-04-17 21:12:36,753 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1ab53860
2023-04-17 21:12:36,753 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1ab53860
2023-04-17 21:12:36,753 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@1600a8a2
2023-04-17 21:12:36,753 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1600a8a2
2023-04-17 21:12:36,753 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7b95bdb0
2023-04-17 21:12:36,754 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@423f8a73
2023-04-17 21:12:36,755 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@5844a2d1
2023-04-17 21:12:36,755 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@5844a2d1
2023-04-17 21:12:36,756 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@2e2f20b8
2023-04-17 21:12:36,756 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2e2f20b8
2023-04-17 21:12:36,757 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@3d0d120b
2023-04-17 21:12:36,757 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3d0d120b
2023-04-17 21:12:36,757 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@615b5480
2023-04-17 21:12:36,758 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@615b5480
2023-04-17 21:12:36,758 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6bb4cc0e
2023-04-17 21:12:36,758 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6bb4cc0e
2023-04-17 21:12:36,759 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@375084c9
2023-04-17 21:12:36,759 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@375084c9
2023-04-17 21:12:36,767 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e67cfe1
2023-04-17 21:12:36,767 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e67cfe1
2023-04-17 21:12:36,768 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3dc39459
2023-04-17 21:12:36,769 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3dc39459
2023-04-17 21:12:36,770 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76d0ecd7
2023-04-17 21:12:36,770 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76d0ecd7
2023-04-17 21:12:36,771 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@4df7d9ee
2023-04-17 21:12:36,771 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@4df7d9ee
2023-04-17 21:12:36,772 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@33de7f3d
2023-04-17 21:12:36,772 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@33de7f3d
2023-04-17 21:12:36,773 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@19eea77c
2023-04-17 21:12:36,773 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@19eea77c
2023-04-17 21:12:36,773 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@19eea77c
2023-04-17 21:12:36,774 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7cc2c551
2023-04-17 21:12:36,775 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@537b3b2e
2023-04-17 21:12:36,776 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@537b3b2e
2023-04-17 21:12:36,776 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@537b3b2e
2023-04-17 21:12:36,776 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@119d4443
2023-04-17 21:12:36,777 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7e0f9528
2023-04-17 21:12:36,778 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@7336fd8f
2023-04-17 21:12:36,778 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7336fd8f
2023-04-17 21:12:36,778 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@852ef8d
2023-04-17 21:12:36,779 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@852ef8d
2023-04-17 21:12:36,780 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@147e0734
2023-04-17 21:12:36,780 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@147e0734
2023-04-17 21:12:36,781 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@270d5060
2023-04-17 21:12:36,781 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@270d5060
2023-04-17 21:12:36,782 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@987a0bb
2023-04-17 21:12:36,782 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@987a0bb
2023-04-17 21:12:36,782 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3afca2c
2023-04-17 21:12:36,783 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@532dacf5
2023-04-17 21:12:36,783 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@532dacf5
2023-04-17 21:12:36,783 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@532dacf5
2023-04-17 21:12:36,784 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f4d01b6
2023-04-17 21:12:36,784 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f4d01b6
2023-04-17 21:12:36,784 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f4d01b6
2023-04-17 21:12:36,785 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@661e279d
2023-04-17 21:12:36,786 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@7523d5a1
2023-04-17 21:12:36,786 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@44641d6c
2023-04-17 21:12:36,787 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@44641d6c
2023-04-17 21:12:36,787 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@44641d6c
2023-04-17 21:12:36,788 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@26874f2c
2023-04-17 21:12:36,788 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@26874f2c
2023-04-17 21:12:36,789 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@26874f2c
2023-04-17 21:12:36,789 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@2fbd390
2023-04-17 21:12:36,790 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@f18b738
2023-04-17 21:12:36,791 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@19ae36f4
2023-04-17 21:12:36,792 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@19ae36f4
2023-04-17 21:12:36,792 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5fd8dd66
2023-04-17 21:12:36,794 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@7de35070
2023-04-17 21:12:36,794 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7de35070
2023-04-17 21:12:36,796 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@48dff674
2023-04-17 21:12:36,796 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@48dff674
2023-04-17 21:12:36,797 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4a9b3956
2023-04-17 21:12:36,798 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@643ecfef
2023-04-17 21:12:36,799 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@203b953c
2023-04-17 21:12:36,802 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@7a55fb81
2023-04-17 21:12:36,803 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7a55fb81
2023-04-17 21:12:36,804 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@61911947
2023-04-17 21:12:36,804 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5c53c235
2023-04-17 21:12:36,804 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2dcd0e41
2023-04-17 21:12:36,805 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7272ee51
2023-04-17 21:12:36,805 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1b409a79
2023-04-17 21:12:36,805 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5940b14e
2023-04-17 21:12:36,805 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1cba0321
2023-04-17 21:12:36,806 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@795f6681
2023-04-17 21:12:37,202 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7645b7d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4c50cd7d]
2023-04-17 21:12:37,573 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 21:12:37,575 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 21:12:37,576 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7645b7d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@59c862af]
2023-04-17 21:12:38,074 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@59c862af] for TypeConfiguration
2023-04-17 21:12:38,432 DEBUG com.yuripe.normalizator.security.jwt.AuthTokenFilter [main] Filter 'authenticationJwtTokenFilter' configured for use
2023-04-17 21:12:39,277 INFO com.yuripe.normalizator.NormalypApplication [main] Started NormalypApplication in 4.456 seconds (JVM running for 5.345)
2023-04-17 21:12:55,235 DEBUG org.hibernate.SQL [http-nio-8080-exec-1] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 21:12:55,237 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 21:12:55,239 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 21:12:55,245 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 21:12:55,245 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 21:12:55,246 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 21:12:55,246 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 21:12:55,246 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 21:12:55,254 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-1] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 21:12:55,261 DEBUG org.hibernate.SQL [http-nio-8080-exec-1] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 21:12:55,262 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2023-04-17 21:12:55,267 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 21:12:55,267 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 21:12:55,267 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 21:12:55,268 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 21:13:12,361 DEBUG org.hibernate.SQL [http-nio-8080-exec-1] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 21:13:12,447 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 21:13:12,507 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 21:13:12,528 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 21:13:12,550 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 21:13:12,572 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 21:13:12,592 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 21:13:12,614 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 21:13:12,635 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 21:14:15,667 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-1] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.io.FileNotFoundException: C:\Users\yurip\git\normalyp\normalyp\target\BATCH_IN_FILES (Access is denied)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at com.yuripe.core.library.services.FTPService.downloadFile(FTPService.java:76)
	at com.yuripe.normalizator.configurations.FTPServiceCustom.getFileFromSFTP(FTPServiceCustom.java:27)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:115)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$af619c76.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 21:15:08,276 DEBUG org.hibernate.SQL [http-nio-8080-exec-9] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 21:15:08,277 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 21:15:08,278 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 21:15:08,278 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 21:15:08,278 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 21:15:08,278 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 21:15:08,278 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 21:15:08,279 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 21:15:08,279 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-9] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 21:15:08,279 DEBUG org.hibernate.SQL [http-nio-8080-exec-9] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 21:15:08,279 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [BIGINT] - [1]
2023-04-17 21:15:08,280 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 21:15:08,280 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 21:15:08,280 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 21:15:08,281 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 21:15:10,763 DEBUG org.hibernate.SQL [http-nio-8080-exec-9] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 21:15:10,766 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-9] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 21:15:10,768 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 21:15:10,769 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 21:15:10,769 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 21:15:10,770 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 21:15:10,770 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 21:15:10,770 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 21:15:10,771 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-9] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 21:17:38,368 INFO com.yuripe.normalizator.NormalypApplication [main] Starting NormalypApplication using Java 17.0.2 on YPNB with PID 19016 (C:\Users\yurip\git\normalyp\normalyp\target\classes started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 21:17:38,374 DEBUG com.yuripe.normalizator.NormalypApplication [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 21:17:38,374 INFO com.yuripe.normalizator.NormalypApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 21:17:40,091 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@53feeac9
2023-04-17 21:17:40,093 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@53feeac9
2023-04-17 21:17:40,093 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@53feeac9
2023-04-17 21:17:40,094 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7c0df4ab
2023-04-17 21:17:40,094 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@17fbfb02
2023-04-17 21:17:40,095 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@24e5389c
2023-04-17 21:17:40,096 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@20216016
2023-04-17 21:17:40,097 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@20216016
2023-04-17 21:17:40,097 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@20216016
2023-04-17 21:17:40,099 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@46612bfc
2023-04-17 21:17:40,099 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@46612bfc
2023-04-17 21:17:40,099 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@46612bfc
2023-04-17 21:17:40,100 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@9263c54
2023-04-17 21:17:40,100 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@9263c54
2023-04-17 21:17:40,101 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@9263c54
2023-04-17 21:17:40,101 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@6befbb12
2023-04-17 21:17:40,101 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@6befbb12
2023-04-17 21:17:40,102 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6befbb12
2023-04-17 21:17:40,102 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@27ffd9f8
2023-04-17 21:17:40,103 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@27ffd9f8
2023-04-17 21:17:40,103 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@27ffd9f8
2023-04-17 21:17:40,103 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@55c1ced9
2023-04-17 21:17:40,103 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@55c1ced9
2023-04-17 21:17:40,104 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@55c1ced9
2023-04-17 21:17:40,105 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@1144a02b
2023-04-17 21:17:40,105 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@1144a02b
2023-04-17 21:17:40,105 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1144a02b
2023-04-17 21:17:40,106 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@35e74e08
2023-04-17 21:17:40,106 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@35e74e08
2023-04-17 21:17:40,107 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5d7f8467
2023-04-17 21:17:40,109 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5d7f8467
2023-04-17 21:17:40,110 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@2eb1c615
2023-04-17 21:17:40,110 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@2eb1c615
2023-04-17 21:17:40,110 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ae590f6
2023-04-17 21:17:40,110 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@61b838f2
2023-04-17 21:17:40,112 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@4bce62b
2023-04-17 21:17:40,112 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@4bce62b
2023-04-17 21:17:40,113 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@2a484710
2023-04-17 21:17:40,113 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2a484710
2023-04-17 21:17:40,114 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@53d30d23
2023-04-17 21:17:40,114 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@53d30d23
2023-04-17 21:17:40,114 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1510b9a2
2023-04-17 21:17:40,115 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1510b9a2
2023-04-17 21:17:40,115 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3af236d0
2023-04-17 21:17:40,116 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3af236d0
2023-04-17 21:17:40,116 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@214b342f
2023-04-17 21:17:40,116 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@214b342f
2023-04-17 21:17:40,117 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37d699a1
2023-04-17 21:17:40,117 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37d699a1
2023-04-17 21:17:40,118 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@23b1aa9
2023-04-17 21:17:40,120 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@23b1aa9
2023-04-17 21:17:40,121 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6c8f4bc7
2023-04-17 21:17:40,121 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6c8f4bc7
2023-04-17 21:17:40,122 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@20ffb8d5
2023-04-17 21:17:40,123 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@20ffb8d5
2023-04-17 21:17:40,124 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@b8a144e
2023-04-17 21:17:40,124 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@b8a144e
2023-04-17 21:17:40,126 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@554566a8
2023-04-17 21:17:40,126 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@554566a8
2023-04-17 21:17:40,126 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@554566a8
2023-04-17 21:17:40,128 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@150d6eaf
2023-04-17 21:17:40,129 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@4bf4680c
2023-04-17 21:17:40,130 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4bf4680c
2023-04-17 21:17:40,130 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4bf4680c
2023-04-17 21:17:40,130 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@177ede17
2023-04-17 21:17:40,131 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@41f785e3
2023-04-17 21:17:40,133 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@7b95bdb0
2023-04-17 21:17:40,134 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b95bdb0
2023-04-17 21:17:40,134 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@b5d9f1e
2023-04-17 21:17:40,134 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@b5d9f1e
2023-04-17 21:17:40,135 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@4607d78b
2023-04-17 21:17:40,135 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4607d78b
2023-04-17 21:17:40,137 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@60b1ff3b
2023-04-17 21:17:40,137 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@60b1ff3b
2023-04-17 21:17:40,138 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@35c8be21
2023-04-17 21:17:40,138 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@35c8be21
2023-04-17 21:17:40,139 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@615b5480
2023-04-17 21:17:40,140 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@5cc1bf20
2023-04-17 21:17:40,140 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@5cc1bf20
2023-04-17 21:17:40,140 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@5cc1bf20
2023-04-17 21:17:40,141 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@bd93bc3
2023-04-17 21:17:40,142 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@bd93bc3
2023-04-17 21:17:40,142 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@bd93bc3
2023-04-17 21:17:40,144 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@55bf35e5
2023-04-17 21:17:40,144 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@4b4a2fa8
2023-04-17 21:17:40,145 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@65036e8d
2023-04-17 21:17:40,145 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@65036e8d
2023-04-17 21:17:40,145 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@65036e8d
2023-04-17 21:17:40,146 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@26d0ece6
2023-04-17 21:17:40,146 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@26d0ece6
2023-04-17 21:17:40,146 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@26d0ece6
2023-04-17 21:17:40,147 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@57c69937
2023-04-17 21:17:40,147 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@56c0a61e
2023-04-17 21:17:40,148 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@2dac2e1b
2023-04-17 21:17:40,148 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2dac2e1b
2023-04-17 21:17:40,149 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@33de7f3d
2023-04-17 21:17:40,150 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@ac4915e
2023-04-17 21:17:40,150 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@ac4915e
2023-04-17 21:17:40,151 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@537b3b2e
2023-04-17 21:17:40,151 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@537b3b2e
2023-04-17 21:17:40,152 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@221ca495
2023-04-17 21:17:40,152 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3a38e4dc
2023-04-17 21:17:40,153 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@51424203
2023-04-17 21:17:40,156 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@4f64d9cb
2023-04-17 21:17:40,156 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4f64d9cb
2023-04-17 21:17:40,156 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@71567f33
2023-04-17 21:17:40,157 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@71369e1a
2023-04-17 21:17:40,157 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3cf55e0c
2023-04-17 21:17:40,158 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@ee96866
2023-04-17 21:17:40,158 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4c04216f
2023-04-17 21:17:40,158 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@987a0bb
2023-04-17 21:17:40,158 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1f949ab9
2023-04-17 21:17:40,158 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5a7b6b75
2023-04-17 21:17:40,558 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@64420e34] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@667a467f]
2023-04-17 21:17:40,929 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 21:17:40,930 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 21:17:40,931 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@64420e34] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@54f25b42]
2023-04-17 21:17:41,450 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@54f25b42] for TypeConfiguration
2023-04-17 21:17:41,799 DEBUG com.yuripe.normalizator.security.jwt.AuthTokenFilter [main] Filter 'authenticationJwtTokenFilter' configured for use
2023-04-17 21:17:42,716 INFO com.yuripe.normalizator.NormalypApplication [main] Started NormalypApplication in 4.7 seconds (JVM running for 5.634)
2023-04-17 21:17:47,954 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 21:17:47,956 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 21:17:47,961 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 21:17:47,965 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 21:17:47,965 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 21:17:47,966 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 21:17:47,966 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 21:17:47,966 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 21:17:47,980 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-2] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 21:17:47,986 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 21:17:47,987 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [BIGINT] - [1]
2023-04-17 21:17:47,995 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 21:17:47,996 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 21:17:47,996 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 21:17:47,996 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 21:18:00,053 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 21:18:00,056 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 21:18:00,057 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 21:18:00,058 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 21:18:00,058 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 21:18:00,059 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 21:18:00,059 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 21:18:00,059 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 21:18:00,060 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 21:18:25,375 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-2] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.io.FileNotFoundException: C:\Users\yurip\git\normalyp\normalyp\target (Access is denied)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at com.yuripe.core.library.services.FTPService.downloadFile(FTPService.java:76)
	at com.yuripe.normalizator.configurations.FTPServiceCustom.getFileFromSFTP(FTPServiceCustom.java:27)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:115)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$a2226568.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 21:22:03,497 DEBUG org.hibernate.SQL [http-nio-8080-exec-1] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 21:22:03,498 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 21:22:03,500 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 21:22:03,500 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 21:22:03,501 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 21:22:03,501 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 21:22:03,501 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 21:22:03,502 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 21:22:03,502 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-1] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 21:22:03,503 DEBUG org.hibernate.SQL [http-nio-8080-exec-1] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 21:22:03,503 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2023-04-17 21:22:03,505 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 21:22:03,506 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 21:22:03,506 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 21:22:03,507 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 21:22:06,499 DEBUG org.hibernate.SQL [http-nio-8080-exec-1] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 21:22:06,504 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 21:22:06,508 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 21:22:06,509 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 21:22:06,509 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 21:22:06,509 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 21:22:06,510 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 21:22:06,510 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 21:22:06,510 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 21:22:08,600 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-1] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.io.FileNotFoundException: C:\Users\yurip\git\normalyp\normalyp\target (Access is denied)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at com.yuripe.core.library.services.FTPService.downloadFile(FTPService.java:76)
	at com.yuripe.normalizator.configurations.FTPServiceCustom.getFileFromSFTP(FTPServiceCustom.java:27)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:115)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$a2226568.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 21:25:23,255 INFO com.yuripe.normalizator.NormalypApplication [main] Starting NormalypApplication using Java 17.0.2 on YPNB with PID 14208 (C:\Users\yurip\git\normalyp\normalyp\target\classes started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 21:25:23,260 DEBUG com.yuripe.normalizator.NormalypApplication [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 21:25:23,261 INFO com.yuripe.normalizator.NormalypApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 21:25:24,816 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@23564dd2
2023-04-17 21:25:24,816 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@23564dd2
2023-04-17 21:25:24,817 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@23564dd2
2023-04-17 21:25:24,817 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@214b342f
2023-04-17 21:25:24,819 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@200d1a3d
2023-04-17 21:25:24,820 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@7f42b194
2023-04-17 21:25:24,821 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@4e8598d9
2023-04-17 21:25:24,821 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@4e8598d9
2023-04-17 21:25:24,821 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4e8598d9
2023-04-17 21:25:24,822 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@2094bf3d
2023-04-17 21:25:24,822 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@2094bf3d
2023-04-17 21:25:24,822 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2094bf3d
2023-04-17 21:25:24,823 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@714e861f
2023-04-17 21:25:24,823 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@714e861f
2023-04-17 21:25:24,823 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@714e861f
2023-04-17 21:25:24,824 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@3a2546d6
2023-04-17 21:25:24,824 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@3a2546d6
2023-04-17 21:25:24,824 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3a2546d6
2023-04-17 21:25:24,825 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@733f1395
2023-04-17 21:25:24,825 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@733f1395
2023-04-17 21:25:24,825 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@733f1395
2023-04-17 21:25:24,826 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@2ee92e7d
2023-04-17 21:25:24,826 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@2ee92e7d
2023-04-17 21:25:24,826 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ee92e7d
2023-04-17 21:25:24,827 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@3751acd7
2023-04-17 21:25:24,827 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@3751acd7
2023-04-17 21:25:24,828 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3751acd7
2023-04-17 21:25:24,829 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@24a04257
2023-04-17 21:25:24,829 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@24a04257
2023-04-17 21:25:24,830 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7b3cbe6e
2023-04-17 21:25:24,830 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7b3cbe6e
2023-04-17 21:25:24,831 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@72b2c5ed
2023-04-17 21:25:24,831 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@72b2c5ed
2023-04-17 21:25:24,831 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1600a8a2
2023-04-17 21:25:24,832 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7b95bdb0
2023-04-17 21:25:24,832 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@b5d9f1e
2023-04-17 21:25:24,832 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@b5d9f1e
2023-04-17 21:25:24,833 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@4607d78b
2023-04-17 21:25:24,833 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4607d78b
2023-04-17 21:25:24,834 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@60b1ff3b
2023-04-17 21:25:24,834 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@60b1ff3b
2023-04-17 21:25:24,835 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@35c8be21
2023-04-17 21:25:24,835 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@35c8be21
2023-04-17 21:25:24,835 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6537ac
2023-04-17 21:25:24,836 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6537ac
2023-04-17 21:25:24,836 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@46cf8c07
2023-04-17 21:25:24,836 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@46cf8c07
2023-04-17 21:25:24,837 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b01cb8d
2023-04-17 21:25:24,837 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b01cb8d
2023-04-17 21:25:24,838 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@179ee36b
2023-04-17 21:25:24,838 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@179ee36b
2023-04-17 21:25:24,839 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@25533bba
2023-04-17 21:25:24,839 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@25533bba
2023-04-17 21:25:24,841 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@5dcf0772
2023-04-17 21:25:24,841 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@5dcf0772
2023-04-17 21:25:24,842 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@2dac2e1b
2023-04-17 21:25:24,842 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2dac2e1b
2023-04-17 21:25:24,843 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10131289
2023-04-17 21:25:24,843 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10131289
2023-04-17 21:25:24,843 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10131289
2023-04-17 21:25:24,844 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@19eea77c
2023-04-17 21:25:24,846 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@37c1cfa
2023-04-17 21:25:24,846 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@37c1cfa
2023-04-17 21:25:24,847 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@37c1cfa
2023-04-17 21:25:24,847 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1544ded3
2023-04-17 21:25:24,848 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3a38e4dc
2023-04-17 21:25:24,848 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@448cdb47
2023-04-17 21:25:24,850 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@448cdb47
2023-04-17 21:25:24,850 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@161d95c6
2023-04-17 21:25:24,851 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@161d95c6
2023-04-17 21:25:24,852 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@539fc5d1
2023-04-17 21:25:24,852 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@539fc5d1
2023-04-17 21:25:24,853 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@55222ee9
2023-04-17 21:25:24,853 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@55222ee9
2023-04-17 21:25:24,854 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@71369e1a
2023-04-17 21:25:24,854 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@71369e1a
2023-04-17 21:25:24,855 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@987a0bb
2023-04-17 21:25:24,856 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@3a209918
2023-04-17 21:25:24,856 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@3a209918
2023-04-17 21:25:24,856 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@3a209918
2023-04-17 21:25:24,857 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@587f4f63
2023-04-17 21:25:24,857 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@587f4f63
2023-04-17 21:25:24,858 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@587f4f63
2023-04-17 21:25:24,858 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@28e7bb31
2023-04-17 21:25:24,859 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@661e279d
2023-04-17 21:25:24,859 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@32e5af53
2023-04-17 21:25:24,860 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@32e5af53
2023-04-17 21:25:24,860 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@32e5af53
2023-04-17 21:25:24,860 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@27bcb4ad
2023-04-17 21:25:24,862 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@27bcb4ad
2023-04-17 21:25:24,862 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@27bcb4ad
2023-04-17 21:25:24,863 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@26874f2c
2023-04-17 21:25:24,863 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@2fbd390
2023-04-17 21:25:24,864 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@7f51f588
2023-04-17 21:25:24,864 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7f51f588
2023-04-17 21:25:24,864 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@19ae36f4
2023-04-17 21:25:24,865 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@53cddaf8
2023-04-17 21:25:24,865 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@53cddaf8
2023-04-17 21:25:24,866 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@edb83f8
2023-04-17 21:25:24,867 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@edb83f8
2023-04-17 21:25:24,867 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@48dff674
2023-04-17 21:25:24,868 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4a9b3956
2023-04-17 21:25:24,870 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@bb8ead8
2023-04-17 21:25:24,872 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@6060146b
2023-04-17 21:25:24,872 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6060146b
2023-04-17 21:25:24,872 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7a55fb81
2023-04-17 21:25:24,872 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5a3cf878
2023-04-17 21:25:24,873 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1d2d8846
2023-04-17 21:25:24,873 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@34cd65ac
2023-04-17 21:25:24,873 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@61911947
2023-04-17 21:25:24,873 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5c53c235
2023-04-17 21:25:24,873 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2dcd0e41
2023-04-17 21:25:24,874 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7272ee51
2023-04-17 21:25:25,251 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1a43a88e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@51f34185]
2023-04-17 21:25:25,589 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 21:25:25,591 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 21:25:25,591 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1a43a88e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@50b38342]
2023-04-17 21:25:26,102 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@50b38342] for TypeConfiguration
2023-04-17 21:25:26,451 DEBUG com.yuripe.normalizator.security.jwt.AuthTokenFilter [main] Filter 'authenticationJwtTokenFilter' configured for use
2023-04-17 21:25:27,249 INFO com.yuripe.normalizator.NormalypApplication [main] Started NormalypApplication in 4.364 seconds (JVM running for 5.468)
2023-04-17 21:25:28,652 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 21:25:28,654 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 21:25:28,657 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 21:25:28,661 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 21:25:28,661 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 21:25:28,662 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 21:25:28,663 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 21:25:28,663 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 21:25:28,674 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-4] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 21:25:28,680 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 21:25:28,681 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2023-04-17 21:25:28,686 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 21:25:28,686 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 21:25:28,687 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 21:25:28,687 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 21:25:28,742 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 21:25:28,743 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 21:25:28,745 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 21:25:28,746 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 21:25:28,746 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 21:25:28,746 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 21:25:28,747 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 21:25:28,747 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 21:25:28,747 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 21:25:51,272 DEBUG org.hibernate.SQL [http-nio-8080-exec-8] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 21:25:51,273 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 21:25:51,274 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 21:25:51,275 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 21:25:51,275 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 21:25:51,275 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 21:25:51,275 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 21:25:51,275 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 21:25:51,276 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-8] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 21:25:51,276 DEBUG org.hibernate.SQL [http-nio-8080-exec-8] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 21:25:51,277 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2023-04-17 21:25:51,278 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 21:25:51,279 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 21:25:51,279 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 21:25:51,279 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 21:25:57,532 DEBUG org.hibernate.SQL [http-nio-8080-exec-8] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 21:25:57,536 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 21:25:57,539 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 21:25:57,540 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 21:25:57,540 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 21:25:57,541 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 21:25:57,541 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 21:25:57,542 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 21:25:57,542 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 21:30:04,393 INFO com.yuripe.normalizator.NormalypApplication [main] Starting NormalypApplication using Java 17.0.2 on YPNB with PID 20436 (C:\Users\yurip\git\normalyp\normalyp\target\classes started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 21:30:04,399 DEBUG com.yuripe.normalizator.NormalypApplication [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 21:30:04,400 INFO com.yuripe.normalizator.NormalypApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 21:30:05,977 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1796b2d4
2023-04-17 21:30:05,978 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1796b2d4
2023-04-17 21:30:05,978 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1796b2d4
2023-04-17 21:30:05,979 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@200d1a3d
2023-04-17 21:30:05,980 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@7f42b194
2023-04-17 21:30:05,981 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@402b4f81
2023-04-17 21:30:05,981 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@e26a3df
2023-04-17 21:30:05,982 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@e26a3df
2023-04-17 21:30:05,982 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@e26a3df
2023-04-17 21:30:05,983 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@6d969330
2023-04-17 21:30:05,983 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@6d969330
2023-04-17 21:30:05,984 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6d969330
2023-04-17 21:30:05,985 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@7d66a126
2023-04-17 21:30:05,985 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@7d66a126
2023-04-17 21:30:05,985 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7d66a126
2023-04-17 21:30:05,993 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@307c59ea
2023-04-17 21:30:05,993 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@307c59ea
2023-04-17 21:30:05,993 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@307c59ea
2023-04-17 21:30:05,994 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@b8a144e
2023-04-17 21:30:05,994 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@b8a144e
2023-04-17 21:30:05,995 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@b8a144e
2023-04-17 21:30:05,995 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@7345f97d
2023-04-17 21:30:05,996 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@7345f97d
2023-04-17 21:30:05,996 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7345f97d
2023-04-17 21:30:05,996 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@591f6f83
2023-04-17 21:30:05,996 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@591f6f83
2023-04-17 21:30:05,997 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@591f6f83
2023-04-17 21:30:05,997 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6d6039df
2023-04-17 21:30:05,997 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6d6039df
2023-04-17 21:30:05,998 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1ab53860
2023-04-17 21:30:05,998 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1ab53860
2023-04-17 21:30:05,999 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@1600a8a2
2023-04-17 21:30:05,999 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1600a8a2
2023-04-17 21:30:06,000 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7b95bdb0
2023-04-17 21:30:06,000 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@423f8a73
2023-04-17 21:30:06,001 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@5844a2d1
2023-04-17 21:30:06,001 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@5844a2d1
2023-04-17 21:30:06,002 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@2e2f20b8
2023-04-17 21:30:06,002 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2e2f20b8
2023-04-17 21:30:06,003 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@3d0d120b
2023-04-17 21:30:06,003 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3d0d120b
2023-04-17 21:30:06,004 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@615b5480
2023-04-17 21:30:06,004 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@615b5480
2023-04-17 21:30:06,005 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6bb4cc0e
2023-04-17 21:30:06,005 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6bb4cc0e
2023-04-17 21:30:06,005 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@375084c9
2023-04-17 21:30:06,006 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@375084c9
2023-04-17 21:30:06,006 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e67cfe1
2023-04-17 21:30:06,007 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e67cfe1
2023-04-17 21:30:06,008 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3dc39459
2023-04-17 21:30:06,008 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3dc39459
2023-04-17 21:30:06,009 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76d0ecd7
2023-04-17 21:30:06,009 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76d0ecd7
2023-04-17 21:30:06,011 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@4df7d9ee
2023-04-17 21:30:06,011 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@4df7d9ee
2023-04-17 21:30:06,012 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@33de7f3d
2023-04-17 21:30:06,012 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@33de7f3d
2023-04-17 21:30:06,013 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@19eea77c
2023-04-17 21:30:06,013 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@19eea77c
2023-04-17 21:30:06,013 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@19eea77c
2023-04-17 21:30:06,015 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7cc2c551
2023-04-17 21:30:06,016 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@537b3b2e
2023-04-17 21:30:06,016 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@537b3b2e
2023-04-17 21:30:06,016 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@537b3b2e
2023-04-17 21:30:06,017 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@119d4443
2023-04-17 21:30:06,017 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7e0f9528
2023-04-17 21:30:06,018 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@7336fd8f
2023-04-17 21:30:06,018 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7336fd8f
2023-04-17 21:30:06,019 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@852ef8d
2023-04-17 21:30:06,019 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@852ef8d
2023-04-17 21:30:06,020 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@147e0734
2023-04-17 21:30:06,020 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@147e0734
2023-04-17 21:30:06,021 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@270d5060
2023-04-17 21:30:06,021 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@270d5060
2023-04-17 21:30:06,021 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@987a0bb
2023-04-17 21:30:06,021 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@987a0bb
2023-04-17 21:30:06,022 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3afca2c
2023-04-17 21:30:06,023 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@532dacf5
2023-04-17 21:30:06,023 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@532dacf5
2023-04-17 21:30:06,023 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@532dacf5
2023-04-17 21:30:06,024 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f4d01b6
2023-04-17 21:30:06,024 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f4d01b6
2023-04-17 21:30:06,024 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f4d01b6
2023-04-17 21:30:06,025 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@661e279d
2023-04-17 21:30:06,025 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@7523d5a1
2023-04-17 21:30:06,026 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@44641d6c
2023-04-17 21:30:06,026 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@44641d6c
2023-04-17 21:30:06,026 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@44641d6c
2023-04-17 21:30:06,027 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@26874f2c
2023-04-17 21:30:06,027 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@26874f2c
2023-04-17 21:30:06,028 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@26874f2c
2023-04-17 21:30:06,028 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@2fbd390
2023-04-17 21:30:06,028 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@f18b738
2023-04-17 21:30:06,030 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@19ae36f4
2023-04-17 21:30:06,030 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@19ae36f4
2023-04-17 21:30:06,030 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5fd8dd66
2023-04-17 21:30:06,031 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@7de35070
2023-04-17 21:30:06,031 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7de35070
2023-04-17 21:30:06,032 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@48dff674
2023-04-17 21:30:06,032 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@48dff674
2023-04-17 21:30:06,033 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4a9b3956
2023-04-17 21:30:06,033 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@643ecfef
2023-04-17 21:30:06,034 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@203b953c
2023-04-17 21:30:06,036 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@7a55fb81
2023-04-17 21:30:06,037 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7a55fb81
2023-04-17 21:30:06,037 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@61911947
2023-04-17 21:30:06,037 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5c53c235
2023-04-17 21:30:06,037 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2dcd0e41
2023-04-17 21:30:06,037 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7272ee51
2023-04-17 21:30:06,039 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1b409a79
2023-04-17 21:30:06,039 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5940b14e
2023-04-17 21:30:06,039 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1cba0321
2023-04-17 21:30:06,039 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@795f6681
2023-04-17 21:30:06,396 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7645b7d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4c50cd7d]
2023-04-17 21:30:06,749 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 21:30:06,750 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 21:30:06,751 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7645b7d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@59c862af]
2023-04-17 21:30:07,292 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@59c862af] for TypeConfiguration
2023-04-17 21:30:07,703 DEBUG com.yuripe.normalizator.security.jwt.AuthTokenFilter [main] Filter 'authenticationJwtTokenFilter' configured for use
2023-04-17 21:30:08,629 INFO com.yuripe.normalizator.NormalypApplication [main] Started NormalypApplication in 4.591 seconds (JVM running for 5.576)
2023-04-17 21:30:10,049 DEBUG org.hibernate.SQL [http-nio-8080-exec-1] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 21:30:10,051 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 21:30:10,054 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 21:30:10,057 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 21:30:10,057 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 21:30:10,058 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 21:30:10,058 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 21:30:10,059 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 21:30:10,071 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-1] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 21:30:10,077 DEBUG org.hibernate.SQL [http-nio-8080-exec-1] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 21:30:10,078 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [BIGINT] - [1]
2023-04-17 21:30:10,083 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 21:30:10,084 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 21:30:10,085 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 21:30:10,085 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 21:30:12,441 DEBUG org.hibernate.SQL [http-nio-8080-exec-1] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 21:30:12,443 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 21:30:12,446 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 21:30:12,446 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 21:30:12,447 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 21:30:12,447 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 21:30:12,447 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 21:30:12,448 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 21:30:12,448 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 21:30:18,986 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-1] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.io.FileNotFoundException: ..\C:\Users\yurip\git\normalyp\normalyp\target\BATCH_IN_FILES (The filename, directory name, or volume label syntax is incorrect)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at com.yuripe.core.library.services.FTPService.downloadFile(FTPService.java:76)
	at com.yuripe.normalizator.configurations.FTPServiceCustom.getFileFromSFTP(FTPServiceCustom.java:27)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:115)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$e6025281.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 21:31:54,300 INFO com.yuripe.normalizator.NormalypApplication [main] Starting NormalypApplication using Java 17.0.2 on YPNB with PID 18488 (C:\Users\yurip\git\normalyp\normalyp\target\classes started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 21:31:54,308 DEBUG com.yuripe.normalizator.NormalypApplication [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 21:31:54,309 INFO com.yuripe.normalizator.NormalypApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 21:31:55,972 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@214b342f
2023-04-17 21:31:55,973 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@214b342f
2023-04-17 21:31:55,974 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@214b342f
2023-04-17 21:31:55,974 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@12567179
2023-04-17 21:31:55,976 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@29170a47
2023-04-17 21:31:55,976 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@23b1aa9
2023-04-17 21:31:55,977 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@712cd5d3
2023-04-17 21:31:55,985 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@712cd5d3
2023-04-17 21:31:55,986 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@712cd5d3
2023-04-17 21:31:55,987 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@6c8f4bc7
2023-04-17 21:31:55,988 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@6c8f4bc7
2023-04-17 21:31:55,988 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6c8f4bc7
2023-04-17 21:31:55,989 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@2fdf22f7
2023-04-17 21:31:55,989 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@2fdf22f7
2023-04-17 21:31:55,990 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2fdf22f7
2023-04-17 21:31:55,991 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@2edb2f8b
2023-04-17 21:31:55,991 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@2edb2f8b
2023-04-17 21:31:55,991 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2edb2f8b
2023-04-17 21:31:55,992 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@3e38c472
2023-04-17 21:31:55,992 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@3e38c472
2023-04-17 21:31:55,992 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e38c472
2023-04-17 21:31:55,993 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@66020d69
2023-04-17 21:31:55,993 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@66020d69
2023-04-17 21:31:55,993 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@66020d69
2023-04-17 21:31:55,994 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@55421b8d
2023-04-17 21:31:55,994 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@55421b8d
2023-04-17 21:31:55,994 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@55421b8d
2023-04-17 21:31:55,995 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@13e00016
2023-04-17 21:31:55,995 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@13e00016
2023-04-17 21:31:55,996 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@57b9389f
2023-04-17 21:31:55,996 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@57b9389f
2023-04-17 21:31:55,997 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@56b1e527
2023-04-17 21:31:55,997 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@56b1e527
2023-04-17 21:31:55,998 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@664db2ca
2023-04-17 21:31:55,998 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@113dcaf8
2023-04-17 21:31:55,999 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@4af7dd6a
2023-04-17 21:31:55,999 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@4af7dd6a
2023-04-17 21:31:56,000 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@5618fc1f
2023-04-17 21:31:56,000 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5618fc1f
2023-04-17 21:31:56,001 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@34d9df9f
2023-04-17 21:31:56,001 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@34d9df9f
2023-04-17 21:31:56,001 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7b91d9f
2023-04-17 21:31:56,002 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7b91d9f
2023-04-17 21:31:56,002 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2e3f324e
2023-04-17 21:31:56,002 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2e3f324e
2023-04-17 21:31:56,003 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2a136383
2023-04-17 21:31:56,003 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2a136383
2023-04-17 21:31:56,004 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@25567581
2023-04-17 21:31:56,004 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@25567581
2023-04-17 21:31:56,005 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@71bb8b34
2023-04-17 21:31:56,006 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@71bb8b34
2023-04-17 21:31:56,007 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1ad1c363
2023-04-17 21:31:56,007 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1ad1c363
2023-04-17 21:31:56,008 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@3a4e524
2023-04-17 21:31:56,008 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@3a4e524
2023-04-17 21:31:56,009 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@5d66ae3a
2023-04-17 21:31:56,009 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d66ae3a
2023-04-17 21:31:56,010 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@ac4915e
2023-04-17 21:31:56,010 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@ac4915e
2023-04-17 21:31:56,010 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@ac4915e
2023-04-17 21:31:56,012 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@23648d2d
2023-04-17 21:31:56,013 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@3ccb12d
2023-04-17 21:31:56,013 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ccb12d
2023-04-17 21:31:56,013 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ccb12d
2023-04-17 21:31:56,014 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7d47dfed
2023-04-17 21:31:56,015 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@237b2852
2023-04-17 21:31:56,015 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@550c973e
2023-04-17 21:31:56,016 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@550c973e
2023-04-17 21:31:56,016 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@7e94e331
2023-04-17 21:31:56,016 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7e94e331
2023-04-17 21:31:56,017 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@7b8aebd0
2023-04-17 21:31:56,017 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7b8aebd0
2023-04-17 21:31:56,018 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@71567f33
2023-04-17 21:31:56,018 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71567f33
2023-04-17 21:31:56,019 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5a7b6b75
2023-04-17 21:31:56,019 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5a7b6b75
2023-04-17 21:31:56,020 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39f42d0e
2023-04-17 21:31:56,021 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@6d31f106
2023-04-17 21:31:56,021 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@6d31f106
2023-04-17 21:31:56,021 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@6d31f106
2023-04-17 21:31:56,022 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7f426ddd
2023-04-17 21:31:56,022 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7f426ddd
2023-04-17 21:31:56,022 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7f426ddd
2023-04-17 21:31:56,023 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@38de5daf
2023-04-17 21:31:56,023 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@61853c7e
2023-04-17 21:31:56,024 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@59d5a6fd
2023-04-17 21:31:56,024 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@59d5a6fd
2023-04-17 21:31:56,024 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@59d5a6fd
2023-04-17 21:31:56,024 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e734eee
2023-04-17 21:31:56,024 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e734eee
2023-04-17 21:31:56,024 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e734eee
2023-04-17 21:31:56,025 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@5e68be2
2023-04-17 21:31:56,026 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@aca3c85
2023-04-17 21:31:56,027 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@4567fb2b
2023-04-17 21:31:56,027 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4567fb2b
2023-04-17 21:31:56,028 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6df11e91
2023-04-17 21:31:56,029 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@7c901203
2023-04-17 21:31:56,030 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7c901203
2023-04-17 21:31:56,031 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@2ccc9681
2023-04-17 21:31:56,031 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2ccc9681
2023-04-17 21:31:56,032 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@aa752bb
2023-04-17 21:31:56,033 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2bb31455
2023-04-17 21:31:56,034 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@41a16eb3
2023-04-17 21:31:56,036 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@1d2d8846
2023-04-17 21:31:56,036 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1d2d8846
2023-04-17 21:31:56,036 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2dcd0e41
2023-04-17 21:31:56,036 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7272ee51
2023-04-17 21:31:56,037 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1b409a79
2023-04-17 21:31:56,037 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5940b14e
2023-04-17 21:31:56,037 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1cba0321
2023-04-17 21:31:56,037 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@795f6681
2023-04-17 21:31:56,037 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@66d3b881
2023-04-17 21:31:56,038 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3a45afd4
2023-04-17 21:31:56,401 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3ea84e01] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1a4930cf]
2023-04-17 21:31:56,745 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 21:31:56,746 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 21:31:56,747 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3ea84e01] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@673a9db4]
2023-04-17 21:31:57,242 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@673a9db4] for TypeConfiguration
2023-04-17 21:31:57,607 DEBUG com.yuripe.normalizator.security.jwt.AuthTokenFilter [main] Filter 'authenticationJwtTokenFilter' configured for use
2023-04-17 21:31:58,494 INFO com.yuripe.normalizator.NormalypApplication [main] Started NormalypApplication in 4.594 seconds (JVM running for 5.552)
2023-04-17 21:31:59,973 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 21:31:59,975 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 21:31:59,978 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 21:31:59,981 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 21:31:59,981 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 21:31:59,982 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 21:31:59,984 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 21:31:59,986 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 21:31:59,997 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-4] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 21:32:00,001 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 21:32:00,002 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2023-04-17 21:32:00,011 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 21:32:00,011 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 21:32:00,012 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 21:32:00,012 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 21:33:37,097 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 21:33:37,107 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 21:33:37,113 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 21:33:37,117 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 21:33:37,119 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 21:33:37,120 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 21:33:37,121 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 21:33:37,123 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 21:33:37,124 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 21:34:08,317 DEBUG org.hibernate.SQL [http-nio-8080-exec-8] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 21:34:08,318 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 21:34:08,319 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 21:34:08,320 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 21:34:08,320 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 21:34:08,320 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 21:34:08,320 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 21:34:08,320 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 21:34:08,321 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-8] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 21:34:08,321 DEBUG org.hibernate.SQL [http-nio-8080-exec-8] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 21:34:08,321 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [BIGINT] - [1]
2023-04-17 21:34:08,322 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 21:34:08,322 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 21:34:08,323 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 21:34:08,323 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 21:34:11,055 DEBUG org.hibernate.SQL [http-nio-8080-exec-8] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 21:34:11,059 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-8] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 21:34:11,062 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 21:34:11,063 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 21:34:11,063 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 21:34:11,064 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 21:34:11,064 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 21:34:11,064 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 21:34:11,064 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-8] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 21:34:42,357 INFO com.yuripe.normalizator.NormalypApplication [main] Starting NormalypApplication using Java 17.0.2 on YPNB with PID 10104 (C:\Users\yurip\git\normalyp\normalyp\target\classes started by yurip in C:\Users\yurip\git\normalyp\normalyp)
2023-04-17 21:34:42,360 DEBUG com.yuripe.normalizator.NormalypApplication [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-04-17 21:34:42,361 INFO com.yuripe.normalizator.NormalypApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-04-17 21:34:44,021 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@214b342f
2023-04-17 21:34:44,022 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@214b342f
2023-04-17 21:34:44,022 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@214b342f
2023-04-17 21:34:44,023 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@12567179
2023-04-17 21:34:44,024 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@29170a47
2023-04-17 21:34:44,025 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@23b1aa9
2023-04-17 21:34:44,026 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@712cd5d3
2023-04-17 21:34:44,026 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@712cd5d3
2023-04-17 21:34:44,026 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@712cd5d3
2023-04-17 21:34:44,028 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@6c8f4bc7
2023-04-17 21:34:44,028 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@6c8f4bc7
2023-04-17 21:34:44,028 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6c8f4bc7
2023-04-17 21:34:44,029 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@2fdf22f7
2023-04-17 21:34:44,029 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@2fdf22f7
2023-04-17 21:34:44,029 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2fdf22f7
2023-04-17 21:34:44,030 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@2edb2f8b
2023-04-17 21:34:44,031 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@2edb2f8b
2023-04-17 21:34:44,031 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2edb2f8b
2023-04-17 21:34:44,031 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@3e38c472
2023-04-17 21:34:44,031 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@3e38c472
2023-04-17 21:34:44,032 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e38c472
2023-04-17 21:34:44,033 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@66020d69
2023-04-17 21:34:44,033 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@66020d69
2023-04-17 21:34:44,033 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@66020d69
2023-04-17 21:34:44,034 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@55421b8d
2023-04-17 21:34:44,034 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@55421b8d
2023-04-17 21:34:44,034 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@55421b8d
2023-04-17 21:34:44,035 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@13e00016
2023-04-17 21:34:44,035 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@13e00016
2023-04-17 21:34:44,036 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@57b9389f
2023-04-17 21:34:44,036 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@57b9389f
2023-04-17 21:34:44,037 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@56b1e527
2023-04-17 21:34:44,037 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@56b1e527
2023-04-17 21:34:44,037 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@664db2ca
2023-04-17 21:34:44,037 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@113dcaf8
2023-04-17 21:34:44,039 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@4af7dd6a
2023-04-17 21:34:44,039 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@4af7dd6a
2023-04-17 21:34:44,040 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@5618fc1f
2023-04-17 21:34:44,040 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5618fc1f
2023-04-17 21:34:44,041 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@34d9df9f
2023-04-17 21:34:44,041 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@34d9df9f
2023-04-17 21:34:44,042 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7b91d9f
2023-04-17 21:34:44,042 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7b91d9f
2023-04-17 21:34:44,043 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2e3f324e
2023-04-17 21:34:44,043 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2e3f324e
2023-04-17 21:34:44,044 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2a136383
2023-04-17 21:34:44,044 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2a136383
2023-04-17 21:34:44,045 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@25567581
2023-04-17 21:34:44,046 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@25567581
2023-04-17 21:34:44,047 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@71bb8b34
2023-04-17 21:34:44,047 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@71bb8b34
2023-04-17 21:34:44,048 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1ad1c363
2023-04-17 21:34:44,049 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1ad1c363
2023-04-17 21:34:44,050 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@3a4e524
2023-04-17 21:34:44,050 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@3a4e524
2023-04-17 21:34:44,051 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@5d66ae3a
2023-04-17 21:34:44,051 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d66ae3a
2023-04-17 21:34:44,052 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@ac4915e
2023-04-17 21:34:44,052 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@ac4915e
2023-04-17 21:34:44,052 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@ac4915e
2023-04-17 21:34:44,054 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@23648d2d
2023-04-17 21:34:44,055 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@3ccb12d
2023-04-17 21:34:44,055 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ccb12d
2023-04-17 21:34:44,055 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ccb12d
2023-04-17 21:34:44,056 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7d47dfed
2023-04-17 21:34:44,057 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@237b2852
2023-04-17 21:34:44,058 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@550c973e
2023-04-17 21:34:44,058 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@550c973e
2023-04-17 21:34:44,058 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@7e94e331
2023-04-17 21:34:44,058 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7e94e331
2023-04-17 21:34:44,059 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@7b8aebd0
2023-04-17 21:34:44,059 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7b8aebd0
2023-04-17 21:34:44,060 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@71567f33
2023-04-17 21:34:44,061 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71567f33
2023-04-17 21:34:44,061 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5a7b6b75
2023-04-17 21:34:44,061 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5a7b6b75
2023-04-17 21:34:44,062 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39f42d0e
2023-04-17 21:34:44,063 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@6d31f106
2023-04-17 21:34:44,063 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@6d31f106
2023-04-17 21:34:44,063 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@6d31f106
2023-04-17 21:34:44,064 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7f426ddd
2023-04-17 21:34:44,064 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7f426ddd
2023-04-17 21:34:44,064 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7f426ddd
2023-04-17 21:34:44,065 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@38de5daf
2023-04-17 21:34:44,066 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@61853c7e
2023-04-17 21:34:44,066 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@59d5a6fd
2023-04-17 21:34:44,066 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@59d5a6fd
2023-04-17 21:34:44,066 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@59d5a6fd
2023-04-17 21:34:44,067 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e734eee
2023-04-17 21:34:44,067 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e734eee
2023-04-17 21:34:44,067 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e734eee
2023-04-17 21:34:44,068 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@5e68be2
2023-04-17 21:34:44,068 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@aca3c85
2023-04-17 21:34:44,069 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@4567fb2b
2023-04-17 21:34:44,069 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4567fb2b
2023-04-17 21:34:44,070 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6df11e91
2023-04-17 21:34:44,071 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@7c901203
2023-04-17 21:34:44,072 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7c901203
2023-04-17 21:34:44,073 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@2ccc9681
2023-04-17 21:34:44,073 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2ccc9681
2023-04-17 21:34:44,073 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@aa752bb
2023-04-17 21:34:44,074 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2bb31455
2023-04-17 21:34:44,075 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@41a16eb3
2023-04-17 21:34:44,077 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@1d2d8846
2023-04-17 21:34:44,078 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1d2d8846
2023-04-17 21:34:44,078 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2dcd0e41
2023-04-17 21:34:44,078 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7272ee51
2023-04-17 21:34:44,079 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1b409a79
2023-04-17 21:34:44,079 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5940b14e
2023-04-17 21:34:44,079 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1cba0321
2023-04-17 21:34:44,079 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@795f6681
2023-04-17 21:34:44,079 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@66d3b881
2023-04-17 21:34:44,080 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3a45afd4
2023-04-17 21:34:44,459 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3ea84e01] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1a4930cf]
2023-04-17 21:34:44,815 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.EVehicleType
2023-04-17 21:34:44,816 DEBUG org.hibernate.type.EnumType [main] Using NAMED-based conversion for Enum com.yuripe.normalizator.models.ERole
2023-04-17 21:34:44,816 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3ea84e01] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@673a9db4]
2023-04-17 21:34:45,347 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@673a9db4] for TypeConfiguration
2023-04-17 21:34:45,676 DEBUG com.yuripe.normalizator.security.jwt.AuthTokenFilter [main] Filter 'authenticationJwtTokenFilter' configured for use
2023-04-17 21:34:46,508 INFO com.yuripe.normalizator.NormalypApplication [main] Started NormalypApplication in 4.546 seconds (JVM running for 5.471)
2023-04-17 21:34:49,619 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 21:34:49,621 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 21:34:49,624 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 21:34:49,629 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 21:34:49,629 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 21:34:49,630 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 21:34:49,630 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 21:34:49,630 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 21:34:49,639 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-4] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 21:34:49,644 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 21:34:49,646 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [BIGINT] - [1]
2023-04-17 21:34:49,650 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 21:34:49,651 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 21:34:49,651 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 21:34:49,652 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 21:34:54,370 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 21:34:54,415 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 21:34:54,441 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 21:34:54,454 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 21:34:54,464 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 21:34:54,470 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 21:34:54,482 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 21:34:54,496 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 21:34:54,504 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
2023-04-17 21:35:06,019 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-4] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.io.FileNotFoundException: C:\Users\yurip\git\normalyp\normalyp\BATCH_IN_FILES (Access is denied)
	at java.base/java.io.FileOutputStream.open0(Native Method)
	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
	at com.yuripe.core.library.services.FTPService.downloadFile(FTPService.java:76)
	at com.yuripe.normalizator.configurations.FTPServiceCustom.getFileFromSFTP(FTPServiceCustom.java:27)
	at com.yuripe.normalizator.controllers.BatchProxyController.launchJob(BatchProxyController.java:114)
	at com.yuripe.normalizator.controllers.BatchProxyController$$FastClassBySpringCGLIB$$2b534a0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.yuripe.normalizator.controllers.BatchProxyController$$EnhancerBySpringCGLIB$$af619c76.launchJob(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.yuripe.normalizator.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-17 21:35:41,983 DEBUG org.hibernate.SQL [http-nio-8080-exec-5] 
    select
        employee0_.employee_id as employee1_2_,
        employee0_.email as email2_2_,
        employee0_.name as name3_2_,
        employee0_.password as password4_2_,
        employee0_.surname as surname5_2_,
        employee0_.username as username6_2_ 
    from
        employees employee0_ 
    where
        employee0_.username=?
2023-04-17 21:35:41,984 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [VARCHAR] - [yuripetrillo2]
2023-04-17 21:35:41,986 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([employee1_2_] : [BIGINT]) - [1]
2023-04-17 21:35:41,986 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([email2_2_] : [VARCHAR]) - [yuripetrillo@yuripetrillo.it]
2023-04-17 21:35:41,986 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([name3_2_] : [VARCHAR]) - [yuri]
2023-04-17 21:35:41,986 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([password4_2_] : [VARCHAR]) - [$2a$10$i/FCLvbUCiaQSJYO.D3EC.zzWzCpSu9vus.GK61Da2S0zthohER96]
2023-04-17 21:35:41,986 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([surname5_2_] : [VARCHAR]) - [petrillo]
2023-04-17 21:35:41,987 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([username6_2_] : [VARCHAR]) - [yuripetrillo2]
2023-04-17 21:35:41,987 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-5] Created collection wrapper: [com.yuripe.normalizator.models.Employee.roles#1]
2023-04-17 21:35:41,987 DEBUG org.hibernate.SQL [http-nio-8080-exec-5] 
    select
        roles0_.employee_id as employee1_7_0_,
        roles0_.role_id as role_id2_7_0_,
        role1_.role_id as role_id1_5_1_,
        role1_.name as name2_5_1_ 
    from
        employee_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.role_id 
    where
        roles0_.employee_id=?
2023-04-17 21:35:41,988 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [BIGINT] - [1]
2023-04-17 21:35:41,989 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([role_id1_5_1_] : [INTEGER]) - [1]
2023-04-17 21:35:41,989 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([name2_5_1_] : [VARCHAR]) - [ROLE_USER]
2023-04-17 21:35:41,990 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([employee1_7_0_] : [BIGINT]) - [1]
2023-04-17 21:35:41,990 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([role_id2_7_0_] : [INTEGER]) - [1]
2023-04-17 21:35:43,980 DEBUG org.hibernate.SQL [http-nio-8080-exec-5] 
    select
        sftp0_.sftp_id as sftp_id1_6_,
        sftp0_.auth_type as auth_typ2_6_,
        sftp0_.code as code3_6_,
        sftp0_.host as host4_6_,
        sftp0_.password as password5_6_,
        sftp0_.port as port6_6_,
        sftp0_.username as username7_6_ 
    from
        sftp sftp0_ 
    where
        sftp0_.code=?
2023-04-17 21:35:43,984 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [VARCHAR] - [LOCALHOST]
2023-04-17 21:35:43,986 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([sftp_id1_6_] : [BIGINT]) - [1]
2023-04-17 21:35:43,986 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([auth_typ2_6_] : [VARCHAR]) - [PASSWORD]
2023-04-17 21:35:43,987 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([code3_6_] : [VARCHAR]) - [LOCALHOST]
2023-04-17 21:35:43,987 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([host4_6_] : [VARCHAR]) - [127.0.0.1]
2023-04-17 21:35:43,987 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([password5_6_] : [VARCHAR]) - [adminftp]
2023-04-17 21:35:43,987 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([port6_6_] : [INTEGER]) - [21]
2023-04-17 21:35:43,988 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([username7_6_] : [VARCHAR]) - [yuri]
